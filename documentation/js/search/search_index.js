var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.103,1,0.593]],["body/components/AppComponent.html",[0,0.138,1,0.881,2,0.937,3,0.224,4,0.185,5,0.705,6,0.705,7,0.705,8,0.705,9,0.185,10,1.82,11,0.753,12,1.239,13,0.705,14,1.731,15,1.398,16,1.592,17,1.041,18,3.897,19,1.041,20,3.276,21,0.391,22,1.428,23,3.897,24,3.897,25,3.897,26,2.122,27,0.522,28,1.368,29,4.305,30,4.305,31,0.402,32,2.217,33,4.305,34,3.897,35,2.344,36,1.894,37,1.687,38,3.497,39,0.814,40,3.276,41,0.634,42,0.042,43,0.541,44,0.753,45,0.634,46,3.276,47,2.217,48,0.621,49,1.001,50,2.217,51,2.217,52,2.092,53,2.092,54,2.344,55,2.217,56,1.592,57,2.217,58,0.869,59,3.026,60,2.217,61,0.548,62,0.224,63,2.217,64,2.217,65,1.558,66,3.276,67,0.966,68,0.224,69,0.264,70,0.705,71,1.698,72,2.217,73,2.217,74,1.558,75,2.217,76,2.217,77,2.217,78,2.217,79,2.217,80,2.217,81,2.217,82,3.276,83,2.217,84,2.217,85,1.82,86,3.276,87,0.514,88,1.055,89,3.947,90,2.689,91,4.305,92,1.375,93,3.276,94,2.689,95,1.234,96,2.303,97,2.689,98,2.689,99,1.239,100,2.217,101,2.217,102,2.217,103,2.217,104,2.217,105,3.026,106,2.217,107,2.217,108,2.217,109,2.217,110,2.217,111,2.217,112,3.276,113,2.217,114,1.558,115,2.217,116,2.217,117,3.276,118,2.217,119,2.217,120,0.569,121,1.041,122,0.705,123,1.368,124,0.705,125,0.705,126,0.454,127,0.705,128,0.454,129,0.705,130,0.402,131,0.705,132,0.402,133,0.705,134,0.454,135,0.705,136,0.402,137,0.454,138,0.705,139,0.454,140,0.569,141,0.705,142,0.402,143,0.705,144,0.402,145,0.705,146,0.705,147,0.015,148,0.022,149,0.015]],["title/modules/AppModule.html",[150,1.782,151,1.782]],["body/modules/AppModule.html",[1,1.124,3,0.233,4,0.193,9,0.193,15,0.594,42,0.042,56,1.125,61,0.707,62,0.233,68,0.233,69,0.276,120,0.594,126,0.999,128,0.999,130,0.885,132,0.885,134,0.999,136,0.885,137,0.692,139,0.999,140,0.868,142,0.885,144,0.885,147,0.016,148,0.023,149,0.016,150,1.423,151,3.644,152,1.26,153,1.423,154,3.28,155,3.28,156,3.28,157,1.627,158,1.9,159,1.9,160,1.9,161,1.9,162,1.9,163,2.659,164,2.659,165,2.776,166,1.9,167,1.627,168,2.314,169,2.776,170,3.381,171,2.079,172,1.26,173,2.776,174,2.314,175,2.314,176,3.381,177,2.314,178,3.381,179,2.314,180,3.381,181,2.314,182,3.381,183,2.314,184,2.314,185,3.381,186,2.314,187,2.314,188,1.9,189,1.423,190,1.9,191,3.381,192,2.314,193,1.9,194,1.423,195,1.9,196,2.314,197,2.314,198,3.381,199,3.381,200,1.423,201,3.381,202,2.314,203,2.314,204,3.381,205,2.314,206,2.314,207,1.9,208,1.423,209,1.9,210,3.381,211,2.314,212,3.381,213,2.314,214,3.381,215,3.995,216,1.26,217,3.381,218,1.627,219,1.627,220,3.381,221,2.314,222,3.28,223,1.423,224,1.9,225,2.314,226,1.627,227,2.314,228,3.381,229,2.314,230,1.423,231,1.9,232,2.314,233,1.627,234,2.314,235,2.314,236,2.314,237,2.314]],["title/modules/AppRoutingModule.html",[150,1.782,163,1.578]],["body/modules/AppRoutingModule.html",[0,0.189,3,0.333,4,0.275,9,0.275,42,0.042,61,0.681,62,0.333,67,1.44,68,0.333,69,0.394,87,0.516,95,0.848,130,0.785,132,0.876,136,0.785,137,0.886,142,0.599,144,0.785,147,0.022,148,0.029,149,0.022,152,1.799,157,2.323,163,2.357,169,2.713,173,3.554,188,2.713,189,2.032,190,2.713,193,2.713,194,2.032,195,2.713,207,2.713,208,2.032,209,2.713,222,3.554,223,2.032,224,2.713,230,2.032,231,2.713,238,3.304,239,3.304,240,2.969,241,4.329,242,2.969,243,3.304,244,3.304,245,2.969,246,3.304,247,2.323,248,3.304,249,1.799,250,5.561,251,2.713,252,2.713,253,4.329,254,3.554,255,2.713,256,3.554,257,3.304,258,3.304,259,3.304,260,3.304]],["title/components/GithubComponent.html",[0,0.103,126,0.593]],["body/components/GithubComponent.html",[0,0.171,1,0.675,2,1.236,3,0.333,4,0.275,5,1.048,6,1.048,7,1.048,8,1.048,9,0.275,11,0.993,12,1.533,13,1.048,14,1.855,15,1.498,17,1.374,19,1.374,21,0.393,27,0.689,28,1.627,31,0.875,39,0.689,42,0.041,43,0.6,48,0.526,49,1.11,61,0.393,62,0.333,68,0.333,69,0.393,87,0.516,88,0.758,90,4.203,92,1.236,95,1.314,99,1.048,120,0.846,121,1.374,122,1.048,123,1.627,124,1.048,125,1.048,126,1.048,127,1.048,128,0.675,129,1.048,130,0.598,131,1.048,132,0.598,133,1.048,134,0.675,135,1.048,136,0.598,137,0.675,138,1.048,139,0.675,140,0.846,141,1.048,142,0.598,143,1.048,144,0.598,145,1.048,146,1.048,147,0.022,148,0.029,149,0.022,261,2.707,262,4.823,263,4.323,264,3.297,265,3.297,266,2.658]],["title/components/GmailComponent.html",[0,0.103,128,0.593]],["body/components/GmailComponent.html",[0,0.171,1,0.675,2,1.236,3,0.333,4,0.275,5,1.048,6,1.048,7,1.048,8,1.048,9,0.275,11,0.993,12,1.533,13,1.048,14,1.855,15,1.498,17,1.374,19,1.374,21,0.393,27,0.689,28,1.627,31,0.875,39,0.689,42,0.041,43,0.6,48,0.526,49,1.11,61,0.393,62,0.333,68,0.333,69,0.393,87,0.516,88,0.758,92,1.236,94,4.203,95,1.314,99,1.048,120,0.846,121,1.374,122,1.048,123,1.627,124,1.048,125,1.048,126,0.675,127,1.048,128,1.048,129,1.048,130,0.598,131,1.048,132,0.598,133,1.048,134,0.675,135,1.048,136,0.598,137,0.675,138,1.048,139,0.675,140,0.846,141,1.048,142,0.598,143,1.048,144,0.598,145,1.048,146,1.048,147,0.022,148,0.029,149,0.022,266,2.658,267,2.707,268,4.823,269,4.323,270,3.297,271,3.297]],["title/components/HomePageComponent.html",[0,0.103,130,0.526]],["body/components/HomePageComponent.html",[0,0.168,1,0.651,2,1.207,3,0.321,4,0.265,5,1.011,6,1.011,7,1.011,8,1.011,9,0.265,11,0.97,12,1.506,13,1.011,14,1.845,15,1.49,17,1.342,19,1.342,21,0.379,27,0.673,28,1.604,31,0.859,39,0.673,42,0.04,43,0.586,48,0.507,49,1.084,59,2.968,61,0.379,62,0.321,68,0.321,69,0.379,87,0.504,88,0.731,92,1.207,95,1.296,99,1.778,120,0.817,121,1.342,122,1.011,123,1.604,124,1.011,125,1.011,126,0.651,127,1.011,128,0.651,129,1.011,130,0.915,131,1.011,132,0.577,133,1.011,134,0.651,135,1.011,136,0.577,137,0.651,138,1.011,139,0.651,140,0.817,141,1.011,142,0.577,143,1.011,144,0.577,145,1.011,146,1.011,147,0.022,148,0.029,149,0.022,189,2.914,272,3.89,273,2.611,274,4.222,275,4.739,276,4.222,277,3.18,278,3.18,279,4.222,280,4.222,281,4.222]],["title/injectables/HttpService.html",[37,1.136,282,0.921]],["body/injectables/HttpService.html",[3,0.189,4,0.156,9,0.156,16,0.911,21,0.224,27,0.749,31,0.34,36,1.403,37,1.131,39,0.793,41,1.29,42,0.042,43,0.626,44,1.036,45,1.29,48,0.81,58,1.951,61,0.472,62,0.189,68,0.189,69,0.224,70,0.596,87,0.679,88,1.036,95,1.015,98,2.37,147,0.013,148,0.02,149,0.013,200,1.152,249,2.325,251,2.89,282,0.917,283,1.152,284,1.539,285,2.886,286,3.246,287,2.886,288,2.37,289,3.954,290,3.954,291,2.886,292,2.029,293,1.152,294,3.246,295,1.874,296,2.886,297,1.874,298,2.37,299,1.874,300,5.082,301,3.411,302,2.37,303,2.886,304,2.886,305,2.886,306,2.886,307,2.215,308,2.886,309,2.559,310,2.37,311,3.52,312,2.886,313,1.874,314,3.703,315,2.773,316,3.573,317,1.922,318,2.886,319,4.699,320,1.874,321,2.37,322,2.886,323,1.922,324,2.78,325,1.874,326,1.874,327,2.886,328,2.886,329,2.886,330,2.37,331,2.886,332,1.874,333,2.37,334,2.37,335,2.886,336,2.886,337,3.52,338,2.37,339,2.886,340,2.164,341,1.874,342,2.029,343,1.775,344,2.37,345,4.51,346,1.318,347,1.539,348,1.874,349,1.021,350,5.082,351,3.505,352,1.221,353,5.082,354,5.082,355,5.082,356,4.27,357,4.27,358,1.874,359,3.171,360,2.626,361,2.886,362,1.874,363,1.874,364,1.874,365,1.874,366,2.89,367,1.874,368,1.874,369,1.874]],["title/components/SpotifyHomeComponent.html",[0,0.103,132,0.526]],["body/components/SpotifyHomeComponent.html",[0,0.128,1,0.4,2,0.852,3,0.197,4,0.163,5,0.621,6,0.621,7,0.621,8,0.621,9,0.163,11,0.685,12,1.148,13,0.621,14,1.684,15,1.36,17,0.947,19,0.947,21,0.233,22,1.298,27,0.475,28,1.284,31,0.354,35,2.597,36,1.448,37,1.584,39,0.845,41,1.155,42,0.042,43,0.636,44,1.096,45,1.155,48,0.693,49,1.117,52,2.228,53,2.228,54,2.2,56,1.755,58,1.705,61,0.482,62,0.197,68,0.197,69,0.233,70,0.621,71,0.851,74,1.373,85,2.446,87,0.355,88,0.449,92,1.033,95,1.341,96,2.094,97,2.446,99,1.148,120,0.501,121,0.947,122,0.621,123,1.284,124,0.621,125,0.621,126,0.4,127,0.621,128,0.4,129,0.621,130,0.354,131,0.621,132,0.733,133,0.621,134,0.4,135,0.621,136,0.354,137,0.4,138,0.621,139,0.4,140,0.501,141,0.621,142,0.354,143,0.621,144,0.354,145,0.621,146,0.621,147,0.013,148,0.02,149,0.013,216,1.064,223,3.298,293,1.201,307,0.851,323,0.949,352,0.852,370,3.298,371,1.603,372,3.612,373,2.979,374,3.612,375,3.764,376,3.612,377,3.612,378,3.612,379,3.612,380,2.979,381,3.317,382,2.446,383,2.979,384,2.979,385,2.979,386,1.953,387,1.953,388,1.953,389,2.446,390,1.953,391,1.603,392,2.979,393,1.953,394,1.603,395,1.953,396,1.953,397,1.953,398,1.953,399,1.953,400,1.953,401,1.953,402,1.953,403,1.953,404,2.979,405,1.832,406,1.832,407,3.612,408,2.979,409,1.953,410,1.953,411,1.603,412,1.953,413,3.612,414,1.953,415,1.953,416,1.953,417,1.953,418,2.979,419,2.979,420,1.953,421,2.979,422,2.979,423,2.446,424,1.953,425,1.953,426,1.373,427,1.953,428,1.953,429,1.953,430,1.953,431,1.953,432,1.953,433,1.953,434,1.953,435,1.953,436,1.953,437,1.953,438,1.953,439,1.953]],["title/interceptors/SpotifyInterceptor.html",[164,1.578,440,2.379]],["body/interceptors/SpotifyInterceptor.html",[3,0.297,4,0.246,9,0.246,11,0.677,21,0.352,27,0.639,31,0.534,37,1.918,39,0.639,41,1.147,42,0.042,43,0.557,44,0.922,45,1.147,48,0.47,61,0.584,62,0.297,65,2.072,68,0.297,69,0.352,70,0.937,87,0.479,137,0.603,147,0.02,148,0.027,149,0.02,164,2.184,200,1.812,282,1.275,307,1.748,309,3.036,317,1.432,338,3.743,343,1.812,351,2.42,352,1.464,441,2.947,442,2.42,443,4.011,444,3.743,445,3.743,446,5.12,447,4.011,448,4.011,449,2.947,450,2.947,451,4.011,452,4.011,453,4.894,454,4.56,455,4.894,456,2.947,457,4.011,458,3.205,459,2.947,460,4.011,461,1.605,462,2.947,463,2.947,464,2.947,465,2.947,466,2.947,467,2.947,468,2.82,469,4.011,470,4.011,471,4.011,472,4.011,473,2.82,474,2.947,475,2.42,476,2.947,477,2.947,478,2.947,479,2.42,480,2.947,481,2.42,482,2.42,483,2.42,484,2.947,485,2.947,486,2.947,487,2.947]],["title/components/SpotifySearchComponent.html",[0,0.103,134,0.593]],["body/components/SpotifySearchComponent.html",[0,0.168,1,0.654,2,1.211,3,0.322,4,0.266,5,1.015,6,1.015,7,1.015,8,1.015,9,0.266,11,0.973,12,1.509,13,1.015,14,1.846,15,1.491,17,1.346,19,1.346,21,0.381,27,0.675,28,1.607,31,0.861,39,0.675,42,0.04,43,0.587,48,0.509,49,1.087,61,0.381,62,0.322,68,0.322,69,0.381,87,0.505,88,0.734,92,1.211,95,1.5,99,1.015,120,0.82,121,1.346,122,1.015,123,1.607,124,1.015,125,1.015,126,0.654,127,1.015,128,0.654,129,1.015,130,0.579,131,1.015,132,0.579,133,1.015,134,1.035,135,1.015,136,0.579,137,0.654,138,1.015,139,0.654,140,0.82,141,1.015,142,0.579,143,1.015,144,0.579,145,1.015,146,1.015,147,0.022,148,0.029,149,0.022,226,3.338,266,2.603,321,4.151,488,3.898,489,2.622,490,4.748,491,4.233,492,3.194,493,3.194]],["title/injectables/SpotifyService.html",[35,1.578,282,0.921]],["body/injectables/SpotifyService.html",[3,0.323,4,0.267,9,0.267,16,1.555,21,0.382,27,0.676,31,0.58,35,2.308,36,2.06,39,0.807,41,1.359,42,0.042,43,0.66,44,1.092,45,1.359,48,0.839,49,0.822,56,2.06,58,2.12,61,0.567,62,0.323,68,0.323,69,0.382,70,1.017,147,0.022,148,0.029,149,0.022,200,1.968,282,1.347,283,1.968,286,4.154,293,1.968,294,4.154,307,1.847,309,2.755,334,3.48,347,2.627,349,1.743,352,1.359,366,2.627,382,3.48,389,3.48,391,2.627,444,3.48,445,3.48,468,3.341,473,2.25,494,2.627,495,4.239,496,3.2,497,3.2,498,2.98,499,2.308,500,4.239,501,2.25,502,4.239,503,3.2,504,4.239,505,3.2,506,3.2,507,2.25,508,2.25,509,2.25,510,3.2,511,3.2,512,3.2,513,3.2,514,3.2]],["title/components/SpotifyStoreTokenComponent.html",[0,0.103,136,0.526]],["body/components/SpotifyStoreTokenComponent.html",[0,0.158,1,0.579,2,1.115,3,0.285,4,0.236,5,0.899,6,0.899,7,0.899,8,0.899,9,0.236,11,0.896,12,1.418,13,0.899,14,1.811,15,1.463,17,1.239,19,1.239,21,0.337,27,0.621,28,1.529,31,0.513,38,3.757,39,0.621,41,0.809,42,0.041,43,0.619,44,0.65,45,0.809,48,0.451,49,1.001,61,0.465,62,0.285,67,1.232,68,0.285,69,0.337,70,0.899,71,1.232,87,0.465,88,0.65,92,1.115,95,1.482,99,0.899,120,0.726,121,1.239,122,0.899,123,1.529,124,0.899,125,0.899,126,0.579,127,0.899,128,0.579,129,0.899,130,0.513,131,0.899,132,0.513,133,0.899,134,0.579,135,0.899,136,0.872,137,1.194,138,0.899,139,0.579,140,0.726,141,0.899,142,0.513,143,0.899,144,0.513,145,0.899,146,0.899,147,0.019,148,0.027,149,0.019,230,2.744,266,2.397,309,2.619,352,0.809,370,2.744,468,1.988,479,2.321,481,2.321,482,2.321,483,2.321,515,2.321,516,4.462,517,3.899,518,2.828,519,3.948,520,2.828,521,2.397,522,2.828,523,2.828,524,2.828,525,3.899,526,2.828,527,2.828,528,2.828,529,2.828]],["title/guards/SpotifyTokenGuard.html",[242,1.782,530,2.037]],["body/guards/SpotifyTokenGuard.html",[3,0.366,4,0.303,9,0.303,11,0.835,16,1.766,21,0.434,27,0.734,39,0.579,41,1.039,42,0.042,43,0.504,44,0.835,45,1.039,48,0.579,56,1.766,61,0.603,62,0.366,67,1.584,68,0.366,69,0.434,147,0.025,148,0.031,149,0.025,242,2.83,249,2.506,256,4.498,282,1.463,307,1.584,309,1.979,349,1.979,458,3.551,461,1.979,473,2.555,501,3.236,521,2.83,531,2.555,532,3.779,533,2.983,534,3.634,535,4.36,536,4.147,537,4.36,538,3.634,539,3.779,540,5.052,541,3.634,542,3.634,543,3.634,544,3.634]],["title/components/SpotifyUserInfoComponent.html",[0,0.103,139,0.593]],["body/components/SpotifyUserInfoComponent.html",[0,0.164,1,0.62,2,1.168,3,0.466,4,0.252,5,0.963,6,0.963,7,0.963,8,0.963,9,0.252,11,0.939,12,1.47,13,0.963,14,1.831,15,1.479,17,1.299,19,1.299,21,0.361,22,1.781,27,0.651,28,1.573,31,0.838,39,0.737,42,0.041,43,0.567,48,0.483,49,1.049,52,1.472,53,1.472,54,2.225,61,0.361,62,0.305,68,0.305,69,0.361,87,0.487,88,0.696,92,1.168,95,1.468,99,0.963,120,0.778,121,1.299,122,0.963,123,1.573,124,0.963,125,0.963,126,0.62,127,0.963,128,0.62,129,0.963,130,0.549,131,0.963,132,0.549,133,0.963,134,0.62,135,0.963,136,0.549,137,0.62,138,0.963,139,1.013,140,1.51,141,0.963,142,0.549,143,0.963,144,0.549,145,0.963,146,0.963,147,0.021,148,0.028,149,0.021,233,3.479,370,3.043,545,2.487,546,4.624,547,4.086,548,4.624,549,4.086,550,3.029]],["title/interfaces/Todo.html",[87,0.346,551,1.782]],["body/interfaces/Todo.html",[3,0.359,4,0.296,9,0.296,21,0.424,22,1.979,26,3.031,42,0.041,44,1.251,58,2.267,68,0.359,87,0.7,92,1.017,147,0.024,148,0.031,149,0.024,315,2.792,317,1.729,323,2.705,330,2.921,499,3.031,501,3.516,551,2.792,552,3.558,553,2.921,554,3.558,555,3.558,556,3.704,557,3.24,558,5.002,559,3.728,560,4.541,561,4.541,562,4.541,563,4.541]],["title/guards/TodoDataResolverService.html",[245,1.782,530,2.037]],["body/guards/TodoDataResolverService.html",[3,0.266,4,0.219,9,0.219,11,0.605,16,1.279,21,0.314,26,1.434,27,0.591,31,0.477,36,2.478,37,1.827,39,0.591,41,1.061,42,0.042,43,0.515,44,0.852,45,1.061,48,0.42,54,1.434,61,0.608,62,0.266,65,1.851,67,1.147,68,0.266,69,0.314,70,0.837,71,1.147,87,0.689,88,0.852,105,2.608,147,0.018,148,0.025,149,0.018,245,2.281,247,3.919,249,1.434,252,3.828,254,3.828,255,3.828,282,1.179,301,2.608,307,2.032,310,3.045,317,1.803,323,1.279,333,3.045,340,1.619,346,1.851,349,1.434,352,1.061,360,2.281,498,3.278,499,1.434,509,1.851,521,1.619,531,1.851,535,3.828,536,3.526,537,3.828,539,3.045,556,1.851,557,1.619,564,3.526,565,2.161,566,3.709,567,3.045,568,4.186,569,3.709,570,3.709,571,3.709,572,3.709,573,3.709,574,4.392,575,3.709,576,3.709,577,3.709,578,2.161,579,2.266,580,2.633,581,3.019,582,3.709,583,2.633,584,2.633,585,1.851,586,2.633,587,2.633,588,2.633,589,3.709,590,2.633,591,2.633,592,2.633,593,2.633,594,2.633,595,2.633,596,2.633]],["title/components/TodoEditComponent.html",[0,0.103,142,0.526]],["body/components/TodoEditComponent.html",[0,0.134,1,0.431,2,0.902,3,0.212,4,0.176,5,0.67,6,0.67,7,0.67,8,0.67,9,0.176,11,0.725,12,1.202,13,0.67,14,1.712,15,1.383,17,1.003,19,1.003,21,0.251,22,1.375,26,2.74,27,0.503,28,1.335,31,0.382,38,3.439,39,0.802,41,0.602,42,0.042,43,0.525,44,0.965,45,0.602,48,0.503,49,0.971,52,2.04,53,2.04,54,1.718,56,1.024,58,1.646,61,0.563,62,0.212,67,0.918,68,0.212,69,0.251,70,0.67,71,1.648,87,0.661,88,0.725,92,1.201,95,1.078,99,0.67,120,0.541,121,1.003,122,0.67,123,1.335,124,0.67,125,0.67,126,0.431,127,0.67,128,0.431,129,0.67,130,0.382,131,0.67,132,0.382,133,0.67,134,0.431,135,0.67,136,0.382,137,0.431,138,0.67,139,0.431,140,0.541,141,0.67,142,0.761,143,0.67,144,0.382,145,0.67,146,0.67,147,0.014,148,0.021,149,0.014,171,1.295,172,1.147,208,3.163,216,1.147,323,2.04,324,3.161,352,1.541,375,4.223,405,1.94,406,1.94,499,1.718,519,3.447,521,2.325,556,2.218,557,1.94,578,1.729,579,2.04,581,2.218,585,1.481,597,4.223,598,1.729,599,3.781,600,3.154,601,4.496,602,3.781,603,3.781,604,3.781,605,3.781,606,4.199,607,3.781,608,2.107,609,2.107,610,2.107,611,2.107,612,2.107,613,2.107,614,2.107,615,3.781,616,4.199,617,3.154,618,2.107,619,1.295,620,2.107,621,1.729,622,2.107,623,2.107,624,2.107,625,2.107,626,2.107,627,2.107,628,2.107,629,2.107,630,2.107,631,2.107,632,2.107,633,2.107,634,3.154,635,2.218,636,2.107,637,3.154,638,2.107,639,2.107,640,3.154]],["title/components/TodoListComponent.html",[0,0.103,144,0.526]],["body/components/TodoListComponent.html",[0,0.118,1,0.353,2,0.774,3,0.174,4,0.144,5,0.548,6,0.548,7,0.548,8,0.548,9,0.144,11,0.622,12,1.061,13,0.548,14,1.635,15,1.321,17,0.86,19,0.86,21,0.206,22,1.179,26,2.841,27,0.431,28,1.202,31,0.313,39,0.774,41,0.774,42,0.042,43,0.525,44,1.001,45,0.774,48,0.603,49,1.054,52,1.622,53,1.622,58,1.308,61,0.52,62,0.174,68,0.174,69,0.206,70,0.548,71,1.179,74,2.347,87,0.675,88,1.182,89,3.372,92,0.774,95,0.971,96,1.902,99,0.548,114,1.212,120,0.443,121,0.86,122,0.548,123,1.202,124,0.548,125,0.548,126,0.353,127,0.548,128,0.353,129,0.548,130,0.313,131,0.548,132,0.313,133,0.548,134,0.353,135,0.548,136,0.313,137,0.353,138,0.548,139,0.353,140,0.443,141,0.548,142,0.313,143,0.548,144,0.686,145,0.548,146,0.548,147,0.012,148,0.018,149,0.012,171,1.06,172,0.939,194,3.053,218,1.212,219,1.212,292,2.658,302,2.221,314,3.104,315,2.325,316,2.658,317,1.315,323,1.996,324,1.902,340,2.525,342,1.902,343,2.325,344,1.415,352,0.774,359,3.204,360,2.325,381,3.104,405,1.06,406,2.053,423,2.221,426,1.902,461,0.939,475,2.221,499,2.237,567,2.221,568,3.874,574,2.221,579,1.837,581,2.658,585,1.212,619,1.06,621,1.415,635,1.212,641,4.076,642,1.415,643,3.338,644,3.338,645,2.705,646,3.338,647,3.372,648,2.74,649,2.221,650,1.724,651,3.781,652,3.104,653,2.705,654,3.338,655,2.705,656,2.705,657,2.705,658,3.104,659,2.221,660,1.724,661,2.705,662,1.724,663,2.705,664,2.705,665,2.705,666,1.724,667,1.724,668,2.221,669,4.107,670,3.781,671,2.705,672,2.705,673,2.705,674,2.221,675,2.221,676,1.724,677,4.107,678,1.724,679,2.705,680,2.705,681,2.705,682,1.724,683,1.724,684,1.724,685,1.724,686,1.724,687,1.724,688,1.724,689,1.415,690,1.724,691,1.724,692,1.724,693,1.724,694,1.724,695,1.415,696,1.415,697,1.724,698,2.705,699,2.705,700,2.705,701,2.221,702,3.781,703,1.724,704,1.724,705,1.415,706,1.724,707,1.724]],["title/injectables/TodoListService.html",[282,0.921,579,1.408]],["body/injectables/TodoListService.html",[3,0.223,4,0.184,9,0.184,16,1.076,21,0.264,22,1.426,27,0.522,31,0.401,36,1.59,37,1.686,39,0.868,41,1.374,42,0.042,43,0.667,44,1.173,45,1.374,48,0.814,49,1,52,1.892,53,1.892,58,2.043,61,0.573,62,0.223,68,0.223,69,0.264,70,0.704,71,0.965,87,0.633,88,0.752,147,0.015,148,0.022,149,0.015,216,1.205,218,1.556,219,1.556,249,1.205,282,1.04,283,1.361,288,2.687,292,3.024,293,1.361,298,1.817,307,2.094,315,2.012,316,1.556,317,1.076,340,2.645,342,2.301,343,2.012,346,1.556,349,1.205,352,0.936,359,2.737,360,1.361,394,1.817,405,1.361,406,2.012,458,1.556,461,1.205,507,2.301,508,2.301,509,1.556,557,1.361,579,1.59,619,3.381,635,1.556,647,3.196,648,3.196,649,2.687,652,3.532,658,3.769,659,2.687,668,2.687,674,2.687,689,2.687,695,1.817,696,1.817,701,1.817,708,1.817,709,3.273,710,3.273,711,4.302,712,4.302,713,3.273,714,3.273,715,3.273,716,2.213,717,2.213,718,3.273,719,2.213,720,3.273,721,4.302,722,3.273,723,2.213,724,3.273,725,2.213,726,2.213,727,3.273,728,2.213,729,2.213,730,4.302,731,2.213,732,3.894,733,2.213,734,2.213,735,2.213,736,3.273,737,2.213,738,3.273,739,2.213,740,2.213,741,2.213,742,2.213,743,2.213,744,2.213,745,2.213,746,2.213,747,2.213,748,2.213,749,3.273,750,2.213,751,2.213,752,1.817,753,2.213,754,2.213]],["title/coverage.html",[755,3.255]],["body/coverage.html",[0,0.205,1,0.687,9,0.28,10,2.754,35,1.827,37,1.315,42,0.041,44,0.771,87,0.4,105,4.058,126,0.687,128,0.687,130,0.608,132,0.608,134,0.687,136,0.608,137,0.895,139,0.687,140,1.123,142,0.608,144,0.608,147,0.023,148,0.03,149,0.023,164,1.827,189,2.063,194,2.063,208,2.063,223,2.063,226,2.358,230,2.063,233,2.358,242,2.063,245,2.063,247,2.358,261,2.754,267,2.754,272,2.754,273,2.754,282,1.546,284,2.754,352,0.959,370,2.991,371,2.754,440,2.754,442,2.754,488,2.754,489,2.754,494,2.754,515,2.754,530,3.074,532,2.754,533,2.754,545,2.754,551,2.063,553,2.754,564,2.754,565,2.754,579,1.63,597,2.754,598,2.754,619,2.063,641,2.754,642,2.754,675,2.754,705,2.754,708,2.754,755,2.754,756,3.355,757,3.355,758,3.355,759,4.372,760,5.345,761,3.355,762,4.372,763,4.372,764,3.355,765,3.355,766,3.355,767,3.355,768,3.355,769,3.355,770,3.355,771,3.355,772,3.355,773,3.355,774,3.355,775,3.355]],["title/dependencies.html",[153,2.145,776,2.416]],["body/dependencies.html",[42,0.041,62,0.422,67,1.822,147,0.028,148,0.034,149,0.028,153,2.571,171,3.086,172,2.733,216,2.276,461,2.276,777,4.181,778,5.906,779,4.181,780,5.018,781,4.181,782,4.181,783,4.181,784,4.181,785,4.181,786,4.181,787,4.181,788,4.181,789,4.181]],["title/index.html",[21,0.288,790,2.416,791,2.416]],["body/index.html",[0,0.18,4,0.307,15,0.946,42,0.032,43,0.512,59,2.592,147,0.025,148,0.032,149,0.025,167,2.592,301,3.265,352,1.054,426,4.009,498,2.592,559,3.026,752,4.175,792,4.645,793,3.687,794,5.085,795,5.085,796,3.687,797,3.687,798,5.503,799,3.687,800,3.687,801,3.687,802,3.687,803,3.687,804,3.687,805,3.687,806,3.687,807,3.687,808,3.687,809,5.085,810,3.687,811,5.503,812,3.687,813,3.687,814,3.687,815,3.687,816,3.687,817,3.687,818,3.687,819,4.645,820,4.645,821,5.338,822,3.687,823,4.645,824,4.645,825,3.687,826,5.338,827,3.687,828,3.687,829,3.687,830,5.085,831,3.687,832,3.687,833,3.687]],["title/modules.html",[152,2.159]],["body/modules.html",[42,0.036,147,0.031,148,0.036,149,0.031,151,2.826,152,2.502,163,2.502,172,2.502,834,4.595,835,4.595,836,5.306,837,4.595,838,4.595]],["title/overview.html",[839,3.255]],["body/overview.html",[1,1.157,2,1.013,42,0.041,114,2.49,120,0.909,126,1.022,128,1.022,130,0.905,132,0.905,134,1.022,136,0.905,139,1.022,142,0.905,144,0.905,147,0.024,148,0.031,149,0.024,150,2.178,151,3.752,152,1.928,153,2.178,154,2.907,155,2.907,156,2.907,157,2.49,158,2.907,159,2.907,160,2.907,161,2.907,162,2.907,163,2.718,164,2.718,165,3.717,166,2.907,167,2.49,240,2.178,283,2.178,411,2.907,507,2.49,508,3.183,531,2.49,551,2.178,839,2.907,840,3.541]],["title/routes.html",[240,2.438]],["body/routes.html",[42,0.037,147,0.032,148,0.037,149,0.032,240,2.904]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["0/13",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":507,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["1/3",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["10.1.1",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["1000)).tostring",{"_index":483,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["15",{"_index":705,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["2",{"_index":508,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["2.0.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":696,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["3",{"_index":411,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"overview.html":{}}}],["33",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":482,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["50",{"_index":704,"title":{},"body":{"components/TodoListComponent.html":{}}}],["599px",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["6.5.4",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":840,"title":{},"body":{"overview.html":{}}}],["7/10",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["9.1.9",{"_index":796,"title":{},"body":{"index.html":{}}}],["__v",{"_index":556,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["_id",{"_index":557,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{}}}],["_snackbar",{"_index":651,"title":{},"body":{"components/TodoListComponent.html":{}}}],["absolute",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["access",{"_index":353,"title":{},"body":{"injectables/HttpService.html":{}}}],["activatedroute",{"_index":519,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":535,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["actual_component",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["add",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["added",{"_index":639,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["addnewtodo",{"_index":285,"title":{},"body":{"injectables/HttpService.html":{}}}],["addnewtodo(newtododata",{"_index":296,"title":{},"body":{"injectables/HttpService.html":{}}}],["addtodo",{"_index":709,"title":{},"body":{"injectables/TodoListService.html":{}}}],["addtodo(newtododata",{"_index":715,"title":{},"body":{"injectables/TodoListService.html":{}}}],["alert('nav",{"_index":528,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["align",{"_index":436,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["allow",{"_index":355,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular",{"_index":794,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["angular/compiler",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["angular/material/table",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"dependencies.html":{}}}],["api",{"_index":335,"title":{},"body":{"injectables/HttpService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["app.component",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":151,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":163,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":340,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["artifacts",{"_index":812,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":471,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["automatically",{"_index":803,"title":{},"body":{"index.html":{}}}],["available",{"_index":838,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["bearer",{"_index":472,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["between",{"_index":435,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["boolean",{"_index":501,"title":{},"body":{"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{}}}],["bootstrap",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["bpobserver",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["bpobserver.ismatched('(max",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpointobserver",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":836,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":811,"title":{},"body":{"index.html":{}}}],["call",{"_index":333,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["calls",{"_index":300,"title":{},"body":{"injectables/HttpService.html":{}}}],["canactivate",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{}}}],["canactivate(route",{"_index":534,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["cases",{"_index":753,"title":{},"body":{"injectables/TodoListService.html":{}}}],["center",{"_index":438,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["change",{"_index":805,"title":{},"body":{"index.html":{}}}],["check",{"_index":498,"title":{},"body":{"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"index.html":{}}}],["checks",{"_index":443,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["checkspotifystatus",{"_index":286,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["class",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["cleanup",{"_index":664,"title":{},"body":{"components/TodoListComponent.html":{}}}],["cli",{"_index":795,"title":{},"body":{"index.html":{}}}],["click",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["clickable",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["clientid",{"_index":304,"title":{},"body":{"injectables/HttpService.html":{}}}],["clientsecret",{"_index":305,"title":{},"body":{"injectables/HttpService.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":807,"title":{},"body":{"index.html":{}}}],["col",{"_index":702,"title":{},"body":{"components/TodoListComponent.html":{}}}],["columns",{"_index":673,"title":{},"body":{"components/TodoListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:todoeditcomponent",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["components/spotify/spotify",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["components/todolist/todo",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["componenttitle",{"_index":601,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["confirm",{"_index":640,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["console",{"_index":683,"title":{},"body":{"components/TodoListComponent.html":{}}}],["console.log(tokendecoded",{"_index":544,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["const",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HttpService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(bpobserver",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":293,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["constructor(httpsvc",{"_index":449,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["constructor(private",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(route",{"_index":518,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["constructor(titleservice",{"_index":650,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(todosvc",{"_index":578,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["container",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":323,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["context",{"_index":571,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["context_uri",{"_index":513,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["control",{"_index":354,"title":{},"body":{"injectables/HttpService.html":{}}}],["controls",{"_index":670,"title":{},"body":{"components/TodoListComponent.html":{}}}],["coverage",{"_index":755,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":572,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["currelement",{"_index":374,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["current",{"_index":343,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["currid",{"_index":602,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currtodo",{"_index":603,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currtodo._id",{"_index":596,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["cursor",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["data",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["data.find((currtodo",{"_index":595,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["data.todo",{"_index":630,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["data.todo._id",{"_index":628,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["date().gettime",{"_index":468,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["declarations",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["deep",{"_index":427,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["default",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["define",{"_index":655,"title":{},"body":{"components/TodoListComponent.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["defines",{"_index":672,"title":{},"body":{"components/TodoListComponent.html":{}}}],["delete",{"_index":314,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["deleted",{"_index":750,"title":{},"body":{"injectables/TodoListService.html":{}}}],["deletes",{"_index":661,"title":{},"body":{"components/TodoListComponent.html":{}}}],["deletetodo",{"_index":649,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodo(idtodo",{"_index":659,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodoelement",{"_index":287,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletetodoelement(idtodo",{"_index":312,"title":{},"body":{"injectables/HttpService.html":{}}}],["dependencies",{"_index":153,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":317,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["destroy",{"_index":663,"title":{},"body":{"components/TodoListComponent.html":{}}}],["dev",{"_index":800,"title":{},"body":{"index.html":{}}}],["development",{"_index":797,"title":{},"body":{"index.html":{}}}],["directive",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["directives",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":810,"title":{},"body":{"index.html":{}}}],["directory",{"_index":815,"title":{},"body":{"index.html":{}}}],["display:flex",{"_index":431,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["displayed",{"_index":674,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displayedcolumns",{"_index":646,"title":{},"body":{"components/TodoListComponent.html":{}}}],["displayname",{"_index":380,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["displayname(element",{"_index":385,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["displays",{"_index":668,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displaysnackbar",{"_index":710,"title":{},"body":{"injectables/TodoListService.html":{}}}],["displaysnackbar(message",{"_index":718,"title":{},"body":{"injectables/TodoListService.html":{}}}],["dist",{"_index":814,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["don't",{"_index":420,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["don\\'t",{"_index":439,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["du",{"_index":281,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dummy",{"_index":730,"title":{},"body":{"injectables/TodoListService.html":{}}}],["duration",{"_index":695,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["dynamic",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":827,"title":{},"body":{"index.html":{}}}],["edit",{"_index":324,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit.component",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit.component.css",{"_index":599,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.html",{"_index":600,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts",{"_index":598,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:15",{"_index":611,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:16",{"_index":612,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:17",{"_index":614,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:18",{"_index":613,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:21",{"_index":618,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:27",{"_index":608,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:33",{"_index":609,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:49",{"_index":610,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit/todo",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoEditComponent.html":{},"coverage.html":{}}}],["edited",{"_index":636,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["editmode",{"_index":604,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edittodo",{"_index":288,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["edittodo(idtodo",{"_index":318,"title":{},"body":{"injectables/HttpService.html":{}}}],["edittodo(newtodo",{"_index":722,"title":{},"body":{"injectables/TodoListService.html":{}}}],["elem._id",{"_index":740,"title":{},"body":{"injectables/TodoListService.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["element.name",{"_index":416,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["empty",{"_index":573,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["end",{"_index":826,"title":{},"body":{"index.html":{}}}],["enlever",{"_index":685,"title":{},"body":{"components/TodoListComponent.html":{}}}],["entering",{"_index":569,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["environment",{"_index":347,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["environments/environment",{"_index":348,"title":{},"body":{"injectables/HttpService.html":{}}}],["error",{"_index":308,"title":{},"body":{"injectables/HttpService.html":{}}}],["etc",{"_index":478,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["example",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":823,"title":{},"body":{"index.html":{}}}],["expdate",{"_index":500,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["exports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["fetch",{"_index":576,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["fetchautocomplete",{"_index":495,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetchautocomplete(query",{"_index":502,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetches",{"_index":328,"title":{},"body":{"injectables/HttpService.html":{}}}],["fetchtodolist",{"_index":711,"title":{},"body":{"injectables/TodoListService.html":{}}}],["fetchtodosandthemes",{"_index":712,"title":{},"body":{"injectables/TodoListService.html":{}}}],["field",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["files",{"_index":806,"title":{},"body":{"index.html":{}}}],["flag",{"_index":817,"title":{},"body":{"index.html":{}}}],["form",{"_index":605,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formatted",{"_index":555,"title":{},"body":{"interfaces/Todo.html":{}}}],["formcontrol",{"_index":375,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{}}}],["formcontrol(false",{"_index":617,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formgroup",{"_index":615,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formsmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":701,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["full",{"_index":424,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["function",{"_index":665,"title":{},"body":{"components/TodoListComponent.html":{}}}],["further",{"_index":829,"title":{},"body":{"index.html":{}}}],["generate",{"_index":809,"title":{},"body":{"index.html":{}}}],["generated",{"_index":793,"title":{},"body":{"index.html":{}}}],["getspotifyauthurl",{"_index":289,"title":{},"body":{"injectables/HttpService.html":{}}}],["getting",{"_index":790,"title":{"index.html":{}},"body":{}}],["gettodo",{"_index":713,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":727,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodolist",{"_index":290,"title":{},"body":{"injectables/HttpService.html":{}}}],["github",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{}}}],["github'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["github.component.css",{"_index":262,"title":{},"body":{"components/GithubComponent.html":{}}}],["github.component.html",{"_index":263,"title":{},"body":{"components/GithubComponent.html":{}}}],["githubcomponent",{"_index":126,"title":{"components/GithubComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gmail",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{}}}],["gmail'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["gmail.component.css",{"_index":268,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmail.component.html",{"_index":269,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmailcomponent",{"_index":128,"title":{"components/GmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["go",{"_index":832,"title":{},"body":{"index.html":{}}}],["graph",{"_index":837,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":530,"title":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":531,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"overview.html":{}}}],["guards/spotify",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handle",{"_index":751,"title":{},"body":{"injectables/TodoListService.html":{}}}],["handled",{"_index":563,"title":{},"body":{"interfaces/Todo.html":{}}}],["headers",{"_index":351,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["height:5vh",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["height:95vh",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":830,"title":{},"body":{"index.html":{}}}],["here",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["home",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home.component.css",{"_index":372,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.html",{"_index":373,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts",{"_index":371,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:12",{"_index":398,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:13",{"_index":399,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:14",{"_index":396,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:15",{"_index":397,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:16",{"_index":400,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:17",{"_index":384,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:20",{"_index":388,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:51",{"_index":387,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:56",{"_index":393,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:61",{"_index":386,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:66",{"_index":390,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home/spotify",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyHomeComponent.html":{},"coverage.html":{}}}],["homepage",{"_index":280,"title":{},"body":{"components/HomePageComponent.html":{}}}],["homepagecomponent",{"_index":130,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["http.service",{"_index":734,"title":{},"body":{"injectables/TodoListService.html":{}}}],["http://localhost:4200",{"_index":802,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":294,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["httpclientmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":459,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httphandler",{"_index":455,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httpheaders",{"_index":345,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpinterceptor",{"_index":460,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httprequest",{"_index":453,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httpservice",{"_index":37,"title":{"injectables/HttpService.html":{}},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["httpsvc",{"_index":451,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["id",{"_index":315,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Todo.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["identifier",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["idtodo",{"_index":316,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(!localstorage.getitem('spotifytoken",{"_index":403,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["if(!todoid",{"_index":591,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(data.todo._id",{"_index":625,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(localstorage.getitem('spotifytoken",{"_index":464,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(newvalue.length",{"_index":410,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["if(params.token",{"_index":524,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["if(parseint(localstorage.getitem('spotifyexp",{"_index":467,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(req.url.includes('spotify",{"_index":462,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(response.status",{"_index":405,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(status",{"_index":741,"title":{},"body":{"injectables/TodoListService.html":{}}}],["if(this.editmode",{"_index":632,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(this.todosvc.todos.length",{"_index":592,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(token",{"_index":541,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["if(val",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["if(val.url.includes('/spotify/logged",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["import(\"rxjs\").observable",{"_index":588,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["important",{"_index":432,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["imports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["info'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["info.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["info.component.css",{"_index":546,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.html",{"_index":547,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.ts",{"_index":545,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:12",{"_index":550,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.ts:9",{"_index":549,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info/spotify",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["injectable",{"_index":282,"title":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["injectables",{"_index":283,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["instanceof",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":448,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["intercept(req",{"_index":452,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptor",{"_index":440,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":441,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptors/spotify.interceptor",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":551,"title":{"interfaces/Todo.html":{}},"body":{"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":552,"title":{},"body":{"interfaces/Todo.html":{}}}],["isloggedonspotify",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["issmallscreen",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":437,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["justify",{"_index":433,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["jwt_decode(token",{"_index":543,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["karma",{"_index":825,"title":{},"body":{"index.html":{}}}],["la",{"_index":279,"title":{},"body":{"components/HomePageComponent.html":{}}}],["left",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["linked",{"_index":679,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":644,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.html",{"_index":645,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts",{"_index":642,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":678,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:25",{"_index":682,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:30",{"_index":676,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:35",{"_index":653,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:48",{"_index":666,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:64",{"_index":662,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:71",{"_index":667,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:87",{"_index":660,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.service",{"_index":585,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["list.service.ts",{"_index":708,"title":{},"body":{"injectables/TodoListService.html":{},"coverage.html":{}}}],["list.service.ts:12",{"_index":733,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:13",{"_index":731,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:15",{"_index":714,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:18",{"_index":726,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:29",{"_index":728,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:39",{"_index":725,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:48",{"_index":723,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:58",{"_index":729,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:67",{"_index":719,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:73",{"_index":717,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:85",{"_index":716,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["listadd",{"_index":706,"title":{},"body":{"components/TodoListComponent.html":{}}}],["loaded",{"_index":548,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["localstorage.getitem('spotifytoken",{"_index":473,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{}}}],["localstorage.setitem('spotifyexp",{"_index":481,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifyrefresh",{"_index":527,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifytoken",{"_index":479,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["logged",{"_index":422,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["login",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{}}}],["map",{"_index":586,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["mat",{"_index":428,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["matautocompletemodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["material",{"_index":671,"title":{},"body":{"components/TodoListComponent.html":{}}}],["matexpansionmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matselect",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":652,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["matsnackbarmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbar",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":721,"title":{},"body":{"injectables/TodoListService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["min",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["missing",{"_index":310,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["models/todo",{"_index":346,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["module",{"_index":150,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":152,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":330,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Todo.html":{}}}],["mongodb",{"_index":560,"title":{},"body":{"interfaces/Todo.html":{}}}],["more",{"_index":831,"title":{},"body":{"index.html":{}}}],["multi",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"index.html":{}}}],["navigate",{"_index":801,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":577,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["needslogin",{"_index":376,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["new",{"_index":352,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"index.html":{}}}],["newtodo",{"_index":724,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtodo._id",{"_index":743,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtododata",{"_index":298,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["newtodolist",{"_index":690,"title":{},"body":{"components/TodoListComponent.html":{}}}],["next",{"_index":454,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["next.handle(req",{"_index":487,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["next.handle(request",{"_index":486,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["ng",{"_index":426,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["ngform",{"_index":735,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ngmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":381,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["null",{"_index":509,"title":{},"body":{"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["number",{"_index":558,"title":{},"body":{"interfaces/Todo.html":{}}}],["object",{"_index":395,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["observable",{"_index":458,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"guards/SpotifyTokenGuard.html":{},"injectables/TodoListService.html":{}}}],["observable>((observer",{"_index":476,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["ok",{"_index":406,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["ondestroy",{"_index":643,"title":{},"body":{"components/TodoListComponent.html":{}}}],["one",{"_index":475,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/TodoListComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["onsubmitform",{"_index":606,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["opened",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["operations",{"_index":657,"title":{},"body":{"components/TodoListComponent.html":{}}}],["option",{"_index":429,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["option.name",{"_index":418,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["optional",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["options",{"_index":377,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["origin",{"_index":356,"title":{},"body":{"injectables/HttpService.html":{}}}],["otherwise",{"_index":474,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["out",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":839,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":776,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":274,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["page.component",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":275,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.html",{"_index":276,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":273,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":278,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:8",{"_index":277,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pages/github/github.component",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/gmail/gmail.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/spotify",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/todo",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["param",{"_index":360,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["parameter",{"_index":562,"title":{},"body":{"interfaces/Todo.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["params",{"_index":620,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["params.refresh",{"_index":525,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["params.token",{"_index":526,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["parseint(localstorage.getitem('spotifyexp",{"_index":510,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["passes",{"_index":681,"title":{},"body":{"components/TodoListComponent.html":{}}}],["path",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":302,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["play",{"_index":419,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["playelement",{"_index":382,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{}}}],["playelement(uri",{"_index":389,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{}}}],["please",{"_index":423,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["pointer",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["populateoptions",{"_index":383,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["populateoptions(response",{"_index":392,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["position",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":357,"title":{},"body":{"injectables/HttpService.html":{}}}],["precheck",{"_index":303,"title":{},"body":{"injectables/HttpService.html":{}}}],["present",{"_index":306,"title":{},"body":{"injectables/HttpService.html":{}}}],["private",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["prod",{"_index":816,"title":{},"body":{"index.html":{}}}],["production",{"_index":818,"title":{},"body":{"index.html":{}}}],["project",{"_index":792,"title":{},"body":{"index.html":{}}}],["projects",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["promise",{"_index":539,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["protractor",{"_index":828,"title":{},"body":{"index.html":{}}}],["provide",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":349,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["providers",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["push",{"_index":466,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["put",{"_index":362,"title":{},"body":{"injectables/HttpService.html":{}}}],["put,delete",{"_index":364,"title":{},"body":{"injectables/HttpService.html":{}}}],["query",{"_index":504,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["reactiveformsmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":833,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":338,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["refreshspotifytoken",{"_index":291,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshspotifytoken(refreshtoken",{"_index":331,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshtoken",{"_index":337,"title":{},"body":{"injectables/HttpService.html":{}}}],["regenerate",{"_index":336,"title":{},"body":{"injectables/HttpService.html":{}}}],["relaunch",{"_index":484,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reload",{"_index":804,"title":{},"body":{"index.html":{}}}],["replace",{"_index":322,"title":{},"body":{"injectables/HttpService.html":{}}}],["representing",{"_index":554,"title":{},"body":{"interfaces/Todo.html":{}}}],["req",{"_index":457,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.clone",{"_index":469,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.url.includes('refresh",{"_index":463,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reqopts",{"_index":350,"title":{},"body":{"injectables/HttpService.html":{}}}],["request",{"_index":446,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["requested",{"_index":720,"title":{},"body":{"injectables/TodoListService.html":{}}}],["reset",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["resolve(route",{"_index":582,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver",{"_index":566,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolver.service.ts",{"_index":565,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:19",{"_index":580,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service.ts:28",{"_index":583,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolvers/todo",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["response",{"_index":394,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/TodoListService.html":{}}}],["response.data",{"_index":415,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["response.newlist",{"_index":748,"title":{},"body":{"injectables/TodoListService.html":{}}}],["response.token",{"_index":480,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["response.url",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["result",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["return",{"_index":307,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["rewrite",{"_index":447,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["right",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["route",{"_index":521,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["route.parammap.get('id",{"_index":590,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["router",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["routermodule",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":537,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["routes",{"_index":240,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rss",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":798,"title":{},"body":{"index.html":{}}}],["running",{"_index":819,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":461,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":587,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["save",{"_index":344,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["saved",{"_index":694,"title":{},"body":{"components/TodoListComponent.html":{}}}],["saves",{"_index":342,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist",{"_index":292,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist(todolist",{"_index":339,"title":{},"body":{"injectables/HttpService.html":{}}}],["scaffolding",{"_index":808,"title":{},"body":{"index.html":{}}}],["search",{"_index":321,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifySearchComponent.html":{}}}],["search'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["search.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":490,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.html",{"_index":491,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts",{"_index":489,"title":{},"body":{"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:12",{"_index":493,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:8",{"_index":492,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search/spotify",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["seem",{"_index":421,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["serve",{"_index":799,"title":{},"body":{"index.html":{}}}],["server",{"_index":301,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"index.html":{}}}],["server_root/todos",{"_index":327,"title":{},"body":{"injectables/HttpService.html":{}}}],["service",{"_index":574,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["services/http.service",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"guards/TodoDataResolverService.html":{}}}],["services/spotify/spotify.service",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["services/todo",{"_index":584,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["setheaders",{"_index":470,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["sidenav",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["simply",{"_index":465,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["snackbar",{"_index":658,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"index.html":{}}}],["space",{"_index":434,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["specific",{"_index":561,"title":{},"body":{"interfaces/Todo.html":{}}}],["spotify",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["spotify's",{"_index":334,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["spotify/autocomp",{"_index":511,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["spotify/get",{"_index":369,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/logged",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["spotify/precheck",{"_index":367,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/refresh",{"_index":368,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/store",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["spotifyauthurl",{"_index":378,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifyhomecomponent",{"_index":132,"title":{"components/SpotifyHomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyinterceptor",{"_index":164,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SpotifyInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyok",{"_index":379,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifysearchcomponent",{"_index":134,"title":{"components/SpotifySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyservice",{"_index":35,"title":{"injectables/SpotifyService.html":{}},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"coverage.html":{}}}],["spotifystoretokencomponent",{"_index":136,"title":{"components/SpotifyStoreTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifysvc",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["spotifytokenguard",{"_index":242,"title":{"guards/SpotifyTokenGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["spotifyuserinfocomponent",{"_index":139,"title":{"components/SpotifyUserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app/app",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/spotify/spotify",{"_index":488,"title":{},"body":{"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["src/app/components/todolist/todo",{"_index":597,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["src/app/guards/spotify",{"_index":532,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["src/app/interceptors/spotify.interceptor.ts",{"_index":442,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/spotify.interceptor.ts:16",{"_index":450,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/interceptors/spotify.interceptor.ts:20",{"_index":456,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/models/todo",{"_index":621,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["src/app/models/todo.ts",{"_index":553,"title":{},"body":{"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/pages/github/github.component.ts",{"_index":261,"title":{},"body":{"components/GithubComponent.html":{},"coverage.html":{}}}],["src/app/pages/github/github.component.ts:12",{"_index":265,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/github/github.component.ts:8",{"_index":264,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/gmail/gmail.component.ts",{"_index":267,"title":{},"body":{"components/GmailComponent.html":{},"coverage.html":{}}}],["src/app/pages/gmail/gmail.component.ts:12",{"_index":271,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/pages/gmail/gmail.component.ts:8",{"_index":270,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/pages/home",{"_index":272,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/spotify",{"_index":370,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["src/app/pages/todo",{"_index":641,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["src/app/resolvers/todo",{"_index":564,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["src/app/services/http.service",{"_index":401,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["src/app/services/http.service.ts",{"_index":284,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:102",{"_index":332,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:106",{"_index":325,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:18",{"_index":326,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:35",{"_index":341,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:53",{"_index":320,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:69",{"_index":313,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:79",{"_index":297,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:9",{"_index":295,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:94",{"_index":299,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/spotify/spotify.service",{"_index":402,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["src/app/services/spotify/spotify.service.ts",{"_index":494,"title":{},"body":{"injectables/SpotifyService.html":{},"coverage.html":{}}}],["src/app/services/spotify/spotify.service.ts:17",{"_index":497,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:21",{"_index":503,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:25",{"_index":505,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:8",{"_index":496,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/todo",{"_index":619,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":506,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["started",{"_index":791,"title":{"index.html":{}},"body":{}}],["state",{"_index":536,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["statements",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":499,"title":{},"body":{"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["still",{"_index":444,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["store",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["stored",{"_index":813,"title":{},"body":{"index.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["subject",{"_index":732,"title":{},"body":{"injectables/TodoListService.html":{}}}],["subscription",{"_index":677,"title":{},"body":{"components/TodoListComponent.html":{}}}],["succesfully",{"_index":635,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["support",{"_index":834,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":835,"title":{},"body":{"modules.html":{}}}],["table",{"_index":675,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["test",{"_index":822,"title":{},"body":{"index.html":{}}}],["tests",{"_index":821,"title":{},"body":{"index.html":{}}}],["text",{"_index":430,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["theme",{"_index":669,"title":{},"body":{"components/TodoListComponent.html":{}}}],["themes",{"_index":647,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this._snackbar.open('todo",{"_index":693,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.currelement",{"_index":414,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.currid",{"_index":627,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.currtodo",{"_index":629,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.displaysnackbar('todo",{"_index":749,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.editmode",{"_index":626,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.form.setvalue(this.currtodo",{"_index":631,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.formcontrol.valuechanges.subscribe((newvalue",{"_index":409,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.http.addnewtodo(newtododata",{"_index":754,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.checkspotifystatus().subscribe((response",{"_index":404,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.http.delete(environment.serverroot",{"_index":365,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.deletetodoelement(idtodo).subscribe((response",{"_index":747,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.edittodo(_id",{"_index":744,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(environment.serverroot",{"_index":366,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["this.http.get>(environment.serverroot",{"_index":358,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.getspotifyauthurl().subscribe((response",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.gettodolist().pipe(map((data",{"_index":594,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.http.gettodolist().subscribe((response",{"_index":736,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.post(environment.serverroot",{"_index":361,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/play",{"_index":512,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["this.http.put(environment.serverroot",{"_index":363,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.savetodolist(this.todos",{"_index":745,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.httpsvc.refreshspotifytoken(localstorage.getitem('spotifyrefresh')).subscribe((response",{"_index":477,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["this.isloggedonspotify",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.issmallscreen",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this.opened",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.options",{"_index":413,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.route.data.subscribe((data",{"_index":624,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":523,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["this.router.events.subscribe((val",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/todolist",{"_index":637,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.router.navigate(['spotify/logged",{"_index":529,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["this.snackbar.open(message",{"_index":746,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.spotifyauthurl",{"_index":408,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyok",{"_index":407,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyservice.fetchautocomplete(newvalue).subscribe(this.populateoptions.bind(this",{"_index":412,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyservice.playelement(uri",{"_index":417,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifysvc.checkspotifystatus",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themes",{"_index":737,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.titleservice.settitle('todolist",{"_index":684,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.titlesvc.settitle('todo",{"_index":623,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todolistchanged",{"_index":687,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged$.unsubscribe",{"_index":691,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged.next([...this.todos",{"_index":738,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todolistchanged.next(response.todos",{"_index":742,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todos",{"_index":689,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this.todos.find((elem",{"_index":739,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todosvc.addtodo(this.form.value).subscribe((response",{"_index":638,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.deletetodo(idtodo",{"_index":697,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.displaysnackbar('todo",{"_index":634,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.edittodo(this.form.value).subscribe((response",{"_index":633,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.fetchtodosandthemes",{"_index":686,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.gettodo(todoid",{"_index":593,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.todosvc.savetodolist().subscribe((response",{"_index":692,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.todolistchanged.subscribe((newtodolist",{"_index":688,"title":{},"body":{"components/TodoListComponent.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["titleservice",{"_index":654,"title":{},"body":{"components/TodoListComponent.html":{}}}],["titlesvc",{"_index":607,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["todo",{"_index":87,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todo's",{"_index":567,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["todo.content",{"_index":700,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.theme",{"_index":698,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.title",{"_index":699,"title":{},"body":{"components/TodoListComponent.html":{}}}],["tododata",{"_index":319,"title":{},"body":{"injectables/HttpService.html":{}}}],["tododataresolverservice",{"_index":245,"title":{"guards/TodoDataResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["todoeditcomponent",{"_index":142,"title":{"components/TodoEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todoid",{"_index":589,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["todolist",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HttpService.html":{}}}],["todolist/:id/edit",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["todolist/add",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["todolistchanged",{"_index":648,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todolistcomponent",{"_index":144,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todolistservice",{"_index":579,"title":{"injectables/TodoListService.html":{}},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todos",{"_index":359,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todosave",{"_index":707,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todoservice",{"_index":656,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todosvc",{"_index":581,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["todosvc.todolistchanged",{"_index":680,"title":{},"body":{"components/TodoListComponent.html":{}}}],["togglesidenav",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":309,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{}}}],["token'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["token.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["token.component.css",{"_index":516,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.html",{"_index":517,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts",{"_index":515,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["token.component.ts:12",{"_index":522,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts:8",{"_index":520,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.guard",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["token.guard.ts",{"_index":533,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:10",{"_index":538,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["token/:token/:refresh",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["token/spotify",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["tokendecoded",{"_index":542,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["toolbar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["triggerloginprocedure",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoEditComponent.html":{}}}],["tslib",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["unit",{"_index":820,"title":{},"body":{"index.html":{}}}],["uri",{"_index":391,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{}}}],["uri}).subscribe",{"_index":514,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["url",{"_index":311,"title":{},"body":{"injectables/HttpService.html":{}}}],["urltree",{"_index":540,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["use",{"_index":752,"title":{},"body":{"injectables/TodoListService.html":{},"index.html":{}}}],["useclass",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":568,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["user",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["using",{"_index":485,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["valid",{"_index":445,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["validators",{"_index":622,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["validators.required",{"_index":616,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["value",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["version",{"_index":559,"title":{},"body":{"interfaces/Todo.html":{},"index.html":{}}}],["via",{"_index":824,"title":{},"body":{"index.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["we'll",{"_index":575,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["whole",{"_index":329,"title":{},"body":{"injectables/HttpService.html":{}}}],["width",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["width:15",{"_index":703,"title":{},"body":{"components/TodoListComponent.html":{}}}],["width:90",{"_index":425,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["window.location.href",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":570,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["works",{"_index":266,"title":{},"body":{"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["z",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedOnSpotify\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                            \n                                triggerLoginProcedure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bpObserver: BreakpointObserver, spotifySvc: SpotifyService, http: HttpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bpObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifySvc\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            triggerLoginProcedure\n                        \n                        \n                    \n                \n            \n            \n                \ntriggerLoginProcedure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedOnSpotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSmallScreen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dashboard'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { SpotifyService } from './services/Spotify/spotify.service';\nimport { HttpService } from './services/http.service';\nimport { Router, NavigationEnd } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  opened = true;\n  title = 'dashboard';\n  isLoggedOnSpotify = false;\n  isSmallScreen = false;\n  constructor(private bpObserver: BreakpointObserver, private spotifySvc: SpotifyService, private http: HttpService, private router: Router) {\n    this.isSmallScreen = bpObserver.isMatched('(max-width: 599px)');\n\n    this.router.events.subscribe((val: any) => {\n\n      if(val instanceof NavigationEnd) {\n\n        if(val.url.includes('/spotify/logged')) {\n          this.isLoggedOnSpotify = this.spotifySvc.checkSpotifyStatus();\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n\n\n\n\n\n  }\n\n  toggleSidenav() {\n    this.opened = !this.opened;\n  }\n\n  triggerLoginProcedure() {\n    this.http.getSpotifyAuthUrl().subscribe((response: any) => {\n      window.location.href = response.url;\n    })\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      menu\n    \n    Dashboard\n  \n\n\n  \n\n\n\n    \n      \n        \n          Todo List\n\n        \n\n        List\n        Add\n\n\n      \n\n\n      \n        \n          GitHub\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          RSS\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          GMail\n\n        \n\n      \n      \n        \n          Spotify\n\n        \n\n        Click here to login\n        Home\n\n      \n    \n\n    \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .example-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .clickable {\n      cursor: pointer;\n  }\n\n  .sidenav {\n      \n      z-index: 10;\n  }\n\n  .toolbar {\n      min-height:5vh;\n      max-height:5vh;\n  }\n\n  .sidenav {\n      height:95vh;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Dashboard                                Todo List                List        Add                              GitHub                My projects        Add an element                              RSS                My projects        Add an element                              GMail                                      Spotify                Click here to login        Home              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nGmailComponent\n\nGmailComponent\n\nAppModule -->\n\nGmailComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nSpotifyHomeComponent\n\nSpotifyHomeComponent\n\nAppModule -->\n\nSpotifyHomeComponent->AppModule\n\n\n\n\n\nSpotifySearchComponent\n\nSpotifySearchComponent\n\nAppModule -->\n\nSpotifySearchComponent->AppModule\n\n\n\n\n\nSpotifyStoreTokenComponent\n\nSpotifyStoreTokenComponent\n\nAppModule -->\n\nSpotifyStoreTokenComponent->AppModule\n\n\n\n\n\nSpotifyUserInfoComponent\n\nSpotifyUserInfoComponent\n\nAppModule -->\n\nSpotifyUserInfoComponent->AppModule\n\n\n\n\n\nTodoEditComponent\n\nTodoEditComponent\n\nAppModule -->\n\nTodoEditComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSpotifyInterceptor\n\nSpotifyInterceptor\n\nAppModule -->\n\nSpotifyInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GithubComponent\n                        \n                        \n                            GmailComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            SpotifyHomeComponent\n                        \n                        \n                            SpotifySearchComponent\n                        \n                        \n                            SpotifyStoreTokenComponent\n                        \n                        \n                            SpotifyUserInfoComponent\n                        \n                        \n                            TodoEditComponent\n                        \n                        \n                            TodoListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SpotifyInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule, MatToolbar } from '@angular/material/toolbar';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { GithubComponent } from './pages/github/github.component';\nimport { GmailComponent } from './pages/gmail/gmail.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport {MatSelectModule, MatSelect} from '@angular/material/select';\nimport { TodoEditComponent } from './components/TodoList/todo-edit/todo-edit.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatCheckboxModule } from '@angular/material/checkbox';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifySearchComponent } from './components/Spotify/spotify-search/spotify-search.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\nimport { SpotifyInterceptor } from './interceptors/spotify.interceptor';\nimport { SpotifyUserInfoComponent } from './pages/spotify-user-info/spotify-user-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    TodoListComponent,\n    GithubComponent,\n    GmailComponent,\n    TodoEditComponent,\n    SpotifyHomeComponent,\n    SpotifySearchComponent,\n    SpotifyStoreTokenComponent,\n    SpotifyUserInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatIconModule,\n    HttpClientModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: SpotifyInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { TodoEditComponent } from './components/TodoList/todo-edit/todo-edit.component';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\nimport { SpotifyTokenGuard } from './guards/spotify-token.guard';\nimport { TodoDataResolverService } from './resolvers/todo-data-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: HomePageComponent\n  },\n  {\n    path: 'todolist', component: TodoListComponent\n  },\n  {\n    path: 'todolist/:id/edit', component:TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n  {\n    path: 'todolist/add', component:TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n  {\n    path: 'spotify', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/logged', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/store-token/:token/:refresh', component: SpotifyStoreTokenComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubComponent.html":{"url":"components/GithubComponent.html","title":"component - GithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/github/github.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github\n            \n\n            \n                styleUrls\n                ./github.component.css\n            \n\n\n\n            \n                templateUrl\n                ./github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/github/github.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/github/github.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.css']\n})\nexport class GithubComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        github works!\n\n    \n\n    \n                \n                    ./github.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'github works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GmailComponent.html":{"url":"components/GmailComponent.html","title":"component - GmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/gmail/gmail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gmail\n            \n\n            \n                styleUrls\n                ./gmail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gmail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/gmail/gmail.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/gmail/gmail.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gmail',\n  templateUrl: './gmail.component.html',\n  styleUrls: ['./gmail.component.css']\n})\nexport class GmailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        gmail works!\n\n    \n\n    \n                \n                    ./gmail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'gmail works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home-page/home-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home-page/home-page.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        La homepage du dashboard\n    \n\n    \n                \n                    ./home-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'La homepage du dashboard'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTodo\n                            \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                deleteTodoElement\n                            \n                            \n                                editTodo\n                            \n                            \n                                getSpotifyAuthUrl\n                            \n                            \n                                getTodoList\n                            \n                            \n                                refreshSpotifyToken\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:94\n                \n            \n\n\n            \n                \n                    Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\nIf not, return error\nIf token missing, returns the Spotify login url\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodoElement\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodoElement(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:69\n                \n            \n\n\n            \n                \n                    Calls the server which will delete the todo with the id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the todo to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(idTodo: string, todoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:53\n                \n            \n\n\n            \n                \n                    Calls the server which will search idTodo and replace its content by todoData\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the todo to edit\n\n                                    \n                                \n                                \n                                    todoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The content of the todo to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpotifyAuthUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpotifyAuthUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoList\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:18\n                \n            \n\n\n            \n                \n                    Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSpotifyToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSpotifyToken(refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:102\n                \n            \n\n\n            \n                \n                    Calls the server, which will call Spotify's API to regenerate a token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList(todoList: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:35\n                \n            \n\n\n            \n                \n                    Saves the current todo-list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    todoList\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo-list which will be save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Todo } from '../models/todo';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  /**\n   * Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n   */\n  getTodoList() {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.get>(environment.serverRoot + '/todos', reqOpts);\n\n  }\n\n  /**\n   * Saves the current todo-list\n   * @param todoList The todo-list which will be save\n   */\n  saveTodoList(todoList: Array) {\n\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.post(environment.serverRoot + '/todos', {todos: todoList}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will search idTodo and replace its content by todoData\n   * @param idTodo The ID of the todo to edit\n   * @param todoData The content of the todo to edit\n   */\n  editTodo(idTodo: string, todoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE'\n      })\n    };\n\n\n    return this.http.put(environment.serverRoot + '/todos/' + idTodo, {todo: todoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will delete the todo with the id idTodo\n   * @param idTodo The id of the todo to delete\n   */\n  deleteTodoElement(idTodo: string) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT,DELETE'\n      })\n    };\n    return this.http.delete(environment.serverRoot + '/todos/' + idTodo, reqOpts);\n  }\n\n  addNewTodo(newTodoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, DELETE'\n      })\n    };\n    return this.http.post(environment.serverRoot + '/todos/', {todo: newTodoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\n   * If not, return error\n   * If token missing, returns the Spotify login url\n   */\n  checkSpotifyStatus() {\n    return this.http.get(environment.serverRoot + '/spotify/precheck');\n  }\n\n  /**\n   * Calls the server, which will call Spotify's API to regenerate a token\n   * @param refreshToken The refresh token\n   */\n  refreshSpotifyToken(refreshToken: string) {\n    return this.http.get(environment.serverRoot + '/spotify/refresh-token/' + refreshToken);\n  }\n\n  getSpotifyAuthUrl() {\n    return this.http.get(environment.serverRoot + '/spotify/get-url');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyHomeComponent.html":{"url":"components/SpotifyHomeComponent.html","title":"component - SpotifyHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-home/spotify-home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-home\n            \n\n            \n                styleUrls\n                ./spotify-home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currElement\n                            \n                            \n                                formControl\n                            \n                            \n                                needsLogin\n                            \n                            \n                                options\n                            \n                            \n                                spotifyAuthUrl\n                            \n                            \n                                spotifyOK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayName\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                playElement\n                            \n                            \n                                populateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, spotifyService: SpotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-home/spotify-home.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifyService\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayName\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayName(element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(uri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateOptions\n                        \n                        \n                    \n                \n            \n            \n                \npopulateOptions(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needsLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyAuthUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyOK\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/services/http.service';\nimport { FormControl } from '@angular/forms';\nimport { SpotifyService } from 'src/app/services/Spotify/spotify.service';\n\n@Component({\n  selector: 'app-spotify-home',\n  templateUrl: './spotify-home.component.html',\n  styleUrls: ['./spotify-home.component.css']\n})\nexport class SpotifyHomeComponent implements OnInit {\n  needsLogin = false;\n  options = [];\n  currElement = {};\n  formControl = new FormControl();\n  spotifyAuthUrl = '';\n  spotifyOK = false;\n  constructor(private http: HttpService, private spotifyService: SpotifyService) { }\n\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('spotifyToken')) {\n\n        this.http.checkSpotifyStatus().subscribe((response: any) => {\n          if(response.status === 'OK') {\n            this.spotifyOK = true;\n          } else {\n            this.spotifyAuthUrl = response.url;\n          }\n        });\n    } else {\n      this.spotifyOK = true;\n    }\n    // this.http.checkSpotifyStatus().subscribe((response: any) => {\n    //   if(response.status === 'OK') {\n    //     this.spotifyOK = true;\n    //   } else {\n    //     this.spotifyAuthUrl = response.url;\n    //   }\n    // });\n\n    this.formControl.valueChanges.subscribe((newValue: string) => {\n      if(newValue.length >= 3) {\n        this.spotifyService.fetchAutocomplete(newValue).subscribe(this.populateOptions.bind(this));\n      } else {\n        this.options = [];\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.currElement = {};\n    this.options = [];\n  }\n\n  populateOptions(response: any) {\n\n    this.options = response.data;\n  }\n\n  displayName(element: any) {\n\n    return element.name;\n  }\n\n  playElement(uri: string) {\n    this.spotifyService.playElement(uri);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          \n          {{option.name}}\n\n          Play\n        \n      \n    \n\n  \n\n\n\n\n  You don't seem to be logged. Please click here.\n\n\n\n    \n\n    \n                \n                    ./spotify-home.component.css\n                \n                .full-width {\n  width:90%;\n}\n\n::ng-deep .mat-option-text {\n  display:flex !important;\n  justify-content: space-between;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{option.name}}          Play                      You don\\'t seem to be logged. Please click here.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SpotifyInterceptor.html":{"url":"interceptors/SpotifyInterceptor.html","title":"interceptor - SpotifyInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  SpotifyInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/spotify.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Checks if the token is still valid, if not, will request a refresh token\nTODO : rewrite\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpSvc: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/spotify.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpSvc\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/spotify.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../services/http.service';\n\n/**\n * Checks if the token is still valid, if not, will request a refresh token\n * TODO : rewrite\n */\n@Injectable()\nexport class SpotifyInterceptor implements HttpInterceptor {\n\n  constructor(private httpSvc: HttpService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n    if(req.url.includes('spotify') && !req.url.includes('refresh-token')) {\n\n      if(localStorage.getItem('spotifyToken')) {\n\n        // If the token is still valid, we simply push the current token to the headers\n        if(parseInt(localStorage.getItem('spotifyExp')) > new Date().getTime()) {\n          req = req.clone({\n            setHeaders: {\n              'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n            }\n          });\n\n        } else { // Otherwise, we will request a new one\n          return new Observable>((observer) => {\n            this.httpSvc.refreshSpotifyToken(localStorage.getItem('spotifyRefresh')).subscribe((response: any) => {\n\n              // We store the token, the refresh, etc\n              localStorage.setItem('spotifyToken', response.token);\n              localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n\n              // Then we relaunch the request using the new token\n              let request = req.clone({\n                setHeaders: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n                }\n              });\n\n              next.handle(request);\n            })\n          })\n\n        }\n      }\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifySearchComponent.html":{"url":"components/SpotifySearchComponent.html","title":"component - SpotifySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/Spotify/spotify-search/spotify-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-search\n            \n\n            \n                styleUrls\n                ./spotify-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-search',\n  templateUrl: './spotify-search.component.html',\n  styleUrls: ['./spotify-search.component.css']\n})\nexport class SpotifySearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        spotify-search works!\n\n    \n\n    \n                \n                    ./spotify-search.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'spotify-search works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyService.html":{"url":"injectables/SpotifyService.html","title":"injectable - SpotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Spotify/spotify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                fetchAutocomplete\n                            \n                            \n                                playElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/Spotify/spotify.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:17\n                \n            \n\n\n            \n                \n                    Check Spotify's status, returns true if :\n\nthere is a token\nThis token is still valid (expDate > new Date().getTime())\n\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAutocomplete(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(uri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Check Spotify's status, returns true if :\n   * 1. there is a token\n   * 2. This token is still valid (expDate > new Date().getTime())\n   */\n  checkSpotifyStatus() {\n    return localStorage.getItem('spotifyToken') != null && parseInt(localStorage.getItem('spotifyExp')) > (new Date().getTime());\n  }\n\n  fetchAutocomplete(query: string) {\n    return this.http.get(environment.serverRoot + '/spotify/autocomp/' + query);\n  }\n\n  playElement(uri: string) {\n\n    this.http.put('https://api.spotify.com/v1/me/player/play', {context_uri: uri}).subscribe(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyStoreTokenComponent.html":{"url":"components/SpotifyStoreTokenComponent.html","title":"component - SpotifyStoreTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyStoreTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-store-token/spotify-store-token.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-store-token\n            \n\n            \n                styleUrls\n                ./spotify-store-token.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-store-token.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-store-token/spotify-store-token.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-store-token/spotify-store-token.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-spotify-store-token',\n  templateUrl: './spotify-store-token.component.html',\n  styleUrls: ['./spotify-store-token.component.css']\n})\nexport class SpotifyStoreTokenComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: any) => {\n      if(params.token && params.refresh) {\n        localStorage.setItem('spotifyToken', params.token);\n        localStorage.setItem('spotifyRefresh', params.refresh);\n        localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n        // alert('Nav to spotify');\n        this.router.navigate(['spotify/logged']);\n      }\n\n    })\n  }\n\n}\n\n    \n\n    \n        spotify-store-token works!\n\n    \n\n    \n                \n                    ./spotify-store-token.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'spotify-store-token works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyStoreTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SpotifyTokenGuard.html":{"url":"guards/SpotifyTokenGuard.html","title":"guard - SpotifyTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SpotifyTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/spotify-token.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/spotify-token.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyTokenGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      const token = localStorage.getItem('spotifyToken');\n      // if(token) {\n\n      //   const tokenDecoded = jwt_decode(token);\n      //   console.log(tokenDecoded);\n\n      // }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyUserInfoComponent.html":{"url":"components/SpotifyUserInfoComponent.html","title":"component - SpotifyUserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyUserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-user-info/spotify-user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-user-info\n            \n\n            \n                styleUrls\n                ./spotify-user-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-user-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-user-info',\n  templateUrl: './spotify-user-info.component.html',\n  styleUrls: ['./spotify-user-info.component.css']\n})\nexport class SpotifyUserInfoComponent implements OnInit {\n  loaded = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n    \n\n    \n                \n                    ./spotify-user-info.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyUserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a todo element, formatted like in Mongo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __v\n                                \n                                \n                                        _id\n                                \n                                \n                                        content\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version (MongoDB specific parameter)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the todo (not handled yet)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  /**\n   * The ID of the todo\n   */\n  _id: string;\n\n  /**\n   * The title of the todo\n   */\n  title: string;\n  /**\n   * The content of the todo\n   */\n  content: string;\n\n  /**\n   * The status of the todo (not handled yet)\n   */\n  status: boolean;\n\n  /**\n   * The version (MongoDB specific parameter)\n   */\n  __v: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TodoDataResolverService.html":{"url":"guards/TodoDataResolverService.html","title":"guard - TodoDataResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TodoDataResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/todo-data-resolver.service.ts\n            \n\n                \n                Description\n                \n                \n                    Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\nif todolist/add :\n    we create a new empty todo\nif todolist/:id/edit :\n    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/todo-data-resolver.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The todo service, used to check if there is some todo data in it\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP service, used to get the todo data if it is missing from the service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/todo-data-resolver.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Todo } from '../models/todo';\nimport { TodoListService } from '../services/todo-list.service';\nimport { HttpService } from '../services/http.service';\nimport { map } from 'rxjs/operators';\n/**\n * Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\n * if todolist/add :\n *    we create a new empty todo\n * if todolist/:id/edit :\n *    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n */\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TodoDataResolverService implements Resolve {\n\n  /**\n   *\n   * @param todoSvc The todo service, used to check if there is some todo data in it\n   * @param http The HTTP service, used to get the todo data if it is missing from the service\n   */\n  constructor(private todoSvc: TodoListService, private http: HttpService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Todo | import(\"rxjs\").Observable | Promise {\n    const todoId = route.paramMap.get('id');\n\n    if(!todoId) {\n      return {_id: null, title: '', content: '', status: false, __v: 0};\n    }\n    if(this.todoSvc.todos.length !== 0) {\n\n      return this.todoSvc.getTodo(todoId);\n    } else {\n      return this.http.getTodoList().pipe(map((data: Array) => {\n        let todo: Todo = data.find((currTodo) => currTodo._id === todoId);\n        return todo;\n      }));\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoEditComponent.html":{"url":"components/TodoEditComponent.html","title":"component - TodoEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/TodoList/todo-edit/todo-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-edit\n            \n\n            \n                styleUrls\n                ./todo-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentTitle\n                            \n                            \n                                currId\n                            \n                            \n                                currTodo\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, route: ActivatedRoute, titleSvc: Title, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmitForm\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Edit an element\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currTodo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Todo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TodoListService } from 'src/app/services/todo-list.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Todo } from 'src/app/models/todo';\n\nimport { Title } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-todo-edit',\n  templateUrl: './todo-edit.component.html',\n  styleUrls: ['./todo-edit.component.css']\n})\nexport class TodoEditComponent implements OnInit {\n  componentTitle: string = \"Edit an element\";\n  currId: string = '';\n  editMode = false;\n  currTodo: Todo;\n\n\n  form = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n\n  constructor(private todoSvc: TodoListService, private route: ActivatedRoute, private titleSvc: Title, private router: Router) {\n    this.titleSvc.setTitle('Todo List - Edit a todo');\n   }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data: {todo: Todo}) => {\n\n      if(data.todo._id) {\n        this.editMode = true;\n      }\n      this.currId = data.todo._id;\n      this.currTodo = data.todo;\n      this.form.setValue(this.currTodo);\n      // }\n\n      // this.\n    });\n\n  }\n\n  onSubmitForm() {\n    if(this.editMode) {\n      this.todoSvc.editTodo(this.form.value).subscribe((response: any) => {\n        if(response.status === 'OK') {\n          this.todoSvc.displaySnackbar('Todo succesfully edited.');\n\n          this.router.navigate(['/todolist']);\n        }\n      });\n\n    } else {\n      this.todoSvc.addTodo(this.form.value).subscribe((response: any) => {\n        if(response.status === 'OK') {\n          this.todoSvc.displaySnackbar('Todo succesfully added.');\n\n          this.router.navigate(['/todolist']);\n        }\n      });\n    }\n\n  }\n\n}\n\n    \n\n    \n        {{componentTitle}}\n\n\n\n  \n  \n      Title\n      \n    \n  \n\n  \n\n    \n      Content\n      \n    \n\n  \n\n  Confirm\n\n\n\n    \n\n    \n                \n                    ./todo-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{componentTitle}}          Title                        Content              Confirm'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/todo-list/todo-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-list\n            \n\n            \n                styleUrls\n                ./todo-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                themes\n                            \n                            \n                                todoListChanged$\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTodo\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleService: Title, todoSvc: TodoListService, _snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/todo-list/todo-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The title service, used to define the title\n\n                                                        \n                                                \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TodoService, used to perform operations\n\n                                                        \n                                                \n                                                \n                                                        _snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:87\n                \n            \n\n\n            \n                \n                    Deletes a todo with id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo's id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:64\n                \n            \n\n\n            \n                \n                    On destroy, cleanup function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:71\n                \n            \n\n\n            \n                \n                    Saves the todo-list, if OK, displays a snackbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['theme', 'title', 'content', 'status', 'controls']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:35\n                            \n                        \n\n                \n                    \n                        Used by ng-material, defines the columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current themes (not used yet)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:20\n                            \n                        \n\n                \n                    \n                        Subscription linked to todoSvc.todoListChanged, passes the new todo list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:25\n                            \n                        \n\n                \n                    \n                        The current todo-list\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ɵConsole } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\nimport { TodoListService } from 'src/app/services/todo-list.service';\nimport { Todo } from 'src/app/models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit, OnDestroy {\n\n\n  /**\n   * Subscription linked to todoSvc.todoListChanged, passes the new todo list\n   */\n  todoListChanged$: Subscription;\n\n  /**\n   * The current todo-list\n   */\n  todos: Array = [];\n\n  /**\n   * The current themes (not used yet)\n   */\n  themes: Array = [];\n\n  /**\n   * Used by ng-material, defines the columns which are displayed in the table\n   */\n  displayedColumns = ['theme', 'title', 'content', 'status', 'controls'];\n\n\n  /**\n   *\n   * @param titleService The title service, used to define the title\n   * @param todoSvc The TodoService, used to perform operations\n   * @param _snackbar The snackbar\n   */\n  constructor(private titleService: Title,\n              private todoSvc: TodoListService,\n              private _snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n\n    this.titleService.setTitle('TodoList - List');\n\n    // TODO : à enlever\n    this.todoSvc.fetchTodosAndThemes();\n\n    this.todoListChanged$ = this.todoSvc.todoListChanged.subscribe((newTodoList: Array) => {\n      this.todos = newTodoList;\n\n    })\n  }\n\n  /**\n   * On destroy, cleanup function\n   */\n  ngOnDestroy() {\n    this.todoListChanged$.unsubscribe();\n  }\n\n  /**\n   * Saves the todo-list, if OK, displays a snackbar\n   */\n  saveTodoList() {\n    this.todoSvc.saveTodoList().subscribe((response: any) => {\n      if(response.status === 'OK') {\n        this._snackbar.open('Todo List saved succesfully.', '', {\n          duration: 2000\n        });\n      } else {\n\n      }\n    });\n  }\n\n  /**\n   * Deletes a todo with id idTodo\n   * @param idTodo The todo's id to delete\n   */\n  deleteTodo(idTodo: string) {\n    this.todoSvc.deleteTodo(idTodo);\n  }\n\n}\n\n    \n\n    \n        Todo List\nAdd a todo\nSave todos\n\n\n  \n    \n      \n        Theme\n      \n      \n        {{todo.theme}}\n\n      \n    \n    \n      Title\n      {{todo.title}}\n    \n    \n      Content\n      {{todo.content}}\n    \n    \n      Status\n      \n        \n      \n    \n    \n      Controls\n      \n        EDIT\n        DELETE\n      \n    \n\n\n    \n    \n  \n\n\n\n\n\n  No todos found. Please click \"Add a todo\" to add one.\n\n\n\n\n\n    \n\n    \n                \n                    ./todo-list.component.css\n                \n                .col-theme {\n  width:15%;\n}\n\n.col-content {\n  width: 50%;\n}\n\n.col-status {\n  width: 10%;\n}\n\n.col-title {\n  width: 15%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Todo ListAdd a todoSave todos                    Theme                    {{todo.theme}}                    Title      {{todo.title}}              Content      {{todo.content}}              Status                                  Controls              EDIT        DELETE                      No todos found. Please click \"Add a todo\" to add one.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                            \n                                todoListChanged\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                displaySnackbar\n                            \n                            \n                                editTodo\n                            \n                            \n                                fetchTodoList\n                            \n                            \n                                fetchTodosAndThemes\n                            \n                            \n                                getTodo\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo-list.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displaySnackbar\n                        \n                        \n                    \n                \n            \n            \n                \ndisplaySnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:67\n                \n            \n\n\n            \n                \n                    Displays a snackbar when requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(newTodo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodosAndThemes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodosAndThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodo\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:58\n                \n            \n\n\n            \n                \n                    Saves the current todo list\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Dummy 1', 'Dummy 2']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Todo } from '../models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService {\n  todos: Array = [];\n  themes: Array = ['Dummy 1', 'Dummy 2'];\n\n  todoListChanged = new Subject>();\n  constructor(private http: HttpService, private snackbar: MatSnackBar) { }\n\n  fetchTodosAndThemes() {\n\n    this.http.getTodoList().subscribe((response: any) => {\n      this.todos = response;\n      this.themes = [];\n\n      this.todoListChanged.next([...this.todos]);\n\n    })\n  }\n\n  getTodo(id: string) {\n\n    return this.todos.find((elem) => {\n      return elem._id === id;\n\n    });\n\n\n  }\n\n  fetchTodoList() {\n    return this.http.getTodoList().subscribe((response: any) => {\n      if(status === 'OK') {\n\n        this.todoListChanged.next(response.todos);\n      }\n    })\n  }\n\n  editTodo(newTodo: Todo) {\n    const _id = newTodo._id;\n\n    return this.http.editTodo(_id, newTodo);\n\n  }\n\n  /**\n   * Saves the current todo list\n   */\n  saveTodoList() {\n    return this.http.saveTodoList(this.todos);\n\n  }\n\n  /**\n   * Displays a snackbar when requested\n   * @param message The message to be displayed\n   */\n  displaySnackbar(message: string) {\n    this.snackbar.open(message, null, {\n      duration: 2000\n    });\n  }\n\n  deleteTodo(idTodo: string) {\n    this.http.deleteTodoElement(idTodo).subscribe((response: any) => {\n      if(response.status === 'OK') {\n        this.todos = response.newList;\n        this.todoListChanged.next([...this.todos]);\n        this.displaySnackbar('Todo succesfully deleted');\n      } else { // TODO : handle use cases\n        this.displaySnackbar('Todo not found');\n      }\n    });\n  }\n\n  addTodo(newTodoData: Todo) {\n    return this.http.addNewTodo(newTodoData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/Spotify/spotify-search/spotify-search.component.ts\n            \n            component\n            SpotifySearchComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/TodoList/todo-edit/todo-edit.component.ts\n            \n            component\n            TodoEditComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/guards/spotify-token.guard.ts\n            \n            guard\n            SpotifyTokenGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interceptors/spotify.interceptor.ts\n            \n            interceptor\n            SpotifyInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            interface\n            Todo\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/pages/github/github.component.ts\n            \n            component\n            GithubComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/gmail/gmail.component.ts\n            \n            component\n            GmailComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-home/spotify-home.component.ts\n            \n            component\n            SpotifyHomeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-store-token/spotify-store-token.component.ts\n            \n            component\n            SpotifyStoreTokenComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-user-info/spotify-user-info.component.ts\n            \n            component\n            SpotifyUserInfoComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/todo-list/todo-list.component.ts\n            \n            component\n            TodoListComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/resolvers/todo-data-resolver.service.ts\n            \n            guard\n            TodoDataResolverService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/Spotify/spotify.service.ts\n            \n            injectable\n            SpotifyService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/services/todo-list.service.ts\n            \n            injectable\n            TodoListService\n            \n                15 %\n                (2/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.1\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ~10.1.1\n        \n            @angular/compiler : ~10.1.1\n        \n            @angular/core : ~10.1.1\n        \n            @angular/forms : ~10.1.1\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ~10.1.1\n        \n            @angular/platform-browser-dynamic : ~10.1.1\n        \n            @angular/router : ~10.1.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nGmailComponent\n\nGmailComponent\n\nAppModule -->\n\nGmailComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nSpotifyHomeComponent\n\nSpotifyHomeComponent\n\nAppModule -->\n\nSpotifyHomeComponent->AppModule\n\n\n\n\n\nSpotifySearchComponent\n\nSpotifySearchComponent\n\nAppModule -->\n\nSpotifySearchComponent->AppModule\n\n\n\n\n\nSpotifyStoreTokenComponent\n\nSpotifyStoreTokenComponent\n\nAppModule -->\n\nSpotifyStoreTokenComponent->AppModule\n\n\n\n\n\nSpotifyUserInfoComponent\n\nSpotifyUserInfoComponent\n\nAppModule -->\n\nSpotifyUserInfoComponent->AppModule\n\n\n\n\n\nTodoEditComponent\n\nTodoEditComponent\n\nAppModule -->\n\nTodoEditComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSpotifyInterceptor\n\nSpotifyInterceptor\n\nAppModule -->\n\nSpotifyInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
