var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.171,1,0.635]],["body/components/AppComponent.html",[0,0.232,1,0.951,2,0.976,3,0.2,4,0.166,5,0.728,6,0.728,7,0.728,8,0.728,9,0.166,10,1.929,11,0.804,12,1.273,13,0.728,14,1.788,15,1.491,16,1.568,17,1.072,18,4.077,19,1.072,20,3.434,21,0.347,22,1.072,23,4.077,24,4.077,25,4.077,26,4.077,27,1.398,28,0.521,29,1.405,30,4.497,31,4.497,32,0.398,33,2.331,34,4.497,35,3.373,36,2.054,37,1.861,38,1.695,39,3.702,40,0.824,41,3.434,42,0.493,43,0.037,44,0.546,45,0.619,46,0.493,47,3.434,48,2.331,49,0.619,50,0.954,51,2.331,52,2.331,53,1.072,54,1.645,55,1.645,56,3.434,57,2.271,58,2.331,59,2.331,60,1.734,61,2.331,62,3.211,63,2.331,64,0.562,65,0.236,66,2.331,67,2.331,68,1.664,69,3.434,70,1.064,71,0.2,72,0.273,73,0.546,74,1.536,75,2.331,76,2.331,77,1.466,78,2.331,79,2.331,80,2.331,81,2.331,82,2.331,83,2.331,84,2.331,85,2.331,86,3.434,87,2.331,88,2.331,89,1.929,90,3.434,91,0.603,92,1.122,93,4.15,94,2.842,95,4.497,96,1.425,97,3.434,98,2.842,99,1.245,100,2.451,101,2.842,102,2.842,103,1.273,104,2.331,105,2.331,106,2.331,107,2.331,108,2.331,109,3.211,110,2.331,111,2.331,112,2.331,113,2.331,114,2.331,115,2.331,116,3.434,117,2.331,118,1.929,119,2.331,120,2.331,121,3.434,122,2.331,123,2.331,124,1.664,125,2.331,126,2.331,127,2.331,128,2.331,129,0.602,130,1.072,131,0.728,132,1.405,133,0.728,134,0.728,135,0.493,136,0.728,137,0.493,138,0.728,139,0.444,140,0.728,141,0.444,142,0.728,143,0.493,144,0.728,145,0.493,146,0.728,147,0.444,148,0.493,149,0.728,150,0.493,151,0.602,152,0.728,153,0.444,154,0.728,155,0.444,156,0.728,157,0.728,158,0.014,159,0.02,160,0.014]],["title/modules/AppModule.html",[161,1.89,162,1.89]],["body/modules/AppModule.html",[1,1.209,3,0.208,4,0.173,9,0.173,15,0.628,43,0.037,60,1.228,64,0.725,65,0.246,71,0.208,72,0.285,129,0.628,135,1.077,137,1.077,139,0.969,141,0.969,143,1.077,145,1.077,147,0.969,148,0.749,150,1.077,151,0.914,153,0.969,155,0.969,158,0.014,159,0.021,160,0.014,161,1.53,162,3.888,163,1.365,164,1.53,165,3.457,166,3.457,167,3.457,168,1.736,169,2.012,170,2.012,171,2.012,172,2.012,173,2.012,174,2.858,175,2.858,176,2.931,177,2.012,178,1.53,179,2.431,180,2.931,181,3.541,182,1.788,183,1.11,184,2.931,185,2.431,186,2.431,187,3.541,188,2.431,189,3.541,190,2.431,191,3.541,192,2.431,193,3.541,194,2.431,195,2.431,196,3.541,197,2.431,198,2.431,199,2.012,200,1.53,201,2.012,202,3.541,203,2.431,204,2.012,205,1.53,206,2.012,207,2.431,208,2.431,209,3.541,210,3.541,211,1.365,212,3.541,213,2.431,214,2.431,215,3.541,216,2.431,217,2.431,218,2.012,219,1.53,220,2.012,221,3.541,222,2.431,223,3.541,224,2.431,225,3.541,226,2.431,227,3.541,228,4.177,229,1.228,230,3.541,231,1.736,232,1.736,233,3.541,234,2.431,235,3.541,236,2.431,237,3.457,238,1.53,239,2.012,240,2.431,241,1.736,242,2.431,243,3.541,244,2.431,245,1.53,246,2.012,247,2.431,248,1.736,249,2.431,250,2.431,251,1.736,252,2.431,253,2.431,254,2.431,255,2.431]],["title/modules/AppRoutingModule.html",[161,1.89,174,1.686]],["body/modules/AppRoutingModule.html",[0,0.317,3,0.303,4,0.251,9,0.251,43,0.038,64,0.698,65,0.357,70,1.614,71,0.303,72,0.414,91,0.614,99,0.827,139,0.873,141,0.968,147,0.873,148,0.97,153,0.673,155,0.873,158,0.021,159,0.027,160,0.021,163,1.985,168,2.524,174,2.573,180,2.926,184,3.793,199,2.926,200,2.224,201,2.926,204,2.926,205,2.224,206,2.926,218,2.926,219,2.224,220,2.926,237,3.793,238,2.224,239,2.926,245,2.224,246,2.926,256,3.535,257,3.535,258,3.2,259,4.584,260,3.2,261,3.535,262,3.535,263,3.2,264,3.535,265,2.524,266,3.535,267,1.785,268,5.816,269,2.926,270,2.926,271,4.584,272,3.793,273,2.926,274,3.793,275,3.535,276,3.535,277,3.535,278,3.535]],["title/components/GithubComponent.html",[0,0.171,135,0.635]],["body/components/GithubComponent.html",[0,0.288,1,0.739,2,1.292,3,0.299,4,0.248,5,1.091,6,1.091,7,1.091,8,1.091,9,0.248,11,1.064,12,1.579,13,1.091,14,1.908,15,1.577,17,1.42,19,1.42,21,0.353,28,0.69,29,1.673,32,0.862,40,0.69,43,0.036,44,0.609,49,0.53,50,1.064,64,0.409,65,0.353,71,0.299,72,0.409,91,0.609,92,0.817,94,4.433,96,1.292,99,1.3,103,1.091,129,0.902,130,1.42,131,1.091,132,1.673,133,1.091,134,1.091,135,1.133,136,1.091,137,0.739,138,1.091,139,0.665,140,1.091,141,0.665,142,1.091,143,0.739,144,1.091,145,0.739,146,1.091,147,0.665,148,0.739,149,1.091,150,0.739,151,0.902,152,1.091,153,0.665,154,1.091,155,0.665,156,1.091,157,1.091,158,0.021,159,0.027,160,0.021,279,2.891,280,5.057,281,4.548,282,3.493,283,3.493,284,3.247]],["title/components/GmailComponent.html",[0,0.171,137,0.635]],["body/components/GmailComponent.html",[0,0.288,1,0.739,2,1.292,3,0.299,4,0.248,5,1.091,6,1.091,7,1.091,8,1.091,9,0.248,11,1.064,12,1.579,13,1.091,14,1.908,15,1.577,17,1.42,19,1.42,21,0.353,28,0.69,29,1.673,32,0.862,40,0.69,43,0.036,44,0.609,49,0.53,50,1.064,64,0.409,65,0.353,71,0.299,72,0.409,91,0.609,92,0.817,96,1.292,98,4.433,99,1.3,103,1.091,129,0.902,130,1.42,131,1.091,132,1.673,133,1.091,134,1.091,135,0.739,136,1.091,137,1.133,138,1.091,139,0.665,140,1.091,141,0.665,142,1.091,143,0.739,144,1.091,145,0.739,146,1.091,147,0.665,148,0.739,149,1.091,150,0.739,151,0.902,152,1.091,153,0.665,154,1.091,155,0.665,156,1.091,157,1.091,158,0.021,159,0.027,160,0.021,284,3.247,285,2.891,286,5.057,287,4.548,288,3.493,289,3.493]],["title/components/HomePageComponent.html",[0,0.171,139,0.572]],["body/components/HomePageComponent.html",[0,0.26,1,0.605,2,1.13,3,0.245,4,0.203,5,0.893,6,0.893,7,0.893,8,0.893,9,0.203,11,0.93,12,1.427,13,0.893,14,1.853,15,1.532,17,1.241,19,1.241,21,0.289,27,1.694,28,0.603,29,1.542,32,0.488,40,0.603,42,0.605,43,0.037,44,0.612,45,0.434,46,0.605,49,0.434,50,0.93,62,3.525,64,0.466,65,0.289,71,0.245,72,0.335,73,0.669,91,0.8,92,1.257,96,1.13,99,1.289,103,1.782,129,0.738,130,1.241,131,0.893,132,1.542,133,0.893,134,0.893,135,0.605,136,0.893,137,0.605,138,0.893,139,0.94,140,0.893,141,0.545,142,0.893,143,0.605,144,0.893,145,0.605,146,0.893,147,0.545,148,0.605,149,0.893,150,0.605,151,0.738,152,0.893,153,0.545,154,0.893,155,0.545,156,0.893,157,0.893,158,0.017,159,0.023,160,0.017,178,2.501,182,1.444,183,1.306,200,2.874,290,3.781,291,2.367,292,3.781,293,4.569,294,3.975,295,2.367,296,2.86,297,2.838,298,2.86,299,2.86,300,3.975,301,3.975,302,3.29,303,2.838,304,3.975,305,3.29,306,1.799,307,2.367,308,3.29,309,2.501,310,2.838,311,2.838,312,2.501,313,3.29,314,3.975,315,2.838,316,3.106,317,2.838,318,3.975,319,3.975,320,3.29,321,3.975,322,3.975,323,2.86,324,2.86,325,2.86]],["title/injectables/HttpService.html",[38,1.132,326,0.854]],["body/injectables/HttpService.html",[3,0.177,4,0.147,9,0.147,16,0.943,21,0.209,28,0.756,32,0.352,37,1.432,38,1.182,40,0.798,42,1.014,43,0.037,44,0.642,45,0.728,46,1.014,49,0.814,53,1.642,64,0.496,65,0.209,71,0.177,72,0.242,73,0.483,91,0.798,92,1.122,99,0.991,102,2.595,158,0.012,159,0.018,160,0.012,211,1.159,267,2.299,269,3.137,303,2.239,306,1.973,307,2.595,309,2.663,310,3.422,311,2.239,312,1.973,315,2.239,326,0.891,327,1.159,328,1.709,329,3.136,330,3.504,331,3.136,332,2.595,333,4.234,334,4.234,335,3.136,336,2.239,337,1.299,338,3.023,339,2.065,340,3.136,341,2.065,342,2.595,343,2.065,344,4.436,345,3.664,346,3.136,347,3.136,348,3.136,349,3.136,350,2.221,351,3.136,352,2.796,353,2.595,354,3.137,355,3.136,356,2.065,357,2.691,358,3.827,359,1.595,360,3.136,361,4.982,362,2.065,363,3.136,364,1.754,365,2.065,366,2.065,367,3.136,368,2.595,369,3.136,370,3.136,371,2.065,372,2.595,373,3.136,374,3.791,375,2.595,376,3.136,377,2.385,378,2.065,379,2.239,380,1.76,381,4.794,382,1.474,383,1.709,384,2.065,385,1.042,386,5.36,387,3.768,388,1.562,389,5.36,390,5.36,391,5.36,392,4.553,393,4.553,394,2.065,395,3.422,396,2.556,397,3.136,398,2.065,399,2.065,400,2.065,401,2.065,402,3.137,403,2.065,404,2.065,405,2.065]],["title/interfaces/Song.html",[406,1.686,407,1.686]],["body/interfaces/Song.html",[3,0.341,4,0.282,9,0.282,21,0.402,22,1.542,27,2.02,43,0.037,44,0.753,45,0.853,53,1.932,71,0.341,124,2.839,158,0.023,159,0.029,160,0.023,316,3.705,354,4.087,359,1.498,406,2.232,407,3.243,408,2.839,409,3.291,410,3.977,411,2.839,412,4.205,413,4.012,414,4.939,415,4.939]],["title/components/SpotifyHomeComponent.html",[0,0.171,141,0.572]],["body/components/SpotifyHomeComponent.html",[0,0.238,1,0.514,2,1.006,3,0.208,4,0.173,5,0.759,6,0.759,7,0.759,8,0.759,9,0.173,11,0.829,12,1.304,13,0.759,14,1.802,15,1.49,17,1.106,19,1.106,21,0.246,22,1.106,27,1.574,28,0.537,29,1.433,32,0.415,36,2.399,37,1.907,38,1.729,40,0.798,42,0.749,43,0.037,44,0.615,45,0.634,46,0.749,49,0.634,50,1.074,53,0.759,54,1.433,55,1.433,57,2.317,60,1.788,64,0.571,65,0.246,71,0.208,72,0.285,73,0.569,74,1.334,77,1.53,89,2.012,91,0.475,92,0.569,96,1.006,99,1.362,100,2.528,101,2.931,103,1.433,129,0.628,130,1.106,131,0.759,132,1.433,133,0.759,134,0.759,135,0.514,136,0.759,137,0.514,138,0.759,139,0.463,140,0.759,141,0.874,142,0.759,143,0.514,144,0.759,145,0.514,146,0.759,147,0.463,148,0.514,149,0.759,150,0.514,151,0.628,152,0.759,153,0.463,154,0.759,155,0.463,156,0.759,157,0.759,158,0.014,159,0.021,160,0.014,182,1.228,183,1.11,229,1.228,238,3.388,295,2.012,297,2.528,306,2.228,359,0.916,364,1.007,416,3.388,417,2.012,418,3.541,419,4.177,420,3.541,421,4.177,422,4.177,423,4.177,424,3.541,425,3.276,426,3.541,427,3.541,428,2.431,429,1.736,430,2.431,431,2.431,432,2.931,433,2.228,434,3.541,435,2.431,436,2.431,437,2.228,438,3.541,439,3.541,440,3.541,441,2.431,442,1.736,443,1.736,444,2.431,445,2.431,446,2.431,447,3.541,448,1.365,449,1.53,450,2.431,451,2.431,452,3.541,453,3.541,454,2.931,455,2.012,456,2.012,457,1.53,458,2.012,459,2.012,460,2.012,461,2.012,462,1.736,463,2.012,464,1.736,465,1.736,466,1.736,467,1.736,468,1.736,469,1.736,470,2.431]],["title/interceptors/SpotifyInterceptor.html",[175,1.686,471,2.486]],["body/interceptors/SpotifyInterceptor.html",[3,0.272,4,0.226,9,0.226,11,0.743,21,0.321,28,0.648,32,0.542,38,1.944,40,0.648,42,0.903,43,0.038,44,0.572,45,0.648,46,0.903,49,0.482,64,0.604,65,0.321,68,2.268,71,0.272,72,0.372,73,0.743,91,0.572,148,0.672,158,0.019,159,0.025,160,0.019,175,2.397,211,1.783,326,1.214,350,1.77,352,3.275,359,1.197,375,3.993,380,1.783,387,2.629,388,1.847,472,3.176,473,2.629,474,4.271,475,3.993,476,3.993,477,4.455,478,4.271,479,4.271,480,3.176,481,3.176,482,4.271,483,4.271,484,5.16,485,3.445,486,5.16,487,3.176,488,4.271,489,2.708,490,3.176,491,4.271,492,1.45,493,3.176,494,3.176,495,3.176,496,3.176,497,3.176,498,3.176,499,3.049,500,4.271,501,4.271,502,4.271,503,4.271,504,3.049,505,3.176,506,2.629,507,3.176,508,3.176,509,3.176,510,2.629,511,3.176,512,2.629,513,2.629,514,2.629,515,3.176,516,3.176,517,3.176,518,3.176]],["title/components/SpotifyPlayerComponent.html",[0,0.171,143,0.635]],["body/components/SpotifyPlayerComponent.html",[0,0.213,1,0.426,2,0.875,3,0.386,4,0.143,5,0.629,6,0.629,7,0.629,8,0.629,9,0.143,11,0.72,12,1.166,13,0.629,14,1.736,15,1.435,17,0.961,19,0.961,21,0.204,22,0.961,27,1.056,28,0.467,29,1.306,32,0.344,35,2.547,36,1.909,40,0.808,42,0.426,43,0.038,44,0.5,45,0.567,46,0.426,49,0.721,50,1.156,54,1.056,55,1.056,57,1.554,64,0.49,65,0.204,71,0.173,72,0.236,73,0.472,74,0.759,91,0.412,92,0.472,96,0.875,99,1.286,103,0.629,124,2.985,129,0.52,130,0.961,131,0.629,132,1.306,133,0.629,134,0.629,135,0.426,136,0.629,137,0.426,138,0.629,139,0.384,140,0.629,141,0.384,142,0.629,143,0.884,144,0.629,145,0.426,146,0.629,147,0.384,148,0.426,149,0.629,150,0.426,151,0.52,152,0.629,153,0.384,154,0.629,155,0.384,156,0.629,157,0.629,158,0.012,159,0.018,160,0.012,251,3.867,316,2.63,317,1.438,344,3.46,364,0.835,380,2.528,407,3.04,412,2.985,413,2.197,443,1.438,462,2.985,464,1.438,465,1.438,466,1.438,467,1.438,468,1.438,469,1.438,485,2.197,489,1.728,492,0.92,519,4.482,520,1.667,521,3.735,522,3.078,523,4.504,524,3.735,525,3.46,526,4.181,527,3.46,528,3.46,529,4.181,530,2.015,531,3.735,532,2.63,533,3.078,534,2.015,535,2.015,536,2.015,537,4.181,538,3.46,539,4.181,540,4.088,541,4.181,542,4.181,543,4.181,544,2.015,545,3.078,546,2.015,547,2.015,548,2.547,549,2.547,550,3.078,551,1.886,552,2.666,553,2.015,554,2.015,555,1.438,556,2.015,557,3.078,558,3.078,559,2.015,560,2.015,561,2.015,562,2.015,563,2.015,564,2.015,565,3.735,566,1.667,567,3.735,568,2.015,569,2.015,570,2.015,571,2.015,572,3.078,573,2.015,574,3.078,575,2.015,576,2.015,577,3.078,578,3.078,579,3.078,580,3.078,581,3.078,582,3.078,583,2.015,584,2.015,585,4.504,586,3.078,587,2.015,588,2.015,589,2.015,590,2.015,591,2.015,592,2.015,593,2.015,594,1.667,595,2.015,596,2.015]],["title/injectables/SpotifyPlayerService.html",[326,0.854,532,1.89]],["body/injectables/SpotifyPlayerService.html",[3,0.229,4,0.19,9,0.19,16,1.22,21,0.27,27,0.917,28,0.575,32,0.456,37,1.731,38,1.007,40,0.82,42,1.07,43,0.038,44,0.678,45,0.768,46,1.07,49,0.798,50,0.625,53,1.817,54,1.644,55,1.644,64,0.561,65,0.27,71,0.229,72,0.313,73,0.625,99,0.887,158,0.016,159,0.022,160,0.016,211,1.5,267,1.349,312,3.307,313,3.137,316,1.681,326,1.077,327,1.5,337,1.681,338,3.422,350,2.178,357,2.95,359,1.806,385,1.349,396,2.472,407,2.128,412,1.908,413,1.908,448,1.5,477,4.35,485,2.706,525,3.966,527,3.137,528,3.137,532,2.384,540,4.35,548,3.137,549,3.137,555,3.943,597,2.212,598,2.706,599,3.79,600,4.793,601,3.79,602,3.79,603,2.672,604,2.672,605,2.672,606,3.79,607,2.672,608,3.79,609,5.405,610,5.256,611,5.256,612,3.79,613,2.672,614,3.79,615,2.672,616,3.79,617,2.672,618,2.212,619,2.212,620,2.212,621,2.672,622,2.212,623,2.672,624,2.672,625,2.672,626,2.672,627,2.672,628,2.672,629,2.672,630,2.672,631,2.672,632,2.672,633,2.672,634,2.672,635,2.672,636,2.672]],["title/components/SpotifySearchComponent.html",[0,0.171,145,0.635]],["body/components/SpotifySearchComponent.html",[0,0.234,1,0.501,2,0.987,3,0.203,4,0.168,5,0.74,6,0.74,7,0.74,8,0.74,9,0.168,11,0.813,12,1.285,13,0.74,14,1.793,15,1.482,17,1.085,19,1.085,21,0.239,22,1.085,28,0.527,29,1.415,32,0.404,36,2.303,40,0.828,42,0.959,43,0.037,44,0.731,45,0.766,46,0.959,49,0.732,50,1.129,53,1.415,54,1.411,55,1.411,64,0.482,65,0.239,71,0.203,72,0.277,73,0.554,77,1.49,91,0.466,92,0.554,96,1.371,99,1.331,103,0.74,129,0.612,130,1.085,131,0.74,132,1.415,133,0.74,134,0.74,135,0.501,136,0.74,137,0.501,138,0.74,139,0.451,140,0.74,141,0.451,142,0.74,143,0.501,144,0.74,145,0.959,146,0.74,147,0.451,148,0.501,149,0.74,150,0.501,151,0.612,152,0.74,153,0.451,154,0.74,155,0.451,156,0.74,157,0.74,158,0.014,159,0.02,160,0.014,229,1.196,241,3.959,315,2.481,317,2.481,350,0.982,364,0.982,388,1.192,425,3.236,429,1.691,442,3.601,443,1.691,455,1.96,456,1.96,457,1.49,458,1.96,459,1.96,460,1.96,461,1.96,462,1.691,463,1.96,464,1.691,465,1.691,466,1.691,467,1.691,468,1.691,469,1.691,637,4.589,638,1.96,639,3.405,640,4.115,641,3.475,642,4.115,643,4.826,644,3.475,645,2.875,646,3.475,647,2.369,648,3.475,649,3.475,650,2.369,651,2.369,652,2.369,653,2.875,654,2.369,655,1.96,656,3.475,657,2.369,658,2.369,659,2.369,660,4.826,661,4.532,662,2.369,663,2.369,664,2.369,665,3.475,666,2.369,667,2.369,668,2.369,669,4.115,670,2.369,671,2.369,672,2.369,673,2.369,674,2.369,675,3.475]],["title/injectables/SpotifyService.html",[36,1.372,326,0.854]],["body/injectables/SpotifyService.html",[3,0.274,4,0.227,9,0.227,16,1.458,21,0.323,22,1.339,28,0.651,32,0.545,36,1.957,37,1.957,40,0.843,42,1.023,43,0.037,44,0.648,45,0.734,46,1.023,49,0.819,50,0.747,53,1.734,54,1.47,55,1.47,60,2.164,64,0.606,65,0.323,71,0.274,72,0.374,73,0.747,74,1.823,158,0.019,159,0.025,160,0.019,211,1.793,306,2.697,326,1.218,327,1.793,330,4.279,337,2.009,338,3.692,350,1.776,352,2.903,383,2.643,385,1.613,388,1.85,402,2.643,433,2.697,437,2.009,475,3.547,476,3.547,489,1.793,492,1.458,499,3.454,504,2.28,551,2.164,552,2.28,622,2.643,645,3.547,653,3.547,655,2.643,676,2.643,677,4.838,678,4.838,679,4.287,680,4.287,681,3.194,682,4.287,683,4.287,684,3.194,685,4.287,686,3.194,687,4.287,688,4.004,689,3.194,690,3.194,691,2.643,692,2.28,693,2.28,694,3.194,695,3.194,696,3.194,697,3.194,698,3.194]],["title/components/SpotifyStoreTokenComponent.html",[0,0.171,147,0.572]],["body/components/SpotifyStoreTokenComponent.html",[0,0.268,1,0.64,2,1.175,3,0.259,4,0.215,5,0.946,6,0.946,7,0.946,8,0.946,9,0.215,11,0.968,12,1.47,13,0.946,14,1.869,15,1.545,17,1.291,19,1.291,21,0.306,28,0.628,29,1.58,32,0.516,39,3.995,40,0.628,42,0.64,43,0.037,44,0.631,45,0.46,46,0.64,49,0.46,50,0.968,64,0.484,65,0.306,70,1.383,71,0.259,72,0.355,73,0.709,74,1.141,91,0.554,92,0.709,96,1.175,99,1.416,103,0.946,129,0.782,130,1.291,131,0.946,132,1.58,133,0.946,134,0.946,135,0.64,136,0.946,137,0.64,138,0.946,139,0.577,140,0.946,141,0.577,142,0.946,143,0.64,144,0.946,145,0.64,146,0.946,147,0.963,148,1.286,149,0.946,150,0.64,151,0.782,152,0.946,153,0.577,154,0.946,155,0.577,156,0.946,157,0.946,158,0.018,159,0.024,160,0.018,245,2.962,284,2.952,352,2.84,388,1.039,416,2.962,499,2.162,510,2.506,512,2.506,513,2.506,514,2.506,699,2.506,700,4.708,701,4.135,702,3.028,703,4.187,704,3.028,705,2.601,706,3.028,707,3.028,708,3.028,709,4.135,710,3.028,711,3.028,712,3.028,713,3.028]],["title/guards/SpotifyTokenGuard.html",[260,1.89,714,2.145]],["body/guards/SpotifyTokenGuard.html",[3,0.331,4,0.274,9,0.274,11,0.904,16,1.764,21,0.39,28,0.736,40,0.586,42,0.817,43,0.037,44,0.518,45,0.586,46,0.817,49,0.586,60,1.95,64,0.621,65,0.39,70,1.764,71,0.331,72,0.452,158,0.023,159,0.028,160,0.023,260,3.051,267,2.449,274,4.741,326,1.378,350,1.601,352,2.168,385,1.95,437,3.051,489,2.976,492,1.764,504,2.758,705,3.051,715,2.758,716,4.014,717,3.197,718,3.863,719,4.602,720,4.388,721,4.602,722,3.863,723,4.014,724,5.302,725,3.863,726,3.863,727,3.863,728,3.863]],["title/components/SpotifyUserInfoComponent.html",[0,0.171,150,0.635]],["body/components/SpotifyUserInfoComponent.html",[0,0.277,1,0.683,2,1.227,3,0.417,4,0.229,5,1.008,6,1.008,7,1.008,8,1.008,9,0.229,11,1.011,12,1.519,13,1.008,14,1.887,15,1.56,17,1.349,19,1.349,21,0.326,22,1.349,28,0.655,29,1.622,32,0.83,40,0.738,43,0.036,44,0.579,49,0.49,50,1.011,54,1.108,55,1.108,57,2.18,64,0.378,65,0.326,71,0.277,72,0.378,91,0.579,92,0.756,96,1.227,99,1.406,103,1.008,129,0.834,130,1.349,131,1.008,132,1.622,133,1.008,134,1.008,135,0.683,136,1.008,137,0.683,138,1.008,139,0.615,140,1.008,141,0.615,142,1.008,143,0.683,144,1.008,145,0.683,146,1.008,147,0.615,148,0.683,149,1.008,150,1.099,151,1.582,152,1.008,153,0.615,154,1.008,155,0.615,156,1.008,157,1.008,158,0.019,159,0.025,160,0.019,248,3.708,416,3.268,729,2.672,730,4.865,731,4.318,732,4.865,733,4.318,734,3.229]],["title/interfaces/Todo.html",[91,0.403,406,1.686]],["body/interfaces/Todo.html",[3,0.325,4,0.269,9,0.269,21,0.383,22,1.496,27,1.995,43,0.037,45,0.864,53,1.884,71,0.325,91,0.819,96,1.076,158,0.022,159,0.028,160,0.022,303,2.704,357,2.689,359,1.427,364,2.411,406,2.689,408,2.704,437,3.305,551,2.937,735,3.134,736,3.788,737,3.788,738,3.942,739,3.474,740,5.254,741,3.964,742,4.791,743,4.791,744,4.791,745,4.791]],["title/guards/TodoDataResolverService.html",[263,1.89,714,2.145]],["body/guards/TodoDataResolverService.html",[3,0.245,4,0.203,9,0.203,11,0.668,16,1.304,21,0.288,27,0.979,28,0.603,32,0.487,37,2.451,38,1.859,40,0.603,42,0.84,43,0.037,44,0.532,45,0.603,46,0.84,49,0.433,57,1.442,64,0.629,65,0.288,68,2.039,70,1.304,71,0.245,72,0.334,73,0.668,74,1.076,91,0.808,92,0.929,109,2.835,158,0.017,159,0.023,160,0.017,263,2.498,265,4.166,267,1.442,270,4.083,272,4.083,273,4.083,308,3.286,326,1.128,345,2.835,350,2.045,353,3.286,359,1.496,364,1.183,372,3.286,377,1.796,382,2.039,385,1.442,388,1.362,396,2.229,411,3.833,433,3.104,551,1.442,566,3.286,598,4.009,619,2.363,620,2.363,693,2.039,705,1.796,715,2.039,719,4.083,720,3.778,721,4.083,723,3.286,738,2.039,739,1.796,746,3.778,747,2.363,748,3.971,749,3.286,750,3.971,751,3.971,752,3.971,753,3.971,754,3.971,755,3.971,756,2.363,757,2.492,758,2.855,759,3.259,760,3.971,761,2.855,762,2.855,763,2.039,764,2.855,765,3.971,766,2.855,767,2.855,768,2.855,769,2.855,770,2.855,771,2.855,772,2.855]],["title/components/TodoEditComponent.html",[0,0.171,153,0.572]],["body/components/TodoEditComponent.html",[0,0.23,1,0.485,2,0.964,3,0.197,4,0.163,5,0.717,6,0.717,7,0.717,8,0.717,9,0.163,11,0.794,12,1.261,13,0.717,14,1.783,15,1.474,17,1.06,19,1.06,21,0.232,22,1.06,27,1.817,28,0.515,29,1.394,32,0.391,39,3.684,40,0.804,42,0.485,43,0.037,44,0.541,45,0.677,46,0.485,49,0.515,50,0.945,53,1.394,54,1.531,55,1.531,57,1.714,60,1.159,64,0.584,65,0.232,70,1.048,71,0.197,72,0.269,73,0.537,74,1.522,91,0.778,92,0.794,96,1.268,99,1.115,103,0.717,129,0.592,130,1.06,131,0.717,132,1.394,133,0.717,134,0.717,135,0.485,136,0.717,137,0.485,138,0.717,139,0.437,140,0.717,141,0.437,142,0.717,143,0.485,144,0.717,145,0.485,146,0.717,147,0.437,148,0.485,149,0.717,150,0.485,151,0.592,152,0.717,153,0.85,154,0.717,155,0.437,156,0.717,157,0.717,158,0.013,159,0.02,160,0.013,182,1.159,183,1.048,219,3.403,229,1.159,297,2.884,309,2.996,364,1.849,388,1.938,442,3.862,448,1.905,449,2.135,551,1.714,703,3.693,705,2.541,738,2.423,739,2.135,756,1.899,757,2.254,759,2.423,763,1.638,773,4.477,774,1.899,775,4.039,776,3.394,777,4.763,778,4.039,779,4.039,780,4.039,781,4.039,782,4.463,783,2.294,784,2.294,785,2.294,786,2.294,787,2.294,788,2.294,789,2.294,790,4.039,791,4.463,792,3.394,793,2.294,794,1.443,795,2.294,796,1.899,797,2.294,798,2.294,799,2.294,800,2.294,801,2.294,802,2.294,803,2.294,804,2.294,805,2.294,806,2.294,807,2.294,808,2.294,809,3.394,810,2.423,811,2.294,812,3.394,813,2.294,814,2.294,815,3.394]],["title/components/TodoListComponent.html",[0,0.171,155,0.572]],["body/components/TodoListComponent.html",[0,0.201,1,0.39,2,0.817,3,0.158,4,0.131,5,0.576,6,0.576,7,0.576,8,0.576,9,0.131,11,0.673,12,1.104,13,0.576,14,1.703,15,1.408,17,0.898,19,0.898,21,0.186,22,0.898,27,1.912,28,0.436,29,1.246,32,0.315,40,0.772,42,0.608,43,0.037,44,0.535,45,0.695,46,0.608,49,0.606,50,1.012,53,1.104,54,1.212,55,1.212,64,0.537,65,0.186,71,0.158,72,0.216,73,0.432,74,1.084,77,2.223,91,0.796,92,1.291,93,3.58,96,0.817,99,1.012,100,2.053,103,0.576,118,1.527,129,0.476,130,0.898,131,0.576,132,1.246,133,0.576,134,0.576,135,0.39,136,0.576,137,0.39,138,0.576,139,0.351,140,0.576,141,0.351,142,0.576,143,0.39,144,0.576,145,0.39,146,0.576,147,0.351,148,0.39,149,0.576,150,0.39,151,0.476,152,0.576,153,0.351,154,0.576,155,0.76,156,0.576,157,0.576,158,0.011,159,0.017,160,0.011,182,0.932,183,0.842,205,3.271,231,1.317,232,1.317,292,2.38,302,2.38,309,1.809,310,2.849,311,1.317,312,1.809,336,2.849,357,2.24,358,2.849,359,1.332,364,1.792,368,2.38,377,2.721,379,2.053,380,2.24,388,0.986,395,3.631,396,2.24,411,3.534,425,2.849,432,2.38,448,1.036,449,2.223,454,2.38,457,1.809,492,0.842,506,2.38,551,2.184,552,3.088,594,3.302,598,2.053,639,2.924,749,2.38,757,2.015,759,2.849,763,1.317,794,1.161,796,1.527,810,1.317,816,4.303,817,1.527,818,2.876,819,3.534,820,2.876,821,3.534,822,3.58,823,2.924,824,2.38,825,1.845,826,3.99,827,3.302,828,2.876,829,3.534,830,2.876,831,2.876,832,2.876,833,3.302,834,2.38,835,1.845,836,2.876,837,1.845,838,2.876,839,2.876,840,2.876,841,1.845,842,2.876,843,1.845,844,2.38,845,4.326,846,2.876,847,2.876,848,2.876,849,2.38,850,2.38,851,1.845,852,1.845,853,2.876,854,2.876,855,1.845,856,1.845,857,1.845,858,1.845,859,1.845,860,1.845,861,1.845,862,1.527,863,1.845,864,1.845,865,1.845,866,1.845,867,1.845,868,1.527,869,1.527,870,1.845,871,2.876,872,2.876,873,2.876,874,2.38,875,3.99,876,1.845,877,1.527,878,1.527,879,1.845,880,1.845]],["title/injectables/TodoListService.html",[326,0.854,757,1.517]],["body/injectables/TodoListService.html",[3,0.207,4,0.172,9,0.172,16,1.106,21,0.245,22,1.103,28,0.536,32,0.413,37,1.612,38,1.726,40,0.867,42,1.075,43,0.038,44,0.681,45,0.816,46,1.075,49,0.816,50,0.975,53,1.713,54,1.429,55,1.429,64,0.595,65,0.245,71,0.207,72,0.284,73,0.567,74,0.912,91,0.747,92,0.826,158,0.014,159,0.021,160,0.014,229,1.223,231,1.729,232,1.729,267,1.223,326,1.003,327,1.359,332,2.922,336,3.27,337,1.523,342,2.004,350,2.106,357,1.982,358,1.729,359,0.912,377,2.881,379,2.521,380,1.982,382,1.729,385,1.223,388,1.211,395,2.975,396,1.359,429,1.729,448,1.359,449,2.221,489,1.359,492,1.106,618,2.004,688,3.448,691,2.922,692,2.521,693,1.729,739,1.523,757,1.783,794,3.627,810,1.729,822,3.448,823,3.448,824,2.922,827,3.79,833,4.029,834,2.922,844,2.922,849,2.922,862,2.922,868,2.004,869,2.004,874,2.004,881,2.004,882,3.531,883,3.531,884,4.58,885,4.58,886,3.531,887,3.531,888,3.531,889,2.421,890,2.421,891,3.531,892,2.421,893,3.531,894,4.58,895,3.531,896,2.421,897,3.531,898,2.421,899,2.421,900,3.531,901,2.421,902,2.421,903,4.58,904,2.421,905,2.421,906,2.421,907,3.531,908,2.421,909,3.531,910,2.421,911,2.421,912,2.421,913,2.421,914,2.421,915,2.421,916,2.421,917,2.421,918,2.421,919,2.421,920,3.531,921,2.421,922,2.421,923,2.004,924,2.421,925,2.421]],["title/coverage.html",[926,3.403]],["body/coverage.html",[0,0.343,1,0.727,9,0.244,10,2.845,36,1.57,38,1.296,43,0.037,45,0.522,91,0.461,109,4.184,135,0.727,137,0.727,139,0.655,141,0.655,143,0.727,145,0.727,147,0.655,148,0.952,150,0.727,151,1.162,153,0.655,155,0.655,158,0.02,159,0.026,160,0.02,175,1.93,200,2.163,205,2.163,219,2.163,238,2.163,241,2.455,245,2.163,248,2.455,251,2.455,260,2.163,263,2.163,265,2.455,279,2.845,285,2.845,290,2.845,291,2.845,326,1.513,328,2.845,388,1.179,406,2.527,407,1.93,409,2.845,416,3.157,417,2.845,471,2.845,473,2.845,519,2.845,520,2.845,532,2.163,555,2.455,597,2.845,637,2.845,638,2.845,676,2.845,699,2.845,714,3.214,716,2.845,717,2.845,729,2.845,735,2.845,746,2.845,747,2.845,757,1.736,773,2.845,774,2.845,794,2.163,816,2.845,817,2.845,850,2.845,877,2.845,878,2.845,881,2.845,926,2.845,927,3.438,928,3.438,929,3.438,930,3.438,931,3.438,932,3.438,933,3.438,934,3.438,935,3.438,936,3.438,937,4.501,938,4.501,939,4.501,940,3.438,941,3.438,942,5.324,943,3.438,944,3.438,945,3.438,946,3.438,947,3.438,948,3.438,949,3.438,950,3.438,951,3.438,952,3.438,953,3.438,954,3.438]],["title/dependencies.html",[164,2.275,955,2.503]],["body/dependencies.html",[43,0.037,65,0.444,70,2.007,158,0.026,159,0.031,160,0.026,164,2.765,182,2.651,183,2.397,229,2.22,492,2.007,956,4.396,957,6.146,958,4.396,959,5.25,960,4.396,961,4.396,962,4.396,963,4.396,964,4.396,965,4.396,966,4.396,967,4.396,968,4.396]],["title/index.html",[21,0.253,969,2.503,970,2.503]],["body/index.html",[4,0.299,15,1.086,43,0.03,62,3.003,158,0.025,159,0.03,160,0.025,178,2.646,320,3.481,345,3.65,433,2.646,457,3.604,538,3.481,741,3.481,923,3.481,971,4.206,972,4.206,973,5.508,974,5.508,975,4.206,976,4.206,977,5.508,978,4.206,979,4.206,980,4.206,981,4.206,982,4.206,983,4.206,984,4.206,985,4.206,986,5.112,987,5.112,988,5.729,989,4.206,990,5.112,991,5.112,992,4.206,993,5.729,994,4.206,995,4.206,996,4.206,997,5.508,998,4.206]],["title/modules.html",[163,2.308]],["body/modules.html",[43,0.032,158,0.028,159,0.032,160,0.028,162,3.015,163,2.69,174,2.69,183,2.188,305,3.966,999,4.793,1000,5.523,1001,4.793,1002,4.793]],["title/overview.html",[1003,3.403]],["body/overview.html",[1,1.245,2,1.058,43,0.037,129,0.961,135,1.103,137,1.103,139,0.993,141,0.993,143,1.103,145,1.103,147,0.993,150,1.103,153,0.993,155,0.993,158,0.022,159,0.028,160,0.022,161,2.342,162,3.996,163,2.09,164,2.342,165,3.081,166,3.081,167,3.081,168,2.658,169,3.081,170,3.081,171,3.081,172,3.081,173,3.081,174,2.926,175,2.926,176,3.922,177,3.081,178,2.342,258,2.342,327,2.09,408,2.658,692,3.722,715,2.658,1003,3.081,1004,3.723,1005,3.723,1006,3.723]],["title/routes.html",[258,2.587]],["body/routes.html",[43,0.033,158,0.029,159,0.033,160,0.029,258,3.091]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["0/10",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":691,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["1/3",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["10.1.1",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["1000)).tostring",{"_index":514,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["11",{"_index":1004,"title":{},"body":{"overview.html":{}}}],["14",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":878,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["1].url",{"_index":636,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["2",{"_index":692,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["2.0.0",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["2/13",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":629,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["2000",{"_index":869,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["27",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":665,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["3/11",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":513,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["37",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1005,"title":{},"body":{"overview.html":{}}}],["4/8",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":877,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["500",{"_index":564,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["500ms",{"_index":541,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["599px",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["6.5.4",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1006,"title":{},"body":{"overview.html":{}}}],["9.1.9",{"_index":975,"title":{},"body":{"index.html":{}}}],["9/10",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["__v",{"_index":738,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["_id",{"_index":739,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{}}}],["_snackbar",{"_index":826,"title":{},"body":{"components/TodoListComponent.html":{}}}],["absolute",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["access",{"_index":389,"title":{},"body":{"injectables/HttpService.html":{}}}],["actions",{"_index":313,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["activatedroute",{"_index":703,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":719,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["actual_component",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["add",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["added",{"_index":814,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["addnewtodo",{"_index":329,"title":{},"body":{"injectables/HttpService.html":{}}}],["addnewtodo(newtododata",{"_index":340,"title":{},"body":{"injectables/HttpService.html":{}}}],["addtodo",{"_index":882,"title":{},"body":{"injectables/TodoListService.html":{}}}],["addtodo(newtododata",{"_index":888,"title":{},"body":{"injectables/TodoListService.html":{}}}],["album",{"_index":412,"title":{},"body":{"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["album's",{"_index":414,"title":{},"body":{"interfaces/Song.html":{}}}],["alert('nav",{"_index":712,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["align",{"_index":467,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["allow",{"_index":391,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular",{"_index":973,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["angular/compiler",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["angular/material/table",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"dependencies.html":{}}}],["api",{"_index":307,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{}}}],["apiwith",{"_index":324,"title":{},"body":{"components/HomePageComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["app.component",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":162,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":174,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":377,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["artist",{"_index":316,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["asynchronity",{"_index":543,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["authorization",{"_index":502,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["autocomplete",{"_index":660,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["automatically",{"_index":982,"title":{},"body":{"index.html":{}}}],["available",{"_index":1002,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["bc",{"_index":542,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["bearer",{"_index":503,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["between",{"_index":466,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["black",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":437,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{}}}],["bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom:0",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["bpobserver",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["bpobserver.ismatched('(max",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpointobserver",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1000,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":372,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["calls",{"_index":344,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyPlayerComponent.html":{}}}],["canactivate",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{}}}],["canactivate(route",{"_index":718,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["cases",{"_index":924,"title":{},"body":{"injectables/TodoListService.html":{}}}],["center",{"_index":469,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["change",{"_index":984,"title":{},"body":{"index.html":{}}}],["changed",{"_index":563,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["check",{"_index":433,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"index.html":{}}}],["checks",{"_index":474,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["checkspotifystatus",{"_index":330,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["class",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["cleanup",{"_index":839,"title":{},"body":{"components/TodoListComponent.html":{}}}],["cli",{"_index":974,"title":{},"body":{"index.html":{}}}],["click",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["clickable",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["clientid",{"_index":347,"title":{},"body":{"injectables/HttpService.html":{}}}],["clientsecret",{"_index":348,"title":{},"body":{"injectables/HttpService.html":{}}}],["cluster_appmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["col",{"_index":875,"title":{},"body":{"components/TodoListComponent.html":{}}}],["color",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":589,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["columns",{"_index":848,"title":{},"body":{"components/TodoListComponent.html":{}}}],["come",{"_index":322,"title":{},"body":{"components/HomePageComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["component:todoeditcomponent",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["components/spotify",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["components/spotify/spotify",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["components/todolist/todo",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["componenttitle",{"_index":777,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["confirm",{"_index":815,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["console",{"_index":856,"title":{},"body":{"components/TodoListComponent.html":{}}}],["console.log('playback",{"_index":562,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["console.log(tokendecoded",{"_index":728,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["const",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(bpobserver",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":337,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["constructor(httpsvc",{"_index":480,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["constructor(private",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(route",{"_index":702,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["constructor(spotifyservice",{"_index":647,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["constructor(spotifysvc",{"_index":530,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["constructor(titleservice",{"_index":825,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(titlesvc",{"_index":295,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["constructor(todosvc",{"_index":756,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["container",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":818,"title":{},"body":{"components/TodoListComponent.html":{}}}],["contains",{"_index":301,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":364,"title":{},"body":{"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["context",{"_index":752,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["context_uri",{"_index":696,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["control",{"_index":390,"title":{},"body":{"injectables/HttpService.html":{}}}],["controls",{"_index":594,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{}}}],["coverage",{"_index":926,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":308,"title":{},"body":{"components/HomePageComponent.html":{},"guards/TodoDataResolverService.html":{}}}],["currelement",{"_index":642,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["current",{"_index":380,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["currid",{"_index":778,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currplayerstatus",{"_index":523,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["currtodo",{"_index":779,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currtodo._id",{"_index":772,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["cursor",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["data",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["data.find((currtodo",{"_index":771,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["data.todo",{"_index":805,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["data.todo._id",{"_index":803,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["date().gettime",{"_index":499,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["db",{"_index":304,"title":{},"body":{"components/HomePageComponent.html":{}}}],["declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["deep",{"_index":458,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["define",{"_index":830,"title":{},"body":{"components/TodoListComponent.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["defines",{"_index":847,"title":{},"body":{"components/TodoListComponent.html":{}}}],["delete",{"_index":310,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["deleted",{"_index":921,"title":{},"body":{"injectables/TodoListService.html":{}}}],["deletes",{"_index":836,"title":{},"body":{"components/TodoListComponent.html":{}}}],["deletetodo",{"_index":824,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodo(idtodo",{"_index":834,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodoelement",{"_index":331,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletetodoelement(idtodo",{"_index":355,"title":{},"body":{"injectables/HttpService.html":{}}}],["dependencies",{"_index":164,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":359,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["destroy",{"_index":838,"title":{},"body":{"components/TodoListComponent.html":{}}}],["dev",{"_index":979,"title":{},"body":{"index.html":{}}}],["development",{"_index":976,"title":{},"body":{"index.html":{}}}],["device",{"_index":610,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["direction",{"_index":588,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["direction:column",{"_index":596,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["direction:row",{"_index":586,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["directive",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["display",{"_index":584,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["display:flex",{"_index":462,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["displayed",{"_index":849,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displayedcolumns",{"_index":821,"title":{},"body":{"components/TodoListComponent.html":{}}}],["displayname",{"_index":644,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["displayname(element",{"_index":649,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["displays",{"_index":844,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displaysnackbar",{"_index":883,"title":{},"body":{"injectables/TodoListService.html":{}}}],["displaysnackbar(message",{"_index":891,"title":{},"body":{"injectables/TodoListService.html":{}}}],["documentation",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["don't",{"_index":451,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["don\\'t",{"_index":470,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["dummy",{"_index":903,"title":{},"body":{"injectables/TodoListService.html":{}}}],["duration",{"_index":868,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["dynamic",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":994,"title":{},"body":{"index.html":{}}}],["edit",{"_index":309,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit'},{'name",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit.component.css",{"_index":775,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.html",{"_index":776,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts",{"_index":774,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:15",{"_index":786,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:16",{"_index":787,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:17",{"_index":789,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:18",{"_index":788,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:21",{"_index":793,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:27",{"_index":783,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:33",{"_index":784,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:49",{"_index":785,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit/todo",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoEditComponent.html":{},"coverage.html":{}}}],["edited",{"_index":811,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["editmode",{"_index":780,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edittodo",{"_index":332,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["edittodo(idtodo",{"_index":360,"title":{},"body":{"injectables/HttpService.html":{}}}],["edittodo(newtodo",{"_index":895,"title":{},"body":{"injectables/TodoListService.html":{}}}],["elem._id",{"_index":911,"title":{},"body":{"injectables/TodoListService.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["element.name",{"_index":673,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["empty",{"_index":753,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["end",{"_index":993,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":537,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["enlever",{"_index":858,"title":{},"body":{"components/TodoListComponent.html":{}}}],["entering",{"_index":750,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["environment",{"_index":383,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["environments/environment",{"_index":384,"title":{},"body":{"injectables/HttpService.html":{}}}],["error",{"_index":351,"title":{},"body":{"injectables/HttpService.html":{}}}],["etc",{"_index":509,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["example",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":990,"title":{},"body":{"index.html":{}}}],["expdate",{"_index":682,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["export",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["exports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["features",{"_index":321,"title":{},"body":{"components/HomePageComponent.html":{}}}],["fetch",{"_index":754,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["fetchautocomplete",{"_index":679,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetchautocomplete(query",{"_index":683,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetches",{"_index":368,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["fetchtodolist",{"_index":884,"title":{},"body":{"injectables/TodoListService.html":{}}}],["fetchtodosandthemes",{"_index":885,"title":{},"body":{"injectables/TodoListService.html":{}}}],["field",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["files",{"_index":985,"title":{},"body":{"index.html":{}}}],["flex",{"_index":585,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["form",{"_index":781,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formatted",{"_index":737,"title":{},"body":{"interfaces/Todo.html":{}}}],["formcontrol",{"_index":442,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{}}}],["formcontrol(false",{"_index":792,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formgroup",{"_index":790,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["formsmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":874,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["full",{"_index":455,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["function",{"_index":840,"title":{},"body":{"components/TodoListComponent.html":{}}}],["further",{"_index":996,"title":{},"body":{"index.html":{}}}],["generated",{"_index":972,"title":{},"body":{"index.html":{}}}],["getavailabledevices",{"_index":525,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["getinfoonplayback",{"_index":600,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["getplaybackinfo",{"_index":526,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["gets",{"_index":539,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["getspotifyauthurl",{"_index":333,"title":{},"body":{"injectables/HttpService.html":{}}}],["getting",{"_index":969,"title":{"index.html":{}},"body":{}}],["gettodo",{"_index":886,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":900,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodolist",{"_index":334,"title":{},"body":{"injectables/HttpService.html":{}}}],["github",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{}}}],["github'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["github.component.css",{"_index":280,"title":{},"body":{"components/GithubComponent.html":{}}}],["github.component.html",{"_index":281,"title":{},"body":{"components/GithubComponent.html":{}}}],["githubcomponent",{"_index":135,"title":{"components/GithubComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gmail",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{}}}],["gmail'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["gmail.component.css",{"_index":286,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmail.component.html",{"_index":287,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmailcomponent",{"_index":137,"title":{"components/GmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["go",{"_index":538,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"index.html":{}}}],["goes",{"_index":608,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["gotonextsong",{"_index":527,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["gotonextsong(with_device",{"_index":606,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["gotoprevioussong",{"_index":528,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["gotoprevioussong(with_device",{"_index":612,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["graph",{"_index":1001,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":714,"title":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":715,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"overview.html":{}}}],["guards/spotify",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handle",{"_index":922,"title":{},"body":{"injectables/TodoListService.html":{}}}],["handled",{"_index":745,"title":{},"body":{"interfaces/Todo.html":{}}}],["handles",{"_index":599,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["handlespotifystatus",{"_index":424,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["handlespotifystatus(response",{"_index":427,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["headers",{"_index":387,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["height:15vh",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["height:5vh",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["height:95vh",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":997,"title":{},"body":{"index.html":{}}}],["here",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["home",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home.component.css",{"_index":419,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.html",{"_index":420,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts",{"_index":417,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:17",{"_index":435,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:21",{"_index":436,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:25",{"_index":426,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:33",{"_index":431,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:46",{"_index":428,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:54",{"_index":430,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home/spotify",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyHomeComponent.html":{},"coverage.html":{}}}],["homepage",{"_index":418,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["homepagecomponent",{"_index":139,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["http.service",{"_index":618,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"injectables/TodoListService.html":{}}}],["http://localhost:4200",{"_index":981,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":338,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["httpclientmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":490,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httphandler",{"_index":486,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httpheaders",{"_index":381,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpinterceptor",{"_index":491,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httprequest",{"_index":484,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httpservice",{"_index":38,"title":{"injectables/HttpService.html":{}},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["httpsvc",{"_index":482,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["id",{"_index":357,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["identifier",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["idtodo",{"_index":358,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(!localstorage.getitem('spotifytoken",{"_index":445,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["if(!this.currplayerstatus",{"_index":568,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["if(!todoid",{"_index":767,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(data.todo._id",{"_index":800,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(element",{"_index":672,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["if(localstorage.getitem('spotifytoken",{"_index":495,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(newvalue.length",{"_index":667,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["if(params.token",{"_index":708,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["if(parseint(localstorage.getitem('spotifyexp",{"_index":498,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(req.url.includes('spotify",{"_index":493,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(response.status",{"_index":448,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(status",{"_index":912,"title":{},"body":{"injectables/TodoListService.html":{}}}],["if(this.editmode",{"_index":807,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(this.todosvc.todos.length",{"_index":768,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(token",{"_index":725,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["if(val",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["if(val.url.includes('/spotify/logged",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":415,"title":{},"body":{"interfaces/Song.html":{}}}],["imageurl",{"_index":413,"title":{},"body":{"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["import(\"rxjs\").observable",{"_index":764,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["important",{"_index":463,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["indicating",{"_index":438,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["info'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["info.component",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["info.component.css",{"_index":730,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.html",{"_index":731,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.ts",{"_index":729,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:12",{"_index":734,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info.component.ts:9",{"_index":733,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["info/spotify",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["init",{"_index":432,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["injectable",{"_index":326,"title":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["injectables",{"_index":327,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["input",{"_index":661,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["instanceof",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":479,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["intercept(req",{"_index":483,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptor",{"_index":471,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":472,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptors/spotify.interceptor",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":406,"title":{"interfaces/Song.html":{},"interfaces/Todo.html":{}},"body":{"interfaces/Song.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["interfaces",{"_index":408,"title":{},"body":{"interfaces/Song.html":{},"interfaces/Todo.html":{},"overview.html":{}}}],["isloggedonspotify",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["issmallscreen",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":630,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.album.images[item.album.images.length",{"_index":635,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.album.name",{"_index":634,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.artists[0].name",{"_index":633,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.name",{"_index":632,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["items",{"_index":468,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["justify",{"_index":464,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["jwt_decode(token",{"_index":727,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["karma",{"_index":992,"title":{},"body":{"index.html":{}}}],["left",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["linked",{"_index":302,"title":{},"body":{"components/HomePageComponent.html":{},"components/TodoListComponent.html":{}}}],["list",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":819,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.html",{"_index":820,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts",{"_index":817,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:24",{"_index":852,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:29",{"_index":855,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:34",{"_index":851,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:39",{"_index":828,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:55",{"_index":841,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:71",{"_index":837,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:78",{"_index":843,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:94",{"_index":835,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.service",{"_index":763,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["list.service.ts",{"_index":881,"title":{},"body":{"injectables/TodoListService.html":{},"coverage.html":{}}}],["list.service.ts:12",{"_index":905,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:13",{"_index":904,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:15",{"_index":887,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:18",{"_index":899,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:29",{"_index":901,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:39",{"_index":898,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:48",{"_index":896,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:58",{"_index":902,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:67",{"_index":892,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:73",{"_index":890,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:85",{"_index":889,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["listadd",{"_index":879,"title":{},"body":{"components/TodoListComponent.html":{}}}],["listwith",{"_index":325,"title":{},"body":{"components/HomePageComponent.html":{}}}],["loaded",{"_index":732,"title":{},"body":{"components/SpotifyUserInfoComponent.html":{}}}],["localstorage.getitem('spotifytoken",{"_index":504,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{}}}],["localstorage.setitem('spotifyexp",{"_index":512,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifyrefresh",{"_index":711,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifytoken",{"_index":510,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["logged",{"_index":453,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["logging",{"_index":314,"title":{},"body":{"components/HomePageComponent.html":{}}}],["login",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{}}}],["make",{"_index":439,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["many",{"_index":319,"title":{},"body":{"components/HomePageComponent.html":{}}}],["map",{"_index":619,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{}}}],["margin",{"_index":591,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["mat",{"_index":459,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["matautocompletemodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["material",{"_index":846,"title":{},"body":{"components/TodoListComponent.html":{}}}],["matexpansionmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["matselect",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":827,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["matsnackbarmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbar",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":894,"title":{},"body":{"injectables/TodoListService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["min",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["missing",{"_index":353,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["models/todo",{"_index":382,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["module",{"_index":161,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":163,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":303,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Todo.html":{}}}],["mongodb",{"_index":742,"title":{},"body":{"interfaces/Todo.html":{}}}],["more",{"_index":320,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["multi",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["navigate",{"_index":980,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":755,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["needslogin",{"_index":421,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["new",{"_index":388,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["newtodo",{"_index":897,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtodo._id",{"_index":914,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtododata",{"_index":342,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["newtodolist",{"_index":863,"title":{},"body":{"components/TodoListComponent.html":{}}}],["next",{"_index":485,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["next.handle(req",{"_index":518,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["next.handle(request",{"_index":517,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["ng",{"_index":457,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["ngform",{"_index":906,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ngmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":425,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["null",{"_index":693,"title":{},"body":{"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["number",{"_index":740,"title":{},"body":{"interfaces/Todo.html":{}}}],["object",{"_index":658,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["obs",{"_index":565,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["obs.subscribe((response",{"_index":571,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["observable",{"_index":489,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"injectables/TodoListService.html":{}}}],["observable>((observer",{"_index":507,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["observe",{"_index":627,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["ok",{"_index":449,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["onclickplaypause",{"_index":529,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["ondestroy",{"_index":639,"title":{},"body":{"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["one",{"_index":506,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/TodoListComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["onplaybackchanged",{"_index":677,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["onsubmitform",{"_index":782,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["opened",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["operations",{"_index":832,"title":{},"body":{"components/TodoListComponent.html":{}}}],["option",{"_index":460,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["option.name",{"_index":675,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["options",{"_index":643,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["origin",{"_index":392,"title":{},"body":{"injectables/HttpService.html":{}}}],["otherwise",{"_index":505,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["out",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1003,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":955,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":292,"title":{},"body":{"components/HomePageComponent.html":{},"components/TodoListComponent.html":{}}}],["page'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["page.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":293,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.html",{"_index":294,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":291,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":298,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":296,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pages/github/github.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/gmail/gmail.component",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/spotify",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/todo",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["param",{"_index":396,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["parameter",{"_index":744,"title":{},"body":{"interfaces/Todo.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["params",{"_index":795,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["params.refresh",{"_index":709,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["params.token",{"_index":710,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["parseint(localstorage.getitem('spotifyexp",{"_index":694,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["passes",{"_index":854,"title":{},"body":{"components/TodoListComponent.html":{}}}],["path",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":567,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["pauses",{"_index":549,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["pausesong",{"_index":601,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["pausesong(with_device",{"_index":614,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["perform",{"_index":312,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"components/TodoListComponent.html":{}}}],["play",{"_index":317,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["play_arrow",{"_index":581,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["playback",{"_index":540,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["playbackchanged",{"_index":524,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["playbackchangedsource",{"_index":678,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["playelement",{"_index":645,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["playelement(uri",{"_index":653,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["player",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{}}}],["player'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["player.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["player.component.css",{"_index":521,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.html",{"_index":522,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts",{"_index":520,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"coverage.html":{}}}],["player.component.ts:13",{"_index":554,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:20",{"_index":553,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:22",{"_index":533,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:25",{"_index":546,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:33",{"_index":535,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:46",{"_index":547,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:65",{"_index":544,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:74",{"_index":536,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:81",{"_index":534,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.service",{"_index":556,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.service.ts",{"_index":597,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["player.service.ts:12",{"_index":603,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:21",{"_index":615,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:29",{"_index":617,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:37",{"_index":607,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:41",{"_index":613,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:45",{"_index":605,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:61",{"_index":604,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player/spotify",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifyPlayerComponent.html":{},"coverage.html":{}}}],["playing",{"_index":626,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["plays",{"_index":548,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["playsong",{"_index":602,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["playsong(with_device",{"_index":616,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["please",{"_index":454,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["pointer",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["populateoptions",{"_index":646,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["populateoptions(response",{"_index":656,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["position",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["position:absolute",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":393,"title":{},"body":{"injectables/HttpService.html":{}}}],["precheck",{"_index":346,"title":{},"body":{"injectables/HttpService.html":{}}}],["present",{"_index":349,"title":{},"body":{"injectables/HttpService.html":{}}}],["previous",{"_index":545,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["private",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["project",{"_index":971,"title":{},"body":{"index.html":{}}}],["projects",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["promise",{"_index":723,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["protractor",{"_index":995,"title":{},"body":{"index.html":{}}}],["provide",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":385,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["providers",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["push",{"_index":497,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["put",{"_index":398,"title":{},"body":{"injectables/HttpService.html":{}}}],["put,delete",{"_index":400,"title":{},"body":{"injectables/HttpService.html":{}}}],["query",{"_index":685,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["reactiveformsmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":998,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":375,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["refreshspotifytoken",{"_index":335,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshspotifytoken(refreshtoken",{"_index":370,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshtoken",{"_index":374,"title":{},"body":{"injectables/HttpService.html":{}}}],["regenerate",{"_index":373,"title":{},"body":{"injectables/HttpService.html":{}}}],["relaunch",{"_index":515,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reload",{"_index":983,"title":{},"body":{"index.html":{}}}],["replace",{"_index":363,"title":{},"body":{"injectables/HttpService.html":{}}}],["representing",{"_index":736,"title":{},"body":{"interfaces/Todo.html":{}}}],["represents",{"_index":410,"title":{},"body":{"interfaces/Song.html":{}}}],["req",{"_index":488,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.clone",{"_index":500,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.url.includes('refresh",{"_index":494,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reqopts",{"_index":386,"title":{},"body":{"injectables/HttpService.html":{}}}],["request",{"_index":477,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{}}}],["requested",{"_index":893,"title":{},"body":{"injectables/TodoListService.html":{}}}],["requests",{"_index":440,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["reset",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["resolve(route",{"_index":760,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver",{"_index":748,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolver.service.ts",{"_index":747,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:19",{"_index":758,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service.ts:28",{"_index":761,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolvers/todo",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["response",{"_index":429,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/TodoListService.html":{}}}],["response'}).pipe(map((response",{"_index":628,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["response.body.item",{"_index":631,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["response.data",{"_index":671,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["response.newlist",{"_index":919,"title":{},"body":{"injectables/TodoListService.html":{}}}],["response.token",{"_index":511,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["response.url",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["result",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["return",{"_index":350,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["reverses",{"_index":550,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["rewrite",{"_index":478,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["right",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["right:0.5vw",{"_index":592,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["root'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["route",{"_index":705,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["route.parammap.get('id",{"_index":766,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["router",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["routermodule",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":721,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rss",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":977,"title":{},"body":{"index.html":{}}}],["running",{"_index":986,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":620,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{}}}],["save",{"_index":311,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["saved",{"_index":867,"title":{},"body":{"components/TodoListComponent.html":{}}}],["saves",{"_index":379,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist",{"_index":336,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist(todolist",{"_index":376,"title":{},"body":{"injectables/HttpService.html":{}}}],["search",{"_index":315,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifySearchComponent.html":{}}}],["search'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["search.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.css",{"_index":640,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.html",{"_index":641,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts",{"_index":638,"title":{},"body":{"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":648,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:19",{"_index":659,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:24",{"_index":662,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:25",{"_index":652,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:36",{"_index":651,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:42",{"_index":657,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:47",{"_index":650,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:54",{"_index":654,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search/spotify",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["seem",{"_index":452,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["serve",{"_index":978,"title":{},"body":{"index.html":{}}}],["server",{"_index":345,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"index.html":{}}}],["server_root/todos",{"_index":367,"title":{},"body":{"injectables/HttpService.html":{}}}],["service",{"_index":598,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["services/http.service",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"guards/TodoDataResolverService.html":{}}}],["services/spotify/spotify.service",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["services/todo",{"_index":762,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["setheaders",{"_index":501,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["sets",{"_index":842,"title":{},"body":{"components/TodoListComponent.html":{}}}],["settimeout",{"_index":561,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["sidenav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["simply",{"_index":496,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["skip_next",{"_index":582,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["skip_previous",{"_index":580,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["snackbar",{"_index":833,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["song",{"_index":407,"title":{"interfaces/Song.html":{}},"body":{"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["song.album",{"_index":579,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song.artist",{"_index":578,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song.title",{"_index":577,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_container",{"_index":593,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_img_container",{"_index":590,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_title_container",{"_index":587,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"index.html":{}}}],["space",{"_index":465,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["specific",{"_index":743,"title":{},"body":{"interfaces/Todo.html":{}}}],["spotify",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["spotify's",{"_index":306,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{}}}],["spotify/autocomp",{"_index":695,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["spotify/get",{"_index":405,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/logged",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["spotify/precheck",{"_index":403,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/refresh",{"_index":404,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/store",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["spotify\\'s",{"_index":323,"title":{},"body":{"components/HomePageComponent.html":{}}}],["spotify_player_content",{"_index":583,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["spotifyauthurl",{"_index":422,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifyhomecomponent",{"_index":141,"title":{"components/SpotifyHomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyinterceptor",{"_index":175,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/SpotifyInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyok",{"_index":423,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifyplayercomponent",{"_index":143,"title":{"components/SpotifyPlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyplayerservice",{"_index":532,"title":{"injectables/SpotifyPlayerService.html":{}},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["spotifyplayersvc",{"_index":531,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["spotifysearchcomponent",{"_index":145,"title":{"components/SpotifySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyservice",{"_index":36,"title":{"injectables/SpotifyService.html":{}},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"coverage.html":{}}}],["spotifystoretokencomponent",{"_index":147,"title":{"components/SpotifyStoreTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifysvc",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["spotifytokenguard",{"_index":260,"title":{"guards/SpotifyTokenGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["spotifyuserinfocomponent",{"_index":150,"title":{"components/SpotifyUserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app/app",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/spotify",{"_index":519,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"coverage.html":{}}}],["src/app/components/spotify/spotify",{"_index":637,"title":{},"body":{"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["src/app/components/todolist/todo",{"_index":773,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["src/app/guards/spotify",{"_index":716,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["src/app/interceptors/spotify.interceptor.ts",{"_index":473,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/spotify.interceptor.ts:16",{"_index":481,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/interceptors/spotify.interceptor.ts:20",{"_index":487,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/models/song.ts",{"_index":409,"title":{},"body":{"interfaces/Song.html":{},"coverage.html":{}}}],["src/app/models/todo",{"_index":796,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["src/app/models/todo.ts",{"_index":735,"title":{},"body":{"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/pages/github/github.component.ts",{"_index":279,"title":{},"body":{"components/GithubComponent.html":{},"coverage.html":{}}}],["src/app/pages/github/github.component.ts:12",{"_index":283,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/github/github.component.ts:8",{"_index":282,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/gmail/gmail.component.ts",{"_index":285,"title":{},"body":{"components/GmailComponent.html":{},"coverage.html":{}}}],["src/app/pages/gmail/gmail.component.ts:12",{"_index":289,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/pages/gmail/gmail.component.ts:8",{"_index":288,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/pages/home",{"_index":290,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/spotify",{"_index":416,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"coverage.html":{}}}],["src/app/pages/todo",{"_index":816,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["src/app/resolvers/todo",{"_index":746,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["src/app/services/http.service",{"_index":441,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["src/app/services/http.service.ts",{"_index":328,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:102",{"_index":371,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:106",{"_index":365,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:18",{"_index":366,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:35",{"_index":378,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:53",{"_index":362,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:69",{"_index":356,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:79",{"_index":341,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:9",{"_index":339,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:94",{"_index":343,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/spotify/spotify",{"_index":555,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["src/app/services/spotify/spotify.service",{"_index":443,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["src/app/services/spotify/spotify.service.ts",{"_index":676,"title":{},"body":{"injectables/SpotifyService.html":{},"coverage.html":{}}}],["src/app/services/spotify/spotify.service.ts:11",{"_index":689,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:14",{"_index":680,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:23",{"_index":681,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:27",{"_index":684,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/spotify/spotify.service.ts:31",{"_index":686,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/services/todo",{"_index":794,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":690,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["started",{"_index":970,"title":{"index.html":{}},"body":{}}],["state",{"_index":720,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["statements",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["statud",{"_index":434,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["status",{"_index":551,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["still",{"_index":475,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["store",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["str.length",{"_index":664,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["string",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["subject",{"_index":688,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["subscription",{"_index":552,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"components/TodoListComponent.html":{}}}],["succesfully",{"_index":810,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["support",{"_index":305,"title":{},"body":{"components/HomePageComponent.html":{},"modules.html":{}}}],["svg",{"_index":999,"title":{},"body":{"modules.html":{}}}],["table",{"_index":850,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["test",{"_index":989,"title":{},"body":{"index.html":{}}}],["tests",{"_index":988,"title":{},"body":{"index.html":{}}}],["text",{"_index":461,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["theme",{"_index":845,"title":{},"body":{"components/TodoListComponent.html":{}}}],["themes",{"_index":822,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this._snackbar.open('todo",{"_index":866,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.currelement",{"_index":670,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.currid",{"_index":802,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.currplayerstatus",{"_index":572,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.currtodo",{"_index":804,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.displaysnackbar('todo",{"_index":920,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.editmode",{"_index":801,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.form.setvalue(this.currtodo",{"_index":806,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.formcontrol.valuechanges.subscribe((newvalue",{"_index":666,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.getplaybackinfo",{"_index":574,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.http.addnewtodo(newtododata",{"_index":925,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.checkspotifystatus().subscribe(this.handlespotifystatus.bind(this",{"_index":446,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.http.delete(environment.serverroot",{"_index":401,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.deletetodoelement(idtodo).subscribe((response",{"_index":918,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.edittodo(_id",{"_index":915,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get('https://api.spotify.com/v1/me/player/currently",{"_index":625,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.get(environment.serverroot",{"_index":402,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["this.http.get>(environment.serverroot",{"_index":394,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.getspotifyauthurl().subscribe((response",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.gettodolist().pipe(map((data",{"_index":770,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.http.gettodolist().subscribe((response",{"_index":907,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.post('https://api.spotify.com/v1/me/player/next",{"_index":623,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.post('https://api.spotify.com/v1/me/player/previous",{"_index":624,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.post(environment.serverroot",{"_index":397,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/pause",{"_index":621,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/play",{"_index":622,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["this.http.put(environment.serverroot",{"_index":399,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.savetodolist(this.todos",{"_index":916,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.httpsvc.refreshspotifytoken(localstorage.getitem('spotifyrefresh')).subscribe((response",{"_index":508,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["this.isloggedonspotify",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.issmallscreen",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.opened",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.options",{"_index":669,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.playbackchanged",{"_index":559,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.playbackchangedsource.asobservable",{"_index":687,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["this.playbackchangedsource.next",{"_index":698,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["this.route.data.subscribe((data",{"_index":799,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":707,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["this.router.events.subscribe((val",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/todolist",{"_index":812,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.router.navigate(['spotify",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['spotify/logged",{"_index":713,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["this.snackbar.open(message",{"_index":917,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.song",{"_index":558,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyauthurl",{"_index":450,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyok",{"_index":447,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyplayersvc.getavailabledevices",{"_index":576,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.getinfoonplayback().subscribe((song",{"_index":557,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.gotonextsong().subscribe",{"_index":575,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.gotoprevioussong().subscribe",{"_index":573,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.pausesong",{"_index":569,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.playsong",{"_index":570,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyservice.fetchautocomplete(newvalue).subscribe(this.populateoptions.bind(this",{"_index":668,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.spotifyservice.playelement(uri",{"_index":674,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.spotifysvc.checkspotifystatus",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spotifysvc.onplaybackchanged.subscribe(this.getplaybackinfo.bind(this",{"_index":560,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.themes",{"_index":908,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.titleservice.settitle('todolist",{"_index":857,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.titlesvc.settitle('dashboard",{"_index":299,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.titlesvc.settitle('spotify",{"_index":444,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.titlesvc.settitle('todo",{"_index":798,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todolistchanged",{"_index":860,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged$.unsubscribe",{"_index":864,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged.next([...this.todos",{"_index":909,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todolistchanged.next(response.todos",{"_index":913,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todos",{"_index":862,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this.todos.find((elem",{"_index":910,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todosvc.addtodo(this.form.value).subscribe((response",{"_index":813,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.deletetodo(idtodo",{"_index":870,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.displaysnackbar('todo",{"_index":809,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.edittodo(this.form.value).subscribe((response",{"_index":808,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.fetchtodosandthemes",{"_index":859,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.gettodo(todoid",{"_index":769,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.todosvc.savetodolist().subscribe((response",{"_index":865,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.todolistchanged.subscribe((newtodolist",{"_index":861,"title":{},"body":{"components/TodoListComponent.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["titleservice",{"_index":829,"title":{},"body":{"components/TodoListComponent.html":{}}}],["titlesvc",{"_index":297,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{}}}],["todo",{"_index":91,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todo's",{"_index":749,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["todo.content",{"_index":873,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.theme",{"_index":871,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.title",{"_index":872,"title":{},"body":{"components/TodoListComponent.html":{}}}],["tododata",{"_index":361,"title":{},"body":{"injectables/HttpService.html":{}}}],["tododataresolverservice",{"_index":263,"title":{"guards/TodoDataResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["todoeditcomponent",{"_index":153,"title":{"components/TodoEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todoid",{"_index":765,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["todolist",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HttpService.html":{}}}],["todolist/:id/edit",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["todolist/add",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/TodoDataResolverService.html":{}}}],["todolistchanged",{"_index":823,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todolistcomponent",{"_index":155,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todolistservice",{"_index":757,"title":{"injectables/TodoListService.html":{}},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todos",{"_index":395,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todosave",{"_index":880,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todoservice",{"_index":831,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todosvc",{"_index":759,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["todosvc.todolistchanged",{"_index":853,"title":{},"body":{"components/TodoListComponent.html":{}}}],["togglesidenav",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":352,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{}}}],["token'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["token.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["token.component.css",{"_index":700,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.html",{"_index":701,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts",{"_index":699,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["token.component.ts:12",{"_index":706,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts:8",{"_index":704,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.guard",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["token.guard.ts",{"_index":717,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:10",{"_index":722,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["token/:token/:refresh",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["token/spotify",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["tokendecoded",{"_index":726,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["toolbar",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["triggerloginprocedure",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["triggers",{"_index":663,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["true",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoEditComponent.html":{}}}],["try",{"_index":318,"title":{},"body":{"components/HomePageComponent.html":{}}}],["tslib",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["unit",{"_index":987,"title":{},"body":{"index.html":{}}}],["uri",{"_index":655,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["uri}).subscribe",{"_index":697,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["url",{"_index":354,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Song.html":{}}}],["urltree",{"_index":724,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["use",{"_index":923,"title":{},"body":{"injectables/TodoListService.html":{},"index.html":{}}}],["useclass",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":411,"title":{},"body":{"interfaces/Song.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["user",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["using",{"_index":516,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["valid",{"_index":476,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["validators",{"_index":797,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["validators.required",{"_index":791,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["value",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["var",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["version",{"_index":741,"title":{},"body":{"interfaces/Todo.html":{},"index.html":{}}}],["via",{"_index":991,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/SpotifyUserInfoComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["volume_and_change_device",{"_index":595,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["want",{"_index":611,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["we'll",{"_index":566,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"guards/TodoDataResolverService.html":{}}}],["welcome",{"_index":300,"title":{},"body":{"components/HomePageComponent.html":{}}}],["whole",{"_index":369,"title":{},"body":{"injectables/HttpService.html":{}}}],["width",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["width:15",{"_index":876,"title":{},"body":{"components/TodoListComponent.html":{}}}],["width:90",{"_index":456,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["width:98",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.href",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["with_device",{"_index":609,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["without",{"_index":751,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["works",{"_index":284,"title":{},"body":{"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["z",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                isLoggedOnSpotify\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                            \n                                triggerLoginProcedure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bpObserver: BreakpointObserver, spotifySvc: SpotifyService, http: HttpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bpObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifySvc\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            triggerLoginProcedure\n                        \n                        \n                    \n                \n            \n            \n                \ntriggerLoginProcedure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'black'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedOnSpotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSmallScreen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dashboard'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { SpotifyService } from './services/Spotify/spotify.service';\nimport { HttpService } from './services/http.service';\nimport { Router, NavigationEnd } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  opened = true;\n  title = 'dashboard';\n  isLoggedOnSpotify = false;\n  isSmallScreen = false;\n  color = 'black';\n  constructor(private bpObserver: BreakpointObserver, private spotifySvc: SpotifyService, private http: HttpService, private router: Router) {\n    this.isSmallScreen = bpObserver.isMatched('(max-width: 599px)');\n\n    this.router.events.subscribe((val: any) => {\n\n      if(val instanceof NavigationEnd) {\n\n        if(val.url.includes('/spotify/logged')) {\n          this.isLoggedOnSpotify = this.spotifySvc.checkSpotifyStatus();\n          this.router.navigate(['spotify'])\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n\n\n\n\n\n  }\n\n  toggleSidenav() {\n    this.opened = !this.opened;\n  }\n\n  triggerLoginProcedure() {\n    this.http.getSpotifyAuthUrl().subscribe((response: any) => {\n      window.location.href = response.url;\n    })\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      menu\n    \n    My dashboard\n  \n\n\n  \n\n\n\n    \n      \n        \n          Todo List\n\n        \n\n        List\n        Add\n\n\n      \n\n\n      \n        \n          GitHub\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          RSS\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          GMail\n\n        \n\n      \n      \n        \n          Spotify\n\n        \n\n        Click here to login\n        Home\n\n      \n    \n\n    \n\n    \n      \n\n    \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .example-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .clickable {\n      cursor: pointer;\n  }\n\n  .sidenav {\n\n      z-index: 10;\n  }\n\n  .toolbar {\n      min-height:5vh;\n      max-height:5vh;\n  }\n\n  .sidenav {\n      height:95vh;\n  }\n\n  app-spotify-player {\n    width:98%;\n    position:absolute;\n    bottom:0;\n    height:15vh;\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        My dashboard                                Todo List                List        Add                              GitHub                My projects        Add an element                              RSS                My projects        Add an element                              GMail                                      Spotify                Click here to login        Home                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nGmailComponent\n\nGmailComponent\n\nAppModule -->\n\nGmailComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nSpotifyHomeComponent\n\nSpotifyHomeComponent\n\nAppModule -->\n\nSpotifyHomeComponent->AppModule\n\n\n\n\n\nSpotifyPlayerComponent\n\nSpotifyPlayerComponent\n\nAppModule -->\n\nSpotifyPlayerComponent->AppModule\n\n\n\n\n\nSpotifySearchComponent\n\nSpotifySearchComponent\n\nAppModule -->\n\nSpotifySearchComponent->AppModule\n\n\n\n\n\nSpotifyStoreTokenComponent\n\nSpotifyStoreTokenComponent\n\nAppModule -->\n\nSpotifyStoreTokenComponent->AppModule\n\n\n\n\n\nSpotifyUserInfoComponent\n\nSpotifyUserInfoComponent\n\nAppModule -->\n\nSpotifyUserInfoComponent->AppModule\n\n\n\n\n\nTodoEditComponent\n\nTodoEditComponent\n\nAppModule -->\n\nTodoEditComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSpotifyInterceptor\n\nSpotifyInterceptor\n\nAppModule -->\n\nSpotifyInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GithubComponent\n                        \n                        \n                            GmailComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            SpotifyHomeComponent\n                        \n                        \n                            SpotifyPlayerComponent\n                        \n                        \n                            SpotifySearchComponent\n                        \n                        \n                            SpotifyStoreTokenComponent\n                        \n                        \n                            SpotifyUserInfoComponent\n                        \n                        \n                            TodoEditComponent\n                        \n                        \n                            TodoListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SpotifyInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule, MatToolbar } from '@angular/material/toolbar';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { GithubComponent } from './pages/github/github.component';\nimport { GmailComponent } from './pages/gmail/gmail.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport {MatSelectModule, MatSelect} from '@angular/material/select';\nimport { TodoEditComponent } from './components/TodoList/todo-edit/todo-edit.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule} from '@angular/material/slider';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifySearchComponent } from './components/Spotify/spotify-search/spotify-search.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\nimport { SpotifyInterceptor } from './interceptors/spotify.interceptor';\nimport { SpotifyUserInfoComponent } from './pages/spotify-user-info/spotify-user-info.component';\nimport { SpotifyPlayerComponent } from './components/spotify-player/spotify-player.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    TodoListComponent,\n    GithubComponent,\n    GmailComponent,\n    TodoEditComponent,\n    SpotifyHomeComponent,\n    SpotifySearchComponent,\n    SpotifyStoreTokenComponent,\n    SpotifyUserInfoComponent,\n    SpotifyPlayerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatIconModule,\n    HttpClientModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatSliderModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: SpotifyInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { TodoEditComponent } from './components/TodoList/todo-edit/todo-edit.component';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\nimport { SpotifyTokenGuard } from './guards/spotify-token.guard';\nimport { TodoDataResolverService } from './resolvers/todo-data-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: HomePageComponent\n  },\n  {\n    path: 'todolist', component: TodoListComponent\n  },\n  {\n    path: 'todolist/:id/edit', component:TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n  {\n    path: 'todolist/add', component:TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n  {\n    path: 'spotify', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/logged', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/store-token/:token/:refresh', component: SpotifyStoreTokenComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubComponent.html":{"url":"components/GithubComponent.html","title":"component - GithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/github/github.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github\n            \n\n            \n                styleUrls\n                ./github.component.css\n            \n\n\n\n            \n                templateUrl\n                ./github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/github/github.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/github/github.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.css']\n})\nexport class GithubComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        github works!\n\n    \n\n    \n                \n                    ./github.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'github works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GmailComponent.html":{"url":"components/GmailComponent.html","title":"component - GmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/gmail/gmail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gmail\n            \n\n            \n                styleUrls\n                ./gmail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gmail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/gmail/gmail.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/gmail/gmail.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gmail',\n  templateUrl: './gmail.component.html',\n  styleUrls: ['./gmail.component.css']\n})\nexport class GmailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        gmail works!\n\n    \n\n    \n                \n                    ./gmail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'gmail works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleSvc: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home-page/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home-page/home-page.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor(private titleSvc: Title) {\n    this.titleSvc.setTitle('Dashboard - Home Page')\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Welcome to my dashboard !\nThis dashboard contains : \n\n\n  A todo-list linked to a Mongo DB\n  Support for Spotify's API\n\n\nWith the todo list, you can : \n\n  Create a todo\n  Edit a todo\n  Delete a todo\n  Save the todo list\n\n\nWith Spotify, you can perform some actions when logging in, like :\n\n  Search an artist\n  Play this artist (try it out !)\n  And many more features to come...\n\n\n    \n\n    \n                \n                    ./home-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome to my dashboard !This dashboard contains :   A todo-list linked to a Mongo DB  Support for Spotify\\'s APIWith the todo list, you can :   Create a todo  Edit a todo  Delete a todo  Save the todo listWith Spotify, you can perform some actions when logging in, like :  Search an artist  Play this artist (try it out !)  And many more features to come...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTodo\n                            \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                deleteTodoElement\n                            \n                            \n                                editTodo\n                            \n                            \n                                getSpotifyAuthUrl\n                            \n                            \n                                getTodoList\n                            \n                            \n                                refreshSpotifyToken\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:94\n                \n            \n\n\n            \n                \n                    Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\nIf not, return error\nIf token missing, returns the Spotify login url\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodoElement\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodoElement(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:69\n                \n            \n\n\n            \n                \n                    Calls the server which will delete the todo with the id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the todo to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(idTodo: string, todoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:53\n                \n            \n\n\n            \n                \n                    Calls the server which will search idTodo and replace its content by todoData\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the todo to edit\n\n                                    \n                                \n                                \n                                    todoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The content of the todo to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpotifyAuthUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpotifyAuthUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoList\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:18\n                \n            \n\n\n            \n                \n                    Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSpotifyToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSpotifyToken(refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:102\n                \n            \n\n\n            \n                \n                    Calls the server, which will call Spotify's API to regenerate a token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList(todoList: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:35\n                \n            \n\n\n            \n                \n                    Saves the current todo-list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    todoList\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo-list which will be save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Todo } from '../models/todo';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  /**\n   * Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n   */\n  getTodoList() {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.get>(environment.serverRoot + '/todos', reqOpts);\n\n  }\n\n  /**\n   * Saves the current todo-list\n   * @param todoList The todo-list which will be save\n   */\n  saveTodoList(todoList: Array) {\n\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.post(environment.serverRoot + '/todos', {todos: todoList}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will search idTodo and replace its content by todoData\n   * @param idTodo The ID of the todo to edit\n   * @param todoData The content of the todo to edit\n   */\n  editTodo(idTodo: string, todoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE'\n      })\n    };\n\n\n    return this.http.put(environment.serverRoot + '/todos/' + idTodo, {todo: todoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will delete the todo with the id idTodo\n   * @param idTodo The id of the todo to delete\n   */\n  deleteTodoElement(idTodo: string) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT,DELETE'\n      })\n    };\n    return this.http.delete(environment.serverRoot + '/todos/' + idTodo, reqOpts);\n  }\n\n  addNewTodo(newTodoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, DELETE'\n      })\n    };\n    return this.http.post(environment.serverRoot + '/todos/', {todo: newTodoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\n   * If not, return error\n   * If token missing, returns the Spotify login url\n   */\n  checkSpotifyStatus() {\n    return this.http.get(environment.serverRoot + '/spotify/precheck');\n  }\n\n  /**\n   * Calls the server, which will call Spotify's API to regenerate a token\n   * @param refreshToken The refresh token\n   */\n  refreshSpotifyToken(refreshToken: string) {\n    return this.http.get(environment.serverRoot + '/spotify/refresh-token/' + refreshToken);\n  }\n\n  getSpotifyAuthUrl() {\n    return this.http.get(environment.serverRoot + '/spotify/get-url');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Song.html":{"url":"interfaces/Song.html","title":"interface - Song","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/song.ts\n        \n\n            \n                Description\n            \n            \n                Represents a song (used in the player)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        album\n                                \n                                \n                                        artist\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the album\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe name of the artist\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the album's image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the song\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n  /**\n   * The title of the song\n   */\n  title: string;\n  /**\n   * THe name of the artist\n   */\n  artist: string;\n  /**\n   * The name of the album\n   */\n  album: string;\n  /**\n   * The URL of the album's image\n   */\n  imageUrl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyHomeComponent.html":{"url":"components/SpotifyHomeComponent.html","title":"component - SpotifyHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-home/spotify-home.component.ts\n\n\n    \n        Description\n    \n    \n        The homepage of Spotify\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-home\n            \n\n            \n                styleUrls\n                ./spotify-home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                needsLogin\n                            \n                            \n                                spotifyAuthUrl\n                            \n                            \n                                spotifyOK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSpotifyStatus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleSvc: Title, http: HttpService, spotifyService: SpotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-home/spotify-home.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifyService\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \nhandleSpotifyStatus(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:33\n                \n            \n\n\n            \n                \n                    On init, check Spotify's statud\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needsLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyAuthUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyOK\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-home/spotify-home.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean indicating if we can make some requests\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/services/http.service';\nimport { FormControl } from '@angular/forms';\nimport { SpotifyService } from 'src/app/services/Spotify/spotify.service';\nimport { Title } from '@angular/platform-browser';\n\n\n/**\n * The homepage of Spotify\n */\n@Component({\n  selector: 'app-spotify-home',\n  templateUrl: './spotify-home.component.html',\n  styleUrls: ['./spotify-home.component.css']\n})\nexport class SpotifyHomeComponent implements OnInit {\n  needsLogin = false;\n\n\n\n  spotifyAuthUrl = '';\n  /**\n   * Boolean indicating if we can make some requests\n   */\n  spotifyOK = false;\n  constructor(private titleSvc: Title, private http: HttpService, private spotifyService: SpotifyService) {\n    this.titleSvc.setTitle('Spotify - Home')\n  }\n\n  /**\n   * On init, check Spotify's statud\n   */\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('spotifyToken')) {\n\n        this.http.checkSpotifyStatus().subscribe(this.handleSpotifyStatus.bind(this));\n    } else {\n      this.spotifyOK = true;\n    }\n\n\n\n  }\n\n  handleSpotifyStatus(response: any) {\n    if(response.status === 'OK') {\n      this.spotifyOK = true;\n    } else {\n      this.spotifyAuthUrl = response.url;\n    }\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n  You don't seem to be logged. Please click here.\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./spotify-home.component.css\n                \n                .full-width {\n  width:90%;\n}\n\n::ng-deep .mat-option-text {\n  display:flex !important;\n  justify-content: space-between;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  You don\\'t seem to be logged. Please click here.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SpotifyInterceptor.html":{"url":"interceptors/SpotifyInterceptor.html","title":"interceptor - SpotifyInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  SpotifyInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/spotify.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Checks if the token is still valid, if not, will request a refresh token\nTODO : rewrite\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpSvc: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/spotify.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpSvc\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/spotify.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../services/http.service';\n\n/**\n * Checks if the token is still valid, if not, will request a refresh token\n * TODO : rewrite\n */\n@Injectable()\nexport class SpotifyInterceptor implements HttpInterceptor {\n\n  constructor(private httpSvc: HttpService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n    if(req.url.includes('spotify') && !req.url.includes('refresh-token')) {\n\n      if(localStorage.getItem('spotifyToken')) {\n\n        // If the token is still valid, we simply push the current token to the headers\n        if(parseInt(localStorage.getItem('spotifyExp')) > new Date().getTime()) {\n          req = req.clone({\n            setHeaders: {\n              'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n            }\n          });\n\n        } else { // Otherwise, we will request a new one\n          return new Observable>((observer) => {\n            this.httpSvc.refreshSpotifyToken(localStorage.getItem('spotifyRefresh')).subscribe((response: any) => {\n\n              // We store the token, the refresh, etc\n              localStorage.setItem('spotifyToken', response.token);\n              localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n\n              // Then we relaunch the request using the new token\n              let request = req.clone({\n                setHeaders: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n                }\n              });\n\n              next.handle(request);\n            })\n          })\n\n        }\n      }\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyPlayerComponent.html":{"url":"components/SpotifyPlayerComponent.html","title":"component - SpotifyPlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyPlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/spotify-player/spotify-player.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-player\n            \n\n            \n                styleUrls\n                ./spotify-player.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-player.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currPlayerStatus\n                            \n                            \n                                playbackChanged\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAvailableDevices\n                            \n                            \n                                getPlaybackInfo\n                            \n                            \n                                goToNextSong\n                            \n                            \n                                goToPreviousSong\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickPlayPause\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spotifySvc: SpotifyService, spotifyPlayerSvc: SpotifyPlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/spotify-player/spotify-player.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spotifySvc\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifyPlayerSvc\n                                                  \n                                                        \n                                                                        SpotifyPlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableDevices\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlaybackInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlaybackInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextSong()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:74\n                \n            \n\n\n            \n                \n                    Calls the endpoint to go to the next song, then gets the info on the current playback after 500ms (bc of asynchronity)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousSong()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:65\n                \n            \n\n\n            \n                \n                    Calls the endpoint to go to the previous song, then gets the info on the current playback after 500ms (bc of asynchronity)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickPlayPause\n                        \n                        \n                    \n                \n            \n            \n                \nonClickPlayPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/spotify-player/spotify-player.component.ts:46\n                \n            \n\n\n            \n                \n                    Plays / pauses the playback, then reverses the player status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currPlayerStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/spotify-player/spotify-player.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playbackChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/spotify-player/spotify-player.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: 'My song',\n    artist: 'My artist',\n    album: 'My album',\n    imageUrl: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/spotify-player/spotify-player.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SpotifyPlayerService } from 'src/app/services/spotify/spotify-player.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { SpotifyService } from 'src/app/services/Spotify/spotify.service';\n\n@Component({\n  selector: 'app-spotify-player',\n  templateUrl: './spotify-player.component.html',\n  styleUrls: ['./spotify-player.component.css']\n})\nexport class SpotifyPlayerComponent implements OnInit {\n\n  song: any = {\n    title: 'My song',\n    artist: 'My artist',\n    album: 'My album',\n    imageUrl: ''\n  };\n\n  playbackChanged : Subscription;\n\n  currPlayerStatus = false;\n  constructor(private spotifySvc: SpotifyService, private spotifyPlayerSvc: SpotifyPlayerService) { }\n\n  ngOnInit(): void {\n    this.spotifyPlayerSvc.getInfoOnPlayback().subscribe((song: any) => {\n      this.song = song;\n    });\n\n    this.playbackChanged = this.spotifySvc.onPlaybackChanged.subscribe(this.getPlaybackInfo.bind(this));\n  }\n\n  getPlaybackInfo() {\n    setTimeout(() => {\n\n      this.spotifyPlayerSvc.getInfoOnPlayback().subscribe((song: any) => {\n        console.log('Playback changed');\n        this.song = song;\n      });\n    }, 500);\n  }\n\n  /**\n   * Plays / pauses the playback, then reverses the player status\n   */\n  onClickPlayPause() {\n\n    let obs : Observable;\n    // If the current status is \"Play\", we'll pause the playback\n    if(!this.currPlayerStatus) {\n      obs = this.spotifyPlayerSvc.pauseSong();\n\n    } else {\n      obs = this.spotifyPlayerSvc.playSong();\n    }\n\n    obs.subscribe((response) => {\n      this.currPlayerStatus = !this.currPlayerStatus;\n    })\n  }\n\n  /**\n   * Calls the endpoint to go to the previous song, then gets the info on the current playback after 500ms (bc of asynchronity)\n   */\n  goToPreviousSong() {\n    this.spotifyPlayerSvc.goToPreviousSong().subscribe(() => {\n      this.getPlaybackInfo();\n\n    });\n  }\n  /**\n   * Calls the endpoint to go to the next song, then gets the info on the current playback after 500ms (bc of asynchronity)\n   */\n  goToNextSong() {\n    this.spotifyPlayerSvc.goToNextSong().subscribe(() => {\n      this.getPlaybackInfo();\n\n    });\n  }\n\n  getAvailableDevices() {\n    this.spotifyPlayerSvc.getAvailableDevices();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n\n\n\n        \n\n          \n            \n          \n\n          \n            {{song.title}}\n            {{song.artist}}\n            {{song.album}}\n\n          \n\n        \n\n      \n      \n        \n          skip_previous\n        \n        \n          {{currPlayerStatus ? 'play_arrow' : 'pause'}}\n        \n        \n          skip_next\n        \n      \n\n      \n        \n         -->\n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./spotify-player.component.css\n                \n                #spotify_player_content {\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n}\n\n#song_title_container {\n  display:flex;\n  flex-direction: column;\n}\n\n#song_img_container {\n  margin-right:0.5vw;\n}\n\n#song_container {\n  display:flex;\n  flex-direction:row;\n\n}\n\n#controls {\n  display:flex;\n  align-items: center;\n}\n\n#volume_and_change_device {\n  display:flex;\n  flex-direction:column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{song.title}}            {{song.artist}}            {{song.album}}                                                skip_previous                          {{currPlayerStatus ? \\'play_arrow\\' : \\'pause\\'}}                          skip_next                                     -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyPlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyPlayerService.html":{"url":"injectables/SpotifyPlayerService.html","title":"injectable - SpotifyPlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyPlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/spotify/spotify-player.service.ts\n        \n\n            \n                Description\n            \n            \n                The service that handles all playback actions with Spotify\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAvailableDevices\n                            \n                            \n                                getInfoOnPlayback\n                            \n                            \n                                goToNextSong\n                            \n                            \n                                goToPreviousSong\n                            \n                            \n                                pauseSong\n                            \n                            \n                                playSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/spotify/spotify-player.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableDevices\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfoOnPlayback\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfoOnPlayback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:37\n                \n            \n\n\n            \n                \n                    Goes to the next song\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pauseSong\n                        \n                        \n                    \n                \n            \n            \n                \npauseSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:21\n                \n            \n\n\n            \n                \n                    Pauses the playback\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playSong\n                        \n                        \n                    \n                \n            \n            \n                \nplaySong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/spotify/spotify-player.service.ts:29\n                \n            \n\n\n            \n                \n                    Plays the playback\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n/**\n * The service that handles all playback actions with Spotify\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyPlayerService {\n\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Pauses the playback\n   * @param with_device The device ID that we want to perform the request with\n   */\n  pauseSong(with_device: string = '') {\n    return this.http.put('https://api.spotify.com/v1/me/player/pause', {});\n  }\n\n  /**\n   * Plays the playback\n   * @param with_device The device ID that we want to perform the request with\n   */\n  playSong(with_device: string = '') {\n    return this.http.put('https://api.spotify.com/v1/me/player/play', {});\n  }\n\n  /**\n   * Goes to the next song\n   * @param with_device The device ID that we want to perform the request with\n   */\n  goToNextSong(with_device: string = '') {\n    return this.http.post('https://api.spotify.com/v1/me/player/next', {});\n  }\n\n  goToPreviousSong(with_device: string = '') {\n    return this.http.post('https://api.spotify.com/v1/me/player/previous', {});\n  }\n\n  getInfoOnPlayback() {\n    return this.http.get('https://api.spotify.com/v1/me/player/currently-playing', {observe: 'response'}).pipe(map((response: any) => {\n      if(response.status === 200) {\n        const item = response.body.item;\n\n        return {\n          title: item.name,\n          artist: item.artists[0].name,\n          album: item.album.name,\n          imageUrl: item.album.images[item.album.images.length - 1].url\n        };\n\n      }\n    }));\n  }\n\n  getAvailableDevices() {\n\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifySearchComponent.html":{"url":"components/SpotifySearchComponent.html","title":"component - SpotifySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/Spotify/spotify-search/spotify-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-search\n            \n\n            \n                styleUrls\n                ./spotify-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currElement\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayName\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                playElement\n                            \n                            \n                                populateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spotifyService: SpotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spotifyService\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayName\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayName(element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(uri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateOptions\n                        \n                        \n                    \n                \n            \n            \n                \npopulateOptions(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {name: \"\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:19\n                            \n                        \n\n                \n                    \n                        The element of the autocomplete input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/Spotify/spotify-search/spotify-search.component.ts:24\n                            \n                        \n\n                \n                    \n                        The options for the autocomplete input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/Spotify/spotify.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-spotify-search',\n  templateUrl: './spotify-search.component.html',\n  styleUrls: ['./spotify-search.component.css']\n})\nexport class SpotifySearchComponent implements OnInit, OnDestroy {\n\n\n  formControl = new FormControl();\n  constructor(private spotifyService: SpotifyService) { }\n\n  /**\n   * The element of the autocomplete input\n   */\n  currElement = {name: \"\"};\n\n  /**\n   * The options for the autocomplete input\n   */\n  options = [];\n  ngOnInit(): void {\n    // Triggers autocomplete if str.length >= 3\n    this.formControl.valueChanges.subscribe((newValue: string) => {\n      if(newValue.length >= 3) {\n        this.spotifyService.fetchAutocomplete(newValue).subscribe(this.populateOptions.bind(this));\n      } else {\n        this.options = [];\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.currElement = {name: \"\"};\n    this.options = [];\n  }\n\n\n  populateOptions(response: any) {\n\n    this.options = response.data;\n  }\n\n  displayName(element: any) {\n    if(element) {\n\n      return element.name;\n    }\n  }\n\n  playElement(uri: string) {\n    this.spotifyService.playElement(uri);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{option.name}}\n\n        Play\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./spotify-search.component.css\n                \n                .full-width {\n  width:90%;\n}\n\n::ng-deep .mat-option-text {\n  display:flex !important;\n  justify-content: space-between;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{option.name}}        Play            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyService.html":{"url":"injectables/SpotifyService.html","title":"injectable - SpotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Spotify/spotify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onPlaybackChanged\n                            \n                            \n                                    Private\n                                playbackChangedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                fetchAutocomplete\n                            \n                            \n                                playElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/Spotify/spotify.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:23\n                \n            \n\n\n            \n                \n                    Check Spotify's status, returns true if :\n\nthere is a token\nThis token is still valid (expDate > new Date().getTime())\n\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAutocomplete(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(uri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/Spotify/spotify.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPlaybackChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.playbackChangedSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/Spotify/spotify.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            playbackChangedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/Spotify/spotify.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, Subscription, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private playbackChangedSource = new Subject();\n\n\n  onPlaybackChanged = this.playbackChangedSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Check Spotify's status, returns true if :\n   * 1. there is a token\n   * 2. This token is still valid (expDate > new Date().getTime())\n   */\n  checkSpotifyStatus() {\n    return localStorage.getItem('spotifyToken') != null && parseInt(localStorage.getItem('spotifyExp')) > (new Date().getTime());\n  }\n\n  fetchAutocomplete(query: string) {\n    return this.http.get(environment.serverRoot + '/spotify/autocomp/' + query);\n  }\n\n  playElement(uri: string) {\n\n    this.http.put('https://api.spotify.com/v1/me/player/play', {context_uri: uri}).subscribe(() => {\n      this.playbackChangedSource.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyStoreTokenComponent.html":{"url":"components/SpotifyStoreTokenComponent.html","title":"component - SpotifyStoreTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyStoreTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-store-token/spotify-store-token.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-store-token\n            \n\n            \n                styleUrls\n                ./spotify-store-token.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-store-token.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-store-token/spotify-store-token.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-store-token/spotify-store-token.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-spotify-store-token',\n  templateUrl: './spotify-store-token.component.html',\n  styleUrls: ['./spotify-store-token.component.css']\n})\nexport class SpotifyStoreTokenComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: any) => {\n      if(params.token && params.refresh) {\n        localStorage.setItem('spotifyToken', params.token);\n        localStorage.setItem('spotifyRefresh', params.refresh);\n        localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n        // alert('Nav to spotify');\n        this.router.navigate(['spotify/logged']);\n      }\n\n    })\n  }\n\n}\n\n    \n\n    \n        spotify-store-token works!\n\n    \n\n    \n                \n                    ./spotify-store-token.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'spotify-store-token works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyStoreTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SpotifyTokenGuard.html":{"url":"guards/SpotifyTokenGuard.html","title":"guard - SpotifyTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SpotifyTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/spotify-token.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/spotify-token.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyTokenGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      const token = localStorage.getItem('spotifyToken');\n      // if(token) {\n\n      //   const tokenDecoded = jwt_decode(token);\n      //   console.log(tokenDecoded);\n\n      // }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyUserInfoComponent.html":{"url":"components/SpotifyUserInfoComponent.html","title":"component - SpotifyUserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyUserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-user-info/spotify-user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-user-info\n            \n\n            \n                styleUrls\n                ./spotify-user-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-user-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/spotify-user-info/spotify-user-info.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-user-info',\n  templateUrl: './spotify-user-info.component.html',\n  styleUrls: ['./spotify-user-info.component.css']\n})\nexport class SpotifyUserInfoComponent implements OnInit {\n  loaded = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n    \n\n    \n                \n                    ./spotify-user-info.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyUserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a todo element, formatted like in Mongo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __v\n                                \n                                \n                                        _id\n                                \n                                \n                                        content\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version (MongoDB specific parameter)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the todo (not handled yet)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  /**\n   * The ID of the todo\n   */\n  _id: string;\n\n  /**\n   * The title of the todo\n   */\n  title: string;\n  /**\n   * The content of the todo\n   */\n  content: string;\n\n  /**\n   * The status of the todo (not handled yet)\n   */\n  status: boolean;\n\n  /**\n   * The version (MongoDB specific parameter)\n   */\n  __v: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TodoDataResolverService.html":{"url":"guards/TodoDataResolverService.html","title":"guard - TodoDataResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TodoDataResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/todo-data-resolver.service.ts\n            \n\n                \n                Description\n                \n                \n                    Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\nif todolist/add :\n    we create a new empty todo\nif todolist/:id/edit :\n    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/todo-data-resolver.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The todo service, used to check if there is some todo data in it\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP service, used to get the todo data if it is missing from the service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/todo-data-resolver.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Todo } from '../models/todo';\nimport { TodoListService } from '../services/todo-list.service';\nimport { HttpService } from '../services/http.service';\nimport { map } from 'rxjs/operators';\n/**\n * Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\n * if todolist/add :\n *    we create a new empty todo\n * if todolist/:id/edit :\n *    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n */\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TodoDataResolverService implements Resolve {\n\n  /**\n   *\n   * @param todoSvc The todo service, used to check if there is some todo data in it\n   * @param http The HTTP service, used to get the todo data if it is missing from the service\n   */\n  constructor(private todoSvc: TodoListService, private http: HttpService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Todo | import(\"rxjs\").Observable | Promise {\n    const todoId = route.paramMap.get('id');\n\n    if(!todoId) {\n      return {_id: null, title: '', content: '', status: false, __v: 0};\n    }\n    if(this.todoSvc.todos.length !== 0) {\n\n      return this.todoSvc.getTodo(todoId);\n    } else {\n      return this.http.getTodoList().pipe(map((data: Array) => {\n        let todo: Todo = data.find((currTodo) => currTodo._id === todoId);\n        return todo;\n      }));\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoEditComponent.html":{"url":"components/TodoEditComponent.html","title":"component - TodoEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/TodoList/todo-edit/todo-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-edit\n            \n\n            \n                styleUrls\n                ./todo-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentTitle\n                            \n                            \n                                currId\n                            \n                            \n                                currTodo\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, route: ActivatedRoute, titleSvc: Title, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmitForm\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Edit an element\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currTodo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Todo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/TodoList/todo-edit/todo-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TodoListService } from 'src/app/services/todo-list.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Todo } from 'src/app/models/todo';\n\nimport { Title } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-todo-edit',\n  templateUrl: './todo-edit.component.html',\n  styleUrls: ['./todo-edit.component.css']\n})\nexport class TodoEditComponent implements OnInit {\n  componentTitle: string = \"Edit an element\";\n  currId: string = '';\n  editMode = false;\n  currTodo: Todo;\n\n\n  form = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n\n  constructor(private todoSvc: TodoListService, private route: ActivatedRoute, private titleSvc: Title, private router: Router) {\n    this.titleSvc.setTitle('Todo List - Edit a todo');\n   }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data: {todo: Todo}) => {\n\n      if(data.todo._id) {\n        this.editMode = true;\n      }\n      this.currId = data.todo._id;\n      this.currTodo = data.todo;\n      this.form.setValue(this.currTodo);\n      // }\n\n      // this.\n    });\n\n  }\n\n  onSubmitForm() {\n    if(this.editMode) {\n      this.todoSvc.editTodo(this.form.value).subscribe((response: any) => {\n        if(response.status === 'OK') {\n          this.todoSvc.displaySnackbar('Todo succesfully edited.');\n\n          this.router.navigate(['/todolist']);\n        }\n      });\n\n    } else {\n      this.todoSvc.addTodo(this.form.value).subscribe((response: any) => {\n        if(response.status === 'OK') {\n          this.todoSvc.displaySnackbar('Todo succesfully added.');\n\n          this.router.navigate(['/todolist']);\n        }\n      });\n    }\n\n  }\n\n}\n\n    \n\n    \n        {{componentTitle}}\n\n\n\n  \n  \n      Title\n      \n    \n  \n\n  \n\n    \n      Content\n      \n    \n\n  \n\n  Confirm\n\n\n\n    \n\n    \n                \n                    ./todo-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{componentTitle}}          Title                        Content              Confirm'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/todo-list/todo-list.component.ts\n\n\n    \n        Description\n    \n    \n        The page containing the todo-list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-list\n            \n\n            \n                styleUrls\n                ./todo-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                themes\n                            \n                            \n                                todoListChanged$\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTodo\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleService: Title, todoSvc: TodoListService, _snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/todo-list/todo-list.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The title service, used to define the title\n\n                                                        \n                                                \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TodoService, used to perform operations\n\n                                                        \n                                                \n                                                \n                                                        _snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:94\n                \n            \n\n\n            \n                \n                    Deletes a todo with id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo's id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:71\n                \n            \n\n\n            \n                \n                    On destroy, cleanup function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:55\n                \n            \n\n\n            \n                \n                    On init, sets the title and fetches the todos\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/todo-list/todo-list.component.ts:78\n                \n            \n\n\n            \n                \n                    Saves the todo-list, if OK, displays a snackbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['theme', 'title', 'content', 'status', 'controls']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:39\n                            \n                        \n\n                \n                    \n                        Used by ng-material, defines the columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:34\n                            \n                        \n\n                \n                    \n                        The current themes (not used yet)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription linked to todoSvc.todoListChanged, passes the new todo list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/todo-list/todo-list.component.ts:29\n                            \n                        \n\n                \n                    \n                        The current todo-list\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ɵConsole } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\nimport { TodoListService } from 'src/app/services/todo-list.service';\nimport { Todo } from 'src/app/models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n/**\n * The page containing the todo-list\n */\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit, OnDestroy {\n\n\n  /**\n   * Subscription linked to todoSvc.todoListChanged, passes the new todo list\n   */\n  todoListChanged$: Subscription;\n\n  /**\n   * The current todo-list\n   */\n  todos: Array = [];\n\n  /**\n   * The current themes (not used yet)\n   */\n  themes: Array = [];\n\n  /**\n   * Used by ng-material, defines the columns which are displayed in the table\n   */\n  displayedColumns = ['theme', 'title', 'content', 'status', 'controls'];\n\n\n  /**\n   *\n   * @param titleService The title service, used to define the title\n   * @param todoSvc The TodoService, used to perform operations\n   * @param _snackbar The snackbar\n   */\n  constructor(private titleService: Title,\n              private todoSvc: TodoListService,\n              private _snackbar: MatSnackBar) { }\n\n  /**\n   * On init, sets the title and fetches the todos\n   */\n  ngOnInit(): void {\n\n    this.titleService.setTitle('TodoList - List');\n\n    // TODO : à enlever\n    this.todoSvc.fetchTodosAndThemes();\n\n    this.todoListChanged$ = this.todoSvc.todoListChanged.subscribe((newTodoList: Array) => {\n      this.todos = newTodoList;\n\n    })\n  }\n\n  /**\n   * On destroy, cleanup function\n   */\n  ngOnDestroy() {\n    this.todoListChanged$.unsubscribe();\n  }\n\n  /**\n   * Saves the todo-list, if OK, displays a snackbar\n   */\n  saveTodoList() {\n    this.todoSvc.saveTodoList().subscribe((response: any) => {\n      if(response.status === 'OK') {\n        this._snackbar.open('Todo List saved succesfully.', '', {\n          duration: 2000\n        });\n      } else {\n\n      }\n    });\n  }\n\n  /**\n   * Deletes a todo with id idTodo\n   * @param idTodo The todo's id to delete\n   */\n  deleteTodo(idTodo: string) {\n    this.todoSvc.deleteTodo(idTodo);\n  }\n\n}\n\n    \n\n    \n        Todo List\nAdd a todo\nSave todos\n\n\n  \n    \n      \n        Theme\n      \n      \n        {{todo.theme}}\n\n      \n    \n    \n      Title\n      {{todo.title}}\n    \n    \n      Content\n      {{todo.content}}\n    \n    \n      Status\n      \n        \n      \n    \n    \n      Controls\n      \n        EDIT\n        DELETE\n      \n    \n\n\n    \n    \n  \n\n\n\n\n\n  No todos found. Please click \"Add a todo\" to add one.\n\n\n\n\n\n    \n\n    \n                \n                    ./todo-list.component.css\n                \n                .col-theme {\n  width:15%;\n}\n\n.col-content {\n  width: 50%;\n}\n\n.col-status {\n  width: 10%;\n}\n\n.col-title {\n  width: 15%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Todo ListAdd a todoSave todos                    Theme                    {{todo.theme}}                    Title      {{todo.title}}              Content      {{todo.content}}              Status                                  Controls              EDIT        DELETE                      No todos found. Please click \"Add a todo\" to add one.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'SpotifyUserInfoComponent', 'selector': 'app-spotify-user-info'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                            \n                                todoListChanged\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                displaySnackbar\n                            \n                            \n                                editTodo\n                            \n                            \n                                fetchTodoList\n                            \n                            \n                                fetchTodosAndThemes\n                            \n                            \n                                getTodo\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo-list.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displaySnackbar\n                        \n                        \n                    \n                \n            \n            \n                \ndisplaySnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:67\n                \n            \n\n\n            \n                \n                    Displays a snackbar when requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(newTodo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodosAndThemes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodosAndThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodo\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo-list.service.ts:58\n                \n            \n\n\n            \n                \n                    Saves the current todo list\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Dummy 1', 'Dummy 2']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/todo-list.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Todo } from '../models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService {\n  todos: Array = [];\n  themes: Array = ['Dummy 1', 'Dummy 2'];\n\n  todoListChanged = new Subject>();\n  constructor(private http: HttpService, private snackbar: MatSnackBar) { }\n\n  fetchTodosAndThemes() {\n\n    this.http.getTodoList().subscribe((response: any) => {\n      this.todos = response;\n      this.themes = [];\n\n      this.todoListChanged.next([...this.todos]);\n\n    })\n  }\n\n  getTodo(id: string) {\n\n    return this.todos.find((elem) => {\n      return elem._id === id;\n\n    });\n\n\n  }\n\n  fetchTodoList() {\n    return this.http.getTodoList().subscribe((response: any) => {\n      if(status === 'OK') {\n\n        this.todoListChanged.next(response.todos);\n      }\n    })\n  }\n\n  editTodo(newTodo: Todo) {\n    const _id = newTodo._id;\n\n    return this.http.editTodo(_id, newTodo);\n\n  }\n\n  /**\n   * Saves the current todo list\n   */\n  saveTodoList() {\n    return this.http.saveTodoList(this.todos);\n\n  }\n\n  /**\n   * Displays a snackbar when requested\n   * @param message The message to be displayed\n   */\n  displaySnackbar(message: string) {\n    this.snackbar.open(message, null, {\n      duration: 2000\n    });\n  }\n\n  deleteTodo(idTodo: string) {\n    this.http.deleteTodoElement(idTodo).subscribe((response: any) => {\n      if(response.status === 'OK') {\n        this.todos = response.newList;\n        this.todoListChanged.next([...this.todos]);\n        this.displaySnackbar('Todo succesfully deleted');\n      } else { // TODO : handle use cases\n        this.displaySnackbar('Todo not found');\n      }\n    });\n  }\n\n  addTodo(newTodoData: Todo) {\n    return this.http.addNewTodo(newTodoData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/Spotify/spotify-search/spotify-search.component.ts\n            \n            component\n            SpotifySearchComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/TodoList/todo-edit/todo-edit.component.ts\n            \n            component\n            TodoEditComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/spotify-player/spotify-player.component.ts\n            \n            component\n            SpotifyPlayerComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/guards/spotify-token.guard.ts\n            \n            guard\n            SpotifyTokenGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interceptors/spotify.interceptor.ts\n            \n            interceptor\n            SpotifyInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/models/song.ts\n            \n            interface\n            Song\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            interface\n            Todo\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/pages/github/github.component.ts\n            \n            component\n            GithubComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/gmail/gmail.component.ts\n            \n            component\n            GmailComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-home/spotify-home.component.ts\n            \n            component\n            SpotifyHomeComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-store-token/spotify-store-token.component.ts\n            \n            component\n            SpotifyStoreTokenComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-user-info/spotify-user-info.component.ts\n            \n            component\n            SpotifyUserInfoComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/todo-list/todo-list.component.ts\n            \n            component\n            TodoListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/resolvers/todo-data-resolver.service.ts\n            \n            guard\n            TodoDataResolverService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/Spotify/spotify.service.ts\n            \n            injectable\n            SpotifyService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/services/spotify/spotify-player.service.ts\n            \n            injectable\n            SpotifyPlayerService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/services/todo-list.service.ts\n            \n            injectable\n            TodoListService\n            \n                15 %\n                (2/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.1\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ~10.1.1\n        \n            @angular/compiler : ~10.1.1\n        \n            @angular/core : ~10.1.1\n        \n            @angular/forms : ~10.1.1\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ~10.1.1\n        \n            @angular/platform-browser-dynamic : ~10.1.1\n        \n            @angular/router : ~10.1.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nGmailComponent\n\nGmailComponent\n\nAppModule -->\n\nGmailComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nSpotifyHomeComponent\n\nSpotifyHomeComponent\n\nAppModule -->\n\nSpotifyHomeComponent->AppModule\n\n\n\n\n\nSpotifyPlayerComponent\n\nSpotifyPlayerComponent\n\nAppModule -->\n\nSpotifyPlayerComponent->AppModule\n\n\n\n\n\nSpotifySearchComponent\n\nSpotifySearchComponent\n\nAppModule -->\n\nSpotifySearchComponent->AppModule\n\n\n\n\n\nSpotifyStoreTokenComponent\n\nSpotifyStoreTokenComponent\n\nAppModule -->\n\nSpotifyStoreTokenComponent->AppModule\n\n\n\n\n\nSpotifyUserInfoComponent\n\nSpotifyUserInfoComponent\n\nAppModule -->\n\nSpotifyUserInfoComponent->AppModule\n\n\n\n\n\nTodoEditComponent\n\nTodoEditComponent\n\nAppModule -->\n\nTodoEditComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSpotifyInterceptor\n\nSpotifyInterceptor\n\nAppModule -->\n\nSpotifyInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
