var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.252,1,0.908]],["body/components/AppComponent.html",[0,0.322,1,1.295,2,1.092,3,0.116,4,0.097,5,0.769,6,0.769,7,0.769,8,0.769,9,0.097,10,2.012,11,0.903,12,4.334,13,1.404,14,0.769,15,2.113,16,1.875,17,1.735,18,1.164,19,4.334,20,1.164,21,3.592,22,0.44,23,1.092,24,4.334,25,4.334,26,4.334,27,4.334,28,4.334,29,1.703,30,0.647,31,4.833,32,1.566,33,3.592,34,4.833,35,4.833,36,4.833,37,0.458,38,2.374,39,4.833,40,4.334,41,2.335,42,3.674,43,2.515,44,2.094,45,1.899,46,3.815,47,0.989,48,3.592,49,0.742,50,0.025,51,0.81,52,0.644,53,0.742,54,3.592,55,2.374,56,0.983,57,1.373,58,2.374,59,3.592,60,2.374,61,2.374,62,2.374,63,2.374,64,2.374,65,1.092,66,2.147,67,2.011,68,3.592,69,3.075,70,2.374,71,2.374,72,2.374,73,1.509,74,2.374,75,3.613,76,2.374,77,0.456,78,0.177,79,2.374,80,2.374,81,1.455,82,3.592,83,0.769,84,2.374,85,0.116,86,0.097,87,0.524,88,1.47,89,2.374,90,3.592,91,3.592,92,3.592,93,3.592,94,2.374,95,2.374,96,1.597,97,2.374,98,2.374,99,2.374,100,2.374,101,2.374,102,2.374,103,2.374,104,3.592,105,2.374,106,3.592,107,3.045,108,2.374,109,3.592,110,0.753,111,1.305,112,4.083,113,3.045,114,4.833,115,1.661,116,3.592,117,2.416,118,3.613,119,4.097,120,4.097,121,1.682,122,1.426,123,2.374,124,1.597,125,2.012,126,2.374,127,2.012,128,2.962,129,2.374,130,2.374,131,2.374,132,2.374,133,2.374,134,2.374,135,3.592,136,2.374,137,2.012,138,2.374,139,2.374,140,3.592,141,1.597,142,2.374,143,1.774,144,2.374,145,2.374,146,2.374,147,2.374,148,0.597,149,1.164,150,0.769,151,1.566,152,0.769,153,0.769,154,0.636,155,0.962,156,0.769,157,0.636,158,0.769,159,0.597,160,0.769,161,0.636,162,0.769,163,0.597,164,0.769,165,0.597,166,0.769,167,0.597,168,0.769,169,0.769,170,0.597,171,0.769,172,0.636,173,0.769,174,0.636,175,0.769,176,0.597,177,0.597,178,0.769,179,0.597,180,0.769,181,0.597,182,0.769,183,0.769,184,0.008,185,0.013,186,0.008]],["title/modules/AppModule.html",[187,1.17,188,2.533]],["body/modules/AppModule.html",[1,1.799,3,0.164,4,0.137,9,0.137,16,0.961,50,0.025,77,0.584,78,0.251,85,0.164,86,0.137,148,0.846,157,1.65,165,1.548,184,0.012,185,0.016,186,0.012,187,1.162,188,5.222,189,1.24,190,1.896,191,3.237,192,3.553,193,2.063,194,1.515,195,3.367,196,3.367,197,3.367,198,3.367,199,4.142,200,4.142,201,3.205,202,4.142,203,4.142,204,3.111,205,2.265,206,1.896,207,3.367,208,2.081,209,4.625,210,2.234,211,1.515,212,2.081,213,3.367,214,3.367,215,4.625,216,3.367,217,4.625,218,3.367,219,4.625,220,3.367,221,4.625,222,3.367,223,3.367,224,2.855,225,2.265,226,2.855,227,3.921,228,2.855,229,3.367,230,4.625,231,2.855,232,1.896,233,3.457,234,2.517,235,3.921,236,2.855,237,3.457,238,2.517,239,3.457,240,2.517,241,3.457,242,3.457,243,1.896,244,3.921,245,2.265,246,2.265,247,3.367,248,3.367,249,3.367,250,2.265,251,3.367]],["title/modules/AppRoutingModule.html",[187,1.17,199,2.279]],["body/modules/AppRoutingModule.html",[0,0.368,3,0.241,4,0.202,9,0.202,50,0.025,77,0.529,78,0.368,83,1.601,85,0.241,86,0.202,165,1.488,184,0.017,185,0.021,186,0.017,189,1.82,194,2.224,199,3.983,208,2.224,212,2.664,224,4.19,225,3.325,226,4.19,252,4.943,253,4.943,254,3.299,255,3.629,256,1.943,257,3.325,258,4.943]],["title/components/EmailContainerComponent.html",[0,0.252,154,0.908]],["body/components/EmailContainerComponent.html",[0,0.438,1,0.979,2,1.486,3,0.178,4,0.149,5,1.184,6,1.584,7,1.184,8,1.184,9,0.149,11,1.229,13,1.784,14,1.184,15,2.248,16,1.981,18,1.584,20,1.584,22,0.448,30,0.88,32,1.905,37,1.063,47,0.858,50,0.024,51,0.819,52,0.487,56,0.658,57,1.229,65,1.486,77,0.305,78,0.272,85,0.178,86,0.149,110,0.761,111,0.918,115,1.486,121,1.184,122,1.478,124,3.288,148,0.918,149,1.584,150,1.184,151,1.905,152,1.184,153,1.184,154,1.576,155,1.776,156,1.184,157,0.979,158,1.184,159,0.918,160,1.184,161,0.979,162,1.184,163,0.918,164,1.184,165,0.918,166,1.184,167,0.918,168,1.184,169,1.184,170,0.918,171,1.184,172,0.979,173,1.184,174,0.979,175,1.184,176,0.918,177,0.918,178,1.184,179,0.918,180,1.184,181,0.918,182,1.184,183,1.184,184,0.013,185,0.017,186,0.013,259,4.987,260,4.397,261,3.098,262,4.888,263,4.888,264,5.509,265,4.888,266,4.888,267,4.118,268,4.888,269,3.654,270,4.144,271,3.654,272,2.458,273,3.654,274,3.654]],["title/guards/GetEmailResolver.html",[275,2.279,276,2.279]],["body/guards/GetEmailResolver.html",[3,0.19,4,0.159,9,0.159,11,0.977,22,0.477,30,0.917,37,0.75,41,3.102,45,2.571,47,0.793,49,1.052,50,0.025,51,0.854,52,0.679,53,1.052,56,0.7,77,0.554,78,0.289,83,1.26,85,0.19,86,0.159,87,0.858,88,1.549,184,0.014,185,0.018,186,0.014,256,2.233,276,3.426,277,2.615,278,4.816,279,3.296,280,4.055,281,2.615,282,3.137,283,3.694,284,3.888,285,4.318,286,4.506,287,3.888,288,3.199,289,1.549,290,1.75,291,3.888,292,2.615,293,2.907,294,2.023,295,3.426,296,2.189,297,3.426,298,3.199,299,2.615,300,2.907,301,3.888,302,2.387,303,1.342,304,3.888,305,5.094,306,3.888,307,5.094,308,5.094,309,4.816,310,5.094,311,3.888,312,3.888,313,3.888,314,2.907]],["title/components/GithubComponent.html",[0,0.252,157,0.908]],["body/components/GithubComponent.html",[0,0.423,1,1.046,2,1.553,3,0.191,4,0.159,5,1.264,6,1.264,7,1.264,8,1.264,9,0.159,11,1.283,13,1.844,14,1.264,15,2.265,16,1.996,18,1.654,20,1.654,22,0.478,30,0.919,32,1.956,37,1.098,47,0.795,50,0.024,51,0.856,56,0.703,57,1.283,77,0.326,78,0.29,85,0.191,86,0.159,110,0.795,111,0.981,113,5.118,115,1.553,121,1.264,122,1.517,148,0.981,149,1.654,150,1.264,151,1.956,152,1.264,153,1.264,154,1.046,155,1.368,156,1.264,157,1.617,158,1.264,159,0.981,160,1.264,161,1.046,162,1.264,163,0.981,164,1.264,165,0.981,166,1.264,167,0.981,168,1.264,169,1.264,170,0.981,171,1.264,172,1.046,173,1.264,174,1.046,175,1.264,176,0.981,177,0.981,178,1.264,179,0.981,180,1.264,181,0.981,182,1.264,183,1.264,184,0.014,185,0.018,186,0.014,315,3.309,316,5.691,317,5.106,318,3.903,319,3.903,320,5.106]],["title/components/GmailComponent.html",[0,0.252,159,0.852]],["body/components/GmailComponent.html",[0,0.408,1,0.969,2,1.476,3,0.177,4,0.147,5,1.171,6,1.171,7,1.171,8,1.171,9,0.147,11,1.22,13,1.775,14,1.171,15,2.245,16,1.978,18,1.572,20,1.572,22,0.443,29,2.302,30,0.874,32,1.897,37,0.698,41,3.039,45,1.421,47,0.756,49,0.747,50,0.025,51,0.919,52,0.482,53,0.747,56,0.651,57,1.22,77,0.489,78,0.269,81,2.216,85,0.177,86,0.147,87,0.798,88,1.099,110,0.756,111,1.22,115,1.476,117,3.265,121,1.171,122,1.472,124,2.432,141,2.432,148,0.909,149,1.572,150,1.171,151,1.897,152,1.171,153,1.171,154,0.969,155,1.3,156,1.171,157,0.969,158,1.171,159,1.472,160,1.171,161,0.969,162,1.171,163,0.909,164,1.171,165,0.909,166,1.171,167,0.909,168,1.171,169,1.171,170,0.909,171,1.171,172,0.969,173,1.171,174,0.969,175,1.171,176,0.909,177,0.909,178,1.171,179,0.909,180,1.171,181,0.909,182,1.171,183,1.171,184,0.013,185,0.017,186,0.013,210,1.747,211,1.627,281,2.432,299,2.432,321,3.065,322,5.479,323,4.854,324,4.645,325,3.615,326,3.615,327,3.615,328,3.615,329,3.615,330,3.065]],["title/classes/GmailCustomEmail.html",[86,0.138,294,1.763]],["body/classes/GmailCustomEmail.html",[3,0.219,4,0.183,9,0.183,22,0.55,23,1.698,47,1.053,50,0.024,52,0.901,65,2.109,85,0.219,86,0.183,184,0.016,185,0.019,186,0.016,267,4.543,294,2.906,296,3.847,331,3.357,332,5.107,333,3.357,334,2.936,335,4.543,336,5.153,337,4.088,338,4.088,339,3.807,340,4.49,341,3.807,342,2.698,343,4.49,344,2.906,345,3.807,346,3.807,347,4.49]],["title/classes/GmailEmail.html",[86,0.138,298,1.908]],["body/classes/GmailEmail.html",[3,0.217,4,0.182,9,0.182,22,0.546,23,1.689,47,1.016,50,0.025,52,0.886,65,2.074,67,1.639,85,0.217,86,0.182,184,0.016,185,0.019,186,0.016,298,3.127,331,3.328,332,4.973,333,3.328,334,2.925,335,4.525,337,4.072,339,3.774,341,3.774,342,2.925,345,3.774,346,3.774,348,6.054,349,6.054,350,2.683,351,2.003,352,4.451,353,3.328,354,4.451,355,4.152,356,4.451,357,3.127,358,3.774,359,3.774]],["title/components/GmailEmailListComponent.html",[0,0.252,161,0.908]],["body/components/GmailEmailListComponent.html",[0,0.328,1,0.654,2,1.116,3,0.119,4,0.1,5,0.791,6,0.791,7,0.791,8,0.791,9,0.1,11,0.922,13,1.428,14,0.791,15,2.123,16,1.871,18,1.189,20,1.189,22,0.299,23,1.116,30,0.661,32,1.588,37,0.471,41,2.667,47,0.938,49,0.758,50,0.025,51,0.822,52,0.735,53,0.758,56,0.794,57,1.232,66,2.065,67,1.935,69,2.482,73,1.541,77,0.438,78,0.182,85,0.119,86,0.1,87,0.539,88,1.679,110,0.571,111,1.108,115,1.116,117,3.535,121,0.791,122,1.232,124,1.642,125,2.07,127,2.07,128,2.248,141,1.642,148,0.614,149,1.189,150,0.791,151,1.588,152,0.791,153,0.791,154,0.654,155,1.849,156,0.791,157,0.654,158,0.791,159,0.614,160,0.791,161,1.313,162,0.791,163,0.614,164,0.791,165,0.614,166,0.791,167,0.614,168,0.791,169,0.791,170,0.614,171,0.791,172,0.654,173,0.791,174,0.654,175,0.791,176,0.614,177,0.614,178,0.791,179,0.614,180,0.791,181,0.614,182,0.791,183,0.791,184,0.009,185,0.013,186,0.009,281,1.642,294,1.27,295,2.468,296,1.374,297,2.468,298,1.374,299,1.642,330,2.07,337,2.468,342,1.773,350,2.539,360,5.205,361,4.59,362,1.825,363,3.737,364,3.111,365,4.408,366,4.408,367,4.68,368,3.737,369,4.408,370,4.408,371,3.669,372,3.004,373,3.669,374,3.669,375,2.441,376,2.441,377,2.441,378,2.441,379,3.295,380,2.441,381,2.468,382,2.07,383,2.441,384,2.441,385,2.441,386,4.408,387,2.441,388,2.441,389,2.07,390,2.441,391,2.441,392,2.441,393,3.669,394,2.441,395,3.669,396,2.441,397,2.441,398,4.408,399,2.441,400,4.408,401,2.441,402,2.441,403,2.441,404,3.111,405,3.669,406,3.669,407,1.852,408,3.669,409,2.441,410,3.669,411,1.825,412,2.441,413,2.07,414,2.07,415,1.825,416,2.441,417,2.441,418,2.441,419,2.07,420,2.441,421,2.441,422,2.441,423,2.441,424,2.07,425,1.642,426,2.441,427,2.441,428,2.441,429,1.642,430,1.642,431,2.441,432,1.642,433,2.441,434,2.441,435,1.825,436,2.441]],["title/modules/GmailModule.html",[187,1.17,200,2.279]],["body/modules/GmailModule.html",[3,0.194,4,0.162,9,0.162,50,0.025,77,0.562,78,0.295,85,0.194,86,0.162,148,0.996,154,1.729,155,1.382,159,1.622,161,1.729,163,1.622,167,1.622,184,0.014,185,0.018,186,0.014,187,1.368,189,1.459,190,2.231,191,3.514,192,2.666,193,3.161,194,2.321,200,4.739,201,3.359,204,3.469,205,2.666,206,2.231,208,2.321,212,2.321,250,2.666,260,2.963,361,2.963,437,3.963,438,3.963,439,3.963,440,4.341,441,3.963,442,3.36,443,3.963,444,3.36,445,3.963,446,2.963,447,3.36,448,2.666,449,3.36,450,3.963,451,3.963,452,5.158,453,3.963]],["title/modules/GmailRoutingModule.html",[187,1.17,440,2.279]],["body/modules/GmailRoutingModule.html",[0,0.471,3,0.217,4,0.181,9,0.181,50,0.025,77,0.555,78,0.33,83,1.439,85,0.217,86,0.181,117,2.988,159,1.52,163,1.394,167,1.394,184,0.015,185,0.019,186,0.015,189,1.635,193,2.722,194,1.999,208,1.999,212,2.496,254,3.147,255,3.399,256,1.746,257,4.261,276,4.068,280,2.988,314,3.32,440,3.731,442,3.766,444,3.766,447,3.766,448,2.988,449,3.766,454,4.442,455,4.442,456,4.442,457,4.442,458,4.442,459,4.442,460,4.442,461,4.442,462,3.32]],["title/injectables/GmailService.html",[41,1.637,289,1.03]],["body/injectables/GmailService.html",[3,0.097,4,0.081,9,0.081,17,0.957,22,0.243,23,1.176,30,0.562,37,0.382,41,1.509,44,1.509,45,1.725,47,0.982,49,1.17,50,0.025,51,0.992,52,0.832,53,1.17,56,1.065,57,0.972,65,1.997,66,1.995,67,2.027,77,0.459,78,0.147,85,0.097,86,0.081,87,0.437,88,1.949,110,0.486,111,1.103,112,1.481,122,0.785,128,1.914,155,1.554,184,0.007,185,0.011,186,0.007,256,2.227,267,2.891,288,2.177,289,0.95,290,0.891,292,1.332,293,1.481,294,2.013,295,2.101,296,1.115,297,2.101,298,2.991,300,2.335,302,2.437,303,1.335,309,2.648,334,2.906,335,2.891,336,3.279,337,2.601,338,3.811,342,1.509,344,2.013,350,0.957,351,1.406,355,1.481,357,1.115,358,1.679,359,1.679,367,3.279,381,2.101,404,2.648,407,1.625,419,2.648,463,1.115,464,1.679,465,1.15,466,2.101,467,2.648,468,2.335,469,2.335,470,3.867,471,3.867,472,3.867,473,4.39,474,3.867,475,4.39,476,3.124,477,3.124,478,3.124,479,3.124,480,3.124,481,3.124,482,3.124,483,3.124,484,3.124,485,3.867,486,1.214,487,3.124,488,1.981,489,3.124,490,1.981,491,3.124,492,2.177,493,2.858,494,1.981,495,3.124,496,4.39,497,2.648,498,3.794,499,3.124,500,1.679,501,3.124,502,1.981,503,3.124,504,3.124,505,1.981,506,3.124,507,1.981,508,3.124,509,4.303,510,3.282,511,2.648,512,2.648,513,3.124,514,1.981,515,3.124,516,1.981,517,3.124,518,1.981,519,1.981,520,1.981,521,1.981,522,3.124,523,1.981,524,1.981,525,1.981,526,1.981,527,1.981,528,1.981,529,1.981,530,1.679,531,1.679,532,1.481,533,1.031,534,1.981,535,1.332,536,3.124,537,1.679,538,1.981,539,1.332,540,1.981,541,1.981,542,1.981,543,3.124,544,1.981,545,1.679,546,1.981,547,1.981,548,1.981,549,1.481,550,1.981,551,1.679,552,1.981,553,1.981,554,1.981,555,1.981,556,0.957,557,1.981,558,1.981,559,1.981,560,1.981,561,1.679,562,1.481,563,1.981,564,1.981,565,3.124,566,1.981,567,1.981,568,1.981,569,1.981,570,3.124,571,3.124,572,3.124,573,4.39,574,1.981,575,1.981,576,1.679,577,1.214,578,1.981,579,1.981,580,1.332,581,1.981,582,1.981,583,1.981,584,1.981,585,1.981,586,1.981,587,1.981,588,1.481,589,1.981,590,1.679,591,1.981,592,1.981,593,1.981,594,1.981,595,1.981,596,1.981,597,1.981,598,1.981,599,1.981,600,1.981]],["title/components/GmailStoreTokenComponent.html",[0,0.252,163,0.852]],["body/components/GmailStoreTokenComponent.html",[0,0.412,1,0.991,2,1.499,3,0.181,4,0.151,5,1.199,6,1.199,7,1.199,8,1.199,9,0.151,11,1.239,13,1.796,14,1.199,15,2.251,16,1.984,18,1.597,20,1.597,22,0.453,30,0.888,32,1.915,37,0.714,46,4.347,47,0.768,49,0.764,50,0.025,51,0.929,52,0.493,53,0.764,56,0.666,57,1.239,77,0.411,78,0.275,83,1.199,85,0.181,86,0.151,87,0.817,88,1.125,110,0.768,111,0.93,115,1.499,121,1.199,122,1.486,148,0.93,149,1.597,150,1.199,151,1.915,152,1.199,153,1.199,154,0.991,155,1.321,156,1.199,157,0.991,158,1.199,159,0.93,160,1.199,161,0.991,162,1.199,163,1.486,164,1.199,165,0.93,166,1.199,167,0.93,168,1.199,169,1.199,170,0.93,171,1.199,172,0.991,173,1.199,174,0.991,175,1.199,176,0.93,177,0.93,178,1.199,179,0.93,180,1.199,181,0.93,182,1.199,183,1.199,184,0.013,185,0.017,186,0.013,282,2.565,283,3.623,601,3.137,602,4.929,603,5.543,604,4.929,605,3.137,606,3.7,607,3.7,608,3.137,609,3.7,610,3.137,611,3.7,612,3.7,613,3.7]],["title/components/HomePageComponent.html",[0,0.252,165,0.852]],["body/components/HomePageComponent.html",[0,0.379,1,0.843,2,1.341,3,0.154,4,0.128,5,1.019,6,1.019,7,1.019,8,1.019,9,0.128,11,1.109,13,1.651,14,1.019,15,2.206,16,1.944,18,1.429,20,1.429,22,0.386,29,2.171,30,0.794,32,1.789,37,0.607,47,0.687,49,0.65,50,0.025,51,0.854,52,0.419,53,0.65,56,0.566,57,1.109,75,4.129,77,0.368,78,0.234,85,0.154,86,0.128,87,0.694,110,1.049,111,1.515,115,1.341,121,2.08,122,1.515,148,0.791,149,1.429,150,1.019,151,1.789,152,1.019,153,1.019,154,0.843,155,1.182,156,1.019,157,0.843,158,1.019,159,0.791,160,1.019,161,0.843,162,1.019,163,0.791,164,1.019,165,1.388,166,1.019,167,0.791,168,1.019,169,1.019,170,0.791,171,1.019,172,0.843,173,1.019,174,0.843,175,1.019,176,0.791,177,0.791,178,1.019,179,0.791,180,1.019,181,0.791,182,1.019,183,1.019,184,0.011,185,0.015,186,0.011,206,2.484,210,1.52,211,1.416,225,3.427,469,3.298,580,2.967,588,2.352,614,4.32,615,2.667,616,4.32,617,5.095,618,4.412,619,2.667,620,3.146,621,3.298,622,3.146,623,3.146,624,4.412,625,3.74,626,3.74,627,3.298,628,4.412,629,3.74,630,2.116,631,3.74,632,2.967,633,3.298,634,3.298,635,2.967,636,4.412,637,2.704,638,2.704,639,3.74,640,3.715,641,4.412,642,3.74,643,3.74,644,3.74,645,3.298,646,4.412,647,3.74,648,4.412,649,4.412,650,3.146,651,3.146,652,3.146]],["title/injectables/HttpService.html",[45,1.332,289,1.03]],["body/injectables/HttpService.html",[3,0.096,4,0.08,9,0.08,17,0.945,22,0.24,30,0.987,37,0.378,44,1.494,45,1.216,47,0.947,49,1.166,50,0.025,51,0.946,52,0.752,53,1.166,56,1.109,65,1.945,77,0.364,78,0.146,85,0.096,86,0.08,87,0.432,110,1.026,111,1.269,120,2.622,122,1.096,184,0.007,185,0.011,186,0.007,232,1.102,256,2.271,289,0.941,300,2.312,302,2.589,303,1.995,334,2.648,342,1.853,350,1.853,353,4.219,407,1.832,463,1.102,465,1.605,486,1.199,492,3.32,498,2.312,500,1.659,510,2.868,533,1.018,537,3.252,549,4.483,551,4.28,556,2.294,580,2.081,588,2.312,627,2.312,630,2.932,632,2.932,633,3.774,634,2.312,635,2.081,653,1.659,654,3.093,655,3.696,656,3.093,657,2.622,658,3.093,659,4.36,660,3.093,661,4.36,662,4.36,663,3.093,664,3.093,665,2.312,666,3.259,667,1.956,668,3.093,669,1.956,670,2.622,671,1.956,672,3.888,673,3.093,674,3.093,675,3.093,676,3.093,677,2.622,678,2.622,679,3.774,680,3.093,681,1.956,682,4.32,683,3.093,684,5.288,685,1.956,686,3.093,687,3.093,688,1.956,689,1.956,690,3.093,691,1.956,692,1.956,693,3.093,694,3.093,695,1.956,696,3.093,697,2.622,698,3.093,699,3.093,700,3.259,701,1.956,702,3.093,703,1.956,704,3.093,705,3.836,706,2.622,707,3.093,708,1.956,709,2.312,710,1.896,711,3.252,712,5.78,713,1.956,714,1.659,715,1.956,716,6.397,717,5.997,718,5.997,719,5.997,720,5.049,721,1.956,722,3.774,723,3.093,724,1.956,725,1.956,726,3.093,727,1.956,728,3.696,729,1.956,730,1.956,731,1.956,732,1.956,733,1.462,734,1.956,735,1.956,736,1.956,737,3.252,738,3.252,739,1.659,740,1.956,741,1.956,742,1.956,743,1.956,744,1.956,745,1.956]],["title/components/ReadEmailComponent.html",[0,0.252,167,0.852]],["body/components/ReadEmailComponent.html",[0,0.37,1,0.805,2,1.298,3,0.147,4,0.123,5,0.973,6,1.383,7,0.973,8,0.973,9,0.123,11,1.073,13,1.609,14,0.973,15,2.192,16,1.931,18,1.383,20,1.383,22,0.368,23,1.298,30,0.769,32,1.753,37,0.58,41,2.869,47,0.89,49,0.62,50,0.025,51,0.833,52,0.662,53,0.62,56,0.769,57,1.249,77,0.496,78,0.223,83,0.973,85,0.147,86,0.123,87,0.663,88,1.511,110,0.665,111,0.755,115,1.298,121,0.973,122,1.36,141,2.02,148,0.755,149,1.383,150,0.973,151,1.753,152,0.973,153,0.973,154,0.805,155,1.45,156,0.973,157,0.805,158,0.973,159,0.755,160,0.973,161,0.805,162,0.973,163,0.755,164,0.973,165,0.755,166,0.973,167,1.36,168,2.058,169,0.973,170,0.755,171,0.973,172,0.805,173,0.973,174,0.805,175,0.973,176,0.755,177,0.755,178,0.973,179,0.755,180,0.973,181,0.755,182,0.973,183,0.973,184,0.01,185,0.015,186,0.01,210,1.451,211,1.352,244,2.546,245,2.02,246,2.02,281,2.02,282,2.585,283,3.316,294,2.222,295,2.02,296,1.691,297,2.02,299,2.02,314,4.045,372,3.316,413,2.546,414,2.546,435,2.245,448,3.995,493,1.691,746,5.035,747,2.546,748,3.714,749,4.968,750,4.27,751,4.968,752,4.968,753,5.411,754,3.714,755,4.045,756,4.27,757,3.004,758,3.004,759,3.004,760,3.004,761,3.004,762,3.004,763,3.004,764,3.004,765,3.004,766,3.004,767,3.004,768,2.546,769,3.004,770,3.004,771,3.004,772,2.245,773,3.004,774,3.004,775,3.004,776,4.27,777,4.27,778,3.004,779,3.004]],["title/modules/SharedModule.html",[187,1.17,201,1.763]],["body/modules/SharedModule.html",[3,0.229,4,0.191,9,0.191,50,0.025,77,0.569,78,0.349,83,1.521,85,0.229,86,0.191,184,0.016,185,0.02,186,0.016,189,1.729,191,2.877,194,2.113,201,2.987,208,2.113,212,2.583,233,4.634,234,3.51,241,4.634,242,4.634,243,2.643,255,3.799,424,3.98,780,4.695,781,5.256,782,3.51,783,5.256,784,3.98,785,6.2,786,4.695]],["title/interfaces/Song.html",[787,2.076,788,2.076]],["body/interfaces/Song.html",[3,0.222,4,0.185,9,0.185,22,0.556,23,1.71,29,2.627,50,0.025,51,1.07,52,0.85,65,2.133,85,0.222,143,3.394,184,0.016,185,0.02,186,0.016,272,3.054,465,1.671,637,4.097,638,4.097,679,4.203,787,2.782,788,4.021,789,3.394,790,3.849,791,4.54,792,4.772,793,5.622,794,5.622]],["title/components/SpotifyHomeComponent.html",[0,0.252,170,0.852]],["body/components/SpotifyHomeComponent.html",[0,0.351,1,0.733,2,1.214,3,0.134,4,0.112,5,0.886,6,0.886,7,0.886,8,0.886,9,0.112,11,1.004,13,1.527,14,0.886,15,2.162,16,1.905,18,1.293,20,1.293,22,0.335,23,1.214,29,2.037,30,0.719,32,1.679,37,0.528,43,3.092,44,2.277,45,2.037,47,0.925,49,0.825,50,0.025,51,0.869,52,0.734,53,0.825,56,0.849,57,1.303,65,1.433,66,1.853,67,1.736,69,3.103,73,1.677,77,0.432,78,0.204,85,0.134,86,0.112,87,0.604,88,1.214,96,1.84,107,2.32,110,0.622,111,0.688,115,1.214,118,2.985,119,3.385,121,1.679,122,1.641,148,0.688,149,1.293,150,0.886,151,1.679,152,0.886,153,0.886,154,0.733,155,1.07,156,0.886,157,0.733,158,0.886,159,0.688,160,0.886,161,0.733,162,0.886,163,0.688,164,0.886,165,0.688,166,0.886,167,0.688,168,0.886,169,0.886,170,1.303,171,0.886,172,0.733,173,0.886,174,0.733,175,0.886,176,0.688,177,0.688,178,0.886,179,0.688,180,0.886,181,0.688,182,0.886,183,0.886,184,0.01,185,0.014,186,0.01,210,1.322,211,1.231,293,2.045,344,2.078,351,1.797,372,3.176,407,1.15,415,2.045,425,1.84,429,1.84,430,1.84,432,1.84,465,1.007,545,3.385,577,2.447,619,2.32,621,2.985,630,2.686,679,2.045,795,4.552,796,4.096,797,2.32,798,3.993,799,4.714,800,3.993,801,4.714,802,4.714,803,4.714,804,3.993,805,3.993,806,3.993,807,2.736,808,1.541,809,2.736,810,2.736,811,3.385,812,3.993,813,2.736,814,2.736,815,3.993,816,3.993,817,2.045,818,2.736,819,2.736,820,2.736,821,4.714,822,1.231,823,1.677,824,1.84,825,2.736,826,2.736,827,3.993,828,3.993,829,3.385,830,2.32,831,2.32,832,1.84,833,2.32,834,2.32,835,2.32,836,2.32,837,2.045,838,2.045,839,2.045,840,2.736]],["title/interceptors/SpotifyInterceptor.html",[841,2.872,842,2.279]],["body/interceptors/SpotifyInterceptor.html",[3,0.178,4,0.148,9,0.148,11,0.915,22,0.446,30,0.878,37,0.703,45,2.308,47,0.759,49,1.007,50,0.025,51,0.817,52,0.65,53,1.007,56,0.656,77,0.49,78,0.271,81,2.231,85,0.178,86,0.148,87,0.804,110,0.759,177,0.915,184,0.013,185,0.017,186,0.013,232,2.05,288,3.096,289,1.483,290,1.638,302,2.31,303,2.114,353,2.722,465,1.34,492,3.731,539,3.28,561,3.087,576,3.087,706,4.662,710,2.231,737,4.134,738,4.134,842,3.28,843,3.641,844,3.087,845,4.877,846,4.662,847,4.662,848,5.192,849,4.134,850,4.877,851,3.641,852,3.641,853,4.877,854,4.877,855,5.874,856,4.11,857,5.874,858,3.641,859,4.877,860,3.641,861,4.877,862,3.641,863,3.641,864,3.641,865,3.641,866,3.641,867,4.877,868,4.877,869,3.645,870,3.087,871,3.641,872,3.641,873,3.641,874,3.087,875,3.641,876,3.087,877,3.087,878,3.087,879,3.641,880,3.641,881,3.641,882,3.641]],["title/modules/SpotifyModule.html",[187,1.17,202,2.279]],["body/modules/SpotifyModule.html",[3,0.161,4,0.134,9,0.134,50,0.025,73,1.383,77,0.578,78,0.245,85,0.161,86,0.134,148,0.827,170,1.681,172,1.792,174,1.792,176,1.681,177,1.144,184,0.011,185,0.016,186,0.011,187,1.136,189,1.212,190,1.853,191,3.199,192,2.214,193,3.199,194,2.349,201,3.183,202,4.7,204,3.063,205,2.214,206,1.853,208,2.049,212,2.049,227,3.86,228,2.791,231,3.86,232,1.853,235,3.86,236,2.791,237,3.404,238,2.461,239,3.404,240,2.461,241,3.404,242,3.404,243,1.853,250,2.214,781,3.86,782,2.461,796,2.214,842,4.114,883,3.292,884,3.292,885,3.292,886,3.292,887,3.292,888,4.114,889,3.292,890,4.553,891,3.292,892,4.553,893,3.292,894,3.86,895,2.791,896,2.791,897,4.553,898,3.292,899,3.292,900,3.86,901,2.791,902,2.214,903,2.791,904,4.553,905,2.461,906,3.292,907,2.461,908,3.292,909,3.292,910,3.292,911,3.292,912,3.292]],["title/components/SpotifyPlayerComponent.html",[0,0.252,172,0.908]],["body/components/SpotifyPlayerComponent.html",[0,0.294,1,0.549,2,0.976,3,0.263,4,0.084,5,0.664,6,0.664,7,0.664,8,0.664,9,0.084,11,0.807,13,1.281,14,0.664,15,2.057,16,1.813,18,1.039,20,1.039,22,0.251,23,0.976,29,1.261,30,0.578,32,1.449,37,0.396,42,2.72,43,2.328,47,0.969,49,0.663,50,0.025,51,0.75,52,0.647,53,0.663,56,1.031,57,1.472,66,1.554,67,1.456,73,1.348,77,0.405,78,0.153,85,0.1,86,0.084,87,0.453,88,0.623,110,0.616,111,0.515,115,0.976,121,0.664,122,1.501,143,3.85,148,0.515,149,1.039,150,0.664,151,1.449,152,0.664,153,0.664,154,0.549,155,0.86,156,0.664,157,0.549,158,0.664,159,0.515,160,0.664,161,0.549,162,0.664,163,0.515,164,0.664,165,0.515,166,0.664,167,0.515,168,0.664,169,0.664,170,0.515,171,0.664,172,1.198,173,0.664,174,0.549,175,0.664,176,0.515,177,0.515,178,0.664,179,0.515,180,0.664,181,0.515,182,0.664,183,0.664,184,0.007,185,0.011,186,0.007,288,1.807,290,0.922,303,1.108,342,1.55,407,0.861,425,3.009,429,1.379,430,1.379,432,1.379,435,1.532,465,0.755,468,4.023,497,1.738,549,3.344,556,0.99,637,2.741,638,2.741,640,1.379,643,3.352,644,3.352,645,1.532,710,2.976,768,1.738,788,4.113,792,2.399,817,1.532,822,1.779,837,1.532,838,1.532,839,1.532,856,3.344,905,4.703,913,4.703,914,1.738,915,3.954,916,3.209,917,4.856,918,3.954,919,3.792,920,4.473,921,3.792,922,3.792,923,4.473,924,4.473,925,3.209,926,3.792,927,2.05,928,3.954,929,3.009,930,3.209,931,2.05,932,2.05,933,2.05,934,4.473,935,3.792,936,4.473,937,4.473,938,4.473,939,4.473,940,2.05,941,4.473,942,2.05,943,2.05,944,2.72,945,2.72,946,3.209,947,2.05,948,3.209,949,2.72,950,3.209,951,3.209,952,2.05,953,2.72,954,3.209,955,3.209,956,2.399,957,2.05,958,2.956,959,2.05,960,2.05,961,3.209,962,2.05,963,2.05,964,2.05,965,2.05,966,3.209,967,2.05,968,2.05,969,2.05,970,2.05,971,1.532,972,2.05,973,3.209,974,2.05,975,2.05,976,2.05,977,3.954,978,1.738,979,2.05,980,2.05,981,2.05,982,2.05,983,3.209,984,2.05,985,2.05,986,2.05,987,2.05,988,3.209,989,3.209,990,3.209,991,3.209,992,3.209,993,3.209,994,2.05,995,4.117,996,2.72,997,2.05,998,2.05,999,2.05,1000,2.05,1001,2.05,1002,2.05,1003,2.05,1004,2.05,1005,2.05]],["title/injectables/SpotifyPlayerService.html",[289,1.03,929,2.279]],["body/injectables/SpotifyPlayerService.html",[3,0.14,4,0.117,9,0.117,17,1.384,22,0.351,29,1.623,30,0.743,37,0.553,44,1.995,47,0.978,49,1.245,50,0.025,51,1.01,52,0.837,53,1.245,56,1.11,57,1.038,65,1.984,66,2.081,67,2.153,77,0.404,78,0.213,85,0.14,86,0.117,87,0.633,122,1.038,184,0.01,185,0.014,186,0.01,232,1.614,256,1.126,289,1.255,292,1.928,302,2.456,334,2.825,342,2.558,351,1.858,355,2.142,463,1.614,465,1.95,466,2.777,467,3.5,468,4.37,469,3.086,486,1.756,512,4.957,532,2.142,533,1.491,556,2.338,635,3.933,637,2.53,638,2.53,666,3.959,788,2.53,792,3.086,808,2.325,822,1.289,823,1.756,848,4.957,856,3.086,919,4.49,921,3.5,922,3.5,926,3.5,929,2.777,944,3.5,945,3.5,1006,5.407,1007,2.43,1008,5.296,1009,4.129,1010,4.129,1011,4.129,1012,2.866,1013,2.866,1014,2.866,1015,4.129,1016,2.866,1017,4.129,1018,6.026,1019,5.847,1020,4.129,1021,2.866,1022,4.129,1023,2.866,1024,4.129,1025,2.866,1026,4.129,1027,2.866,1028,4.129,1029,2.866,1030,2.866,1031,2.43,1032,2.866,1033,2.866,1034,2.866,1035,2.866,1036,2.866,1037,2.866,1038,2.866,1039,2.866,1040,2.866,1041,2.866,1042,2.866,1043,2.866,1044,2.866,1045,2.866,1046,2.866,1047,2.866]],["title/modules/SpotifyRoutingModule.html",[187,1.17,888,2.279]],["body/modules/SpotifyRoutingModule.html",[0,0.456,3,0.223,4,0.186,9,0.186,50,0.025,77,0.548,78,0.34,83,1.48,85,0.223,86,0.186,122,1.149,170,1.54,176,1.419,177,1.419,184,0.016,185,0.02,186,0.016,189,1.683,194,2.056,208,2.056,212,2.54,254,3.188,255,3.46,256,1.796,257,4.12,462,3.416,796,3.074,888,3.797,900,4.786,901,3.874,902,3.074,903,3.874,1048,4.57,1049,4.12,1050,4.57,1051,4.57,1052,4.786,1053,4.57,1054,4.57,1055,4.57]],["title/components/SpotifySearchComponent.html",[0,0.252,174,0.908]],["body/components/SpotifySearchComponent.html",[0,0.317,1,0.619,2,1.071,3,0.113,4,0.094,5,0.749,6,0.749,7,0.749,8,0.749,9,0.094,11,0.885,13,1.382,14,0.749,15,2.103,16,1.853,18,1.141,20,1.141,22,0.283,23,1.071,30,0.634,32,1.545,37,0.446,43,2.814,47,0.972,49,1.117,50,0.025,51,1.032,52,0.841,53,1.117,56,1.012,57,1.413,65,1.56,66,1.874,67,1.756,73,1.792,77,0.356,78,0.172,85,0.113,86,0.094,87,0.51,96,2.369,110,0.548,111,0.581,115,1.56,121,0.749,122,1.547,148,0.581,149,1.141,150,0.749,151,1.545,152,0.749,153,0.749,154,0.619,155,0.943,156,0.749,157,0.619,158,0.749,159,0.581,160,0.749,161,0.619,162,0.749,163,0.581,164,0.749,165,0.581,166,0.749,167,0.581,168,0.749,169,0.749,170,0.581,171,0.749,172,0.619,173,0.749,174,1.278,175,0.749,176,0.581,177,0.581,178,0.749,179,0.581,180,0.749,181,0.581,182,0.749,183,0.749,184,0.008,185,0.012,186,0.008,243,1.302,270,4.043,302,0.971,303,2.09,344,2.22,351,2.146,372,2.922,407,1.48,415,1.728,425,2.369,429,2.369,430,2.369,432,1.555,510,1.728,580,2.369,640,2.369,748,3.188,808,1.302,817,1.728,830,1.96,831,1.96,832,1.555,833,1.96,834,1.96,835,1.96,836,1.96,837,1.728,838,1.728,839,1.728,907,4.722,913,4.722,995,1.96,996,1.96,1056,1.96,1057,4.265,1058,3.522,1059,4.265,1060,4.584,1061,4.265,1062,5.132,1063,3.522,1064,3.522,1065,3.522,1066,2.986,1067,3.522,1068,2.312,1069,2.312,1070,3.522,1071,2.312,1072,2.312,1073,2.312,1074,3.522,1075,2.312,1076,2.312,1077,3.522,1078,2.312,1079,2.312,1080,3.522,1081,2.312,1082,2.312,1083,3.522,1084,2.312,1085,2.312,1086,5.132,1087,2.312,1088,3.616,1089,4.584,1090,4.043,1091,4.584,1092,4.584,1093,3.522,1094,2.312,1095,2.312,1096,2.312,1097,2.312,1098,2.986,1099,2.312,1100,2.312,1101,2.312,1102,2.312,1103,2.312,1104,4.265,1105,2.312,1106,2.312,1107,2.312,1108,2.312,1109,1.96,1110,2.312,1111,2.312,1112,2.312,1113,2.312,1114,2.312,1115,2.312,1116,3.522,1117,2.312,1118,2.312,1119,2.312]],["title/injectables/SpotifyService.html",[43,1.763,289,1.03]],["body/injectables/SpotifyService.html",[3,0.158,4,0.132,9,0.132,17,1.565,22,0.397,23,1.369,30,0.811,37,0.625,43,2.344,44,2.176,47,0.948,49,1.069,50,0.025,51,0.868,52,0.861,53,1.069,56,1.059,57,0.814,65,1.99,66,1.77,67,1.658,73,1.892,77,0.467,78,0.241,85,0.158,86,0.132,87,0.715,88,1.574,110,0.701,184,0.011,185,0.016,186,0.011,232,1.824,288,1.824,289,1.369,290,1.458,302,1.892,303,2.03,338,3.482,344,2.911,350,1.565,351,2.026,379,2.422,463,1.824,486,1.986,492,3.15,493,1.824,533,1.686,535,2.179,539,3.482,577,2.76,630,3.029,637,1.986,638,1.986,639,3.818,640,2.179,642,2.747,655,4.743,666,4.182,700,2.422,714,2.747,728,2.747,733,2.422,822,2.026,846,3.818,847,3.818,849,3.818,869,2.422,958,2.422,1031,2.747,1066,3.818,1089,2.747,1091,2.747,1092,2.747,1109,4.388,1120,2.747,1121,5.176,1122,5.176,1123,4.504,1124,4.504,1125,3.24,1126,4.504,1127,4.504,1128,5.176,1129,3.24,1130,4.504,1131,4.504,1132,3.24,1133,4.504,1134,3.24,1135,3.24,1136,3.24,1137,3.24,1138,3.24,1139,3.24,1140,3.24,1141,3.24,1142,3.24,1143,3.24,1144,3.24,1145,3.24,1146,2.747,1147,2.747,1148,3.24,1149,3.24,1150,3.24,1151,3.24,1152,3.24,1153,3.24,1154,3.24]],["title/components/SpotifyStoreTokenComponent.html",[0,0.252,176,0.852]],["body/components/SpotifyStoreTokenComponent.html",[0,0.398,1,0.923,2,1.429,3,0.168,4,0.141,5,1.116,6,1.116,7,1.116,8,1.116,9,0.141,11,1.181,13,1.732,14,1.116,15,2.232,16,1.967,18,1.522,20,1.522,22,0.422,30,0.846,32,1.86,37,0.665,46,4.269,47,0.732,49,0.712,50,0.025,51,0.896,52,0.459,53,0.712,56,0.62,57,1.181,77,0.392,78,0.256,83,1.116,85,0.168,86,0.141,87,0.761,88,1.048,110,0.732,111,0.866,115,1.429,121,1.116,122,1.694,148,0.866,149,1.522,150,1.116,151,1.86,152,1.116,153,1.116,154,0.923,155,1.259,156,1.116,157,0.923,158,1.116,159,0.866,160,1.116,161,0.923,162,1.116,163,0.866,164,1.116,165,0.866,166,1.116,167,0.866,168,1.116,169,1.116,170,0.866,171,1.116,172,0.923,173,1.116,174,0.923,175,1.116,176,1.443,177,1.716,178,1.116,179,0.866,180,1.116,181,0.866,182,1.116,183,1.116,184,0.012,185,0.016,186,0.012,282,2.445,283,3.519,303,1.19,492,2.646,539,2.318,605,2.921,608,2.921,610,2.921,795,3.997,874,2.921,876,2.921,877,2.921,878,2.921,902,3.596,1155,2.921,1156,5.347,1157,4.699,1158,3.446,1159,3.446,1160,3.446,1161,4.699,1162,3.446,1163,3.446,1164,3.446]],["title/guards/SpotifyTokenGuard.html",[275,2.279,1049,2.279]],["body/guards/SpotifyTokenGuard.html",[3,0.216,4,0.18,9,0.18,11,1.109,17,2.132,22,0.541,30,0.995,47,0.687,49,0.912,50,0.025,51,0.74,52,0.588,53,0.912,56,0.795,73,1.854,77,0.503,78,0.328,83,1.43,85,0.216,86,0.18,184,0.015,185,0.019,186,0.015,256,2.171,277,2.968,282,2.875,286,4.724,288,3.395,289,1.68,290,1.986,302,1.854,344,2.875,492,2.485,533,2.297,739,3.742,869,3.299,1049,3.716,1052,5.516,1165,4.683,1166,3.742,1167,4.413,1168,5.112,1169,5.358,1170,4.413,1171,4.683,1172,6.03,1173,4.413,1174,4.413,1175,4.413]],["title/interfaces/Todo.html",[110,0.528,787,2.076]],["body/interfaces/Todo.html",[3,0.211,4,0.177,9,0.177,22,0.531,23,1.66,29,2.596,50,0.025,52,0.862,65,2.082,85,0.211,110,1.08,115,1.317,184,0.015,185,0.019,186,0.015,334,2.637,342,2.888,344,3.111,407,2.775,465,1.594,627,3.237,787,3.345,789,3.237,822,2.972,1176,3.671,1177,4.33,1178,4.33,1179,4.692,1180,4.222,1181,4.627,1182,5.458,1183,5.458,1184,5.458,1185,5.458]],["title/guards/TodoDataResolverService.html",[275,2.279,1186,2.279]],["body/guards/TodoDataResolverService.html",[3,0.161,4,0.134,9,0.134,11,0.826,17,1.588,22,0.403,29,1.292,30,0.819,37,0.634,44,2.953,45,2.212,47,0.708,49,0.939,50,0.025,51,0.762,52,0.606,53,0.939,56,0.592,69,1.85,77,0.51,78,0.245,81,2.014,83,1.065,85,0.161,86,0.134,87,0.725,88,0.999,110,1.066,111,1.143,128,2.787,184,0.011,185,0.016,186,0.011,256,1.292,272,4.112,277,2.211,280,3.786,282,1.71,285,3.856,286,4.208,289,1.383,292,2.211,302,2.365,303,1.57,350,1.588,357,3.734,407,1.381,465,1.675,466,4.296,493,1.85,498,3.4,532,2.457,533,1.71,556,2.197,577,3.449,631,3.856,672,3.059,678,3.856,822,1.479,949,3.856,978,3.856,1168,4.422,1169,4.772,1171,3.856,1179,2.457,1180,2.211,1186,3.059,1187,4.422,1188,2.786,1189,4.548,1190,3.856,1191,4.548,1192,4.772,1193,4.772,1194,4.548,1195,4.548,1196,4.548,1197,4.548,1198,2.786,1199,2.929,1200,3.287,1201,3.899,1202,3.287,1203,2.457,1204,2.211,1205,2.211,1206,3.287,1207,4.548,1208,3.287,1209,3.287,1210,3.287,1211,3.287,1212,3.287,1213,3.287,1214,3.287]],["title/components/TodoEditComponent.html",[0,0.252,179,0.852]],["body/components/TodoEditComponent.html",[0,0.317,1,0.619,2,1.07,3,0.113,4,0.094,5,0.748,6,0.748,7,0.748,8,0.748,9,0.094,11,0.884,13,1.381,14,0.748,15,2.103,16,1.853,18,1.14,20,1.14,22,0.283,23,1.07,29,2.276,30,0.634,32,1.544,37,0.446,46,3.78,47,0.958,49,0.984,50,0.025,51,0.906,52,0.841,53,0.984,56,0.924,57,1.358,65,1.643,66,1.873,67,1.755,69,1.981,73,0.97,77,0.451,78,0.172,83,0.748,85,0.113,86,0.094,87,0.51,88,1.296,110,1.003,111,0.884,115,1.449,121,0.748,122,1.198,148,0.581,149,1.14,150,0.748,151,1.544,152,0.748,153,0.748,154,0.619,155,0.943,156,0.748,157,0.619,158,0.748,159,0.581,160,0.748,161,0.619,162,0.748,163,0.581,164,0.748,165,0.581,166,0.748,167,0.581,168,0.748,169,0.748,170,0.581,171,0.748,172,0.619,173,0.748,174,0.619,175,0.748,176,0.581,177,0.581,178,0.748,179,1.198,180,0.748,181,0.581,182,0.748,183,0.748,184,0.008,185,0.012,186,0.008,210,1.116,211,1.039,243,1.3,282,2.218,283,2.921,303,2.154,351,2.432,357,1.3,407,2.002,465,1.295,493,1.3,556,1.7,621,3.186,625,4.04,632,3.45,672,3.206,700,3.186,733,1.727,808,3.261,822,2.144,823,1.415,824,3.635,1060,5.031,1088,3.613,1090,2.983,1147,4.04,1179,2.63,1180,2.367,1198,1.958,1199,2.48,1201,2.63,1204,1.554,1205,1.554,1215,5.291,1216,4.197,1217,1.958,1218,4.262,1219,3.519,1220,5.129,1221,4.262,1222,4.262,1223,4.262,1224,3.519,1225,4.766,1226,3.519,1227,3.519,1228,2.31,1229,3.519,1230,2.31,1231,2.31,1232,2.31,1233,3.519,1234,2.31,1235,4.766,1236,3.519,1237,2.31,1238,2.31,1239,2.31,1240,2.31,1241,2.31,1242,4.766,1243,2.31,1244,2.31,1245,2.31,1246,2.31,1247,2.31,1248,2.31,1249,2.31,1250,2.31,1251,2.31,1252,2.31,1253,2.31,1254,2.31,1255,2.31,1256,2.31,1257,2.31,1258,3.519,1259,2.63,1260,2.31,1261,3.519,1262,1.958,1263,2.31,1264,3.519]],["title/components/TodoListComponent.html",[0,0.252,181,0.852]],["body/components/TodoListComponent.html",[0,0.291,1,0.54,2,0.962,3,0.098,4,0.082,5,0.652,6,0.652,7,0.652,8,0.652,9,0.082,11,0.795,13,1.266,14,0.652,15,2.05,16,1.806,18,1.025,20,1.025,22,0.247,23,0.962,29,2.464,30,0.57,32,1.435,37,0.389,47,0.925,49,0.807,50,0.025,51,0.807,52,0.759,53,0.807,56,0.867,57,1.285,65,1.347,66,1.741,67,1.631,69,2.201,73,0.846,77,0.426,78,0.15,85,0.098,86,0.082,87,0.445,88,0.962,96,2.629,110,1.046,111,1.559,112,3.599,115,0.962,118,2.366,121,0.652,122,1.113,137,1.707,148,0.506,149,1.025,150,0.652,151,1.435,152,0.652,153,0.652,154,0.54,155,0.848,156,0.652,157,0.54,158,0.652,159,0.506,160,0.652,161,0.54,162,0.652,163,0.506,164,0.652,165,0.506,166,0.652,167,0.506,168,0.652,169,0.652,170,0.506,171,0.652,172,0.54,173,0.652,174,0.54,175,0.652,176,0.506,177,0.506,178,0.652,179,0.506,180,0.652,181,1.113,182,0.652,183,0.652,184,0.007,185,0.011,186,0.007,210,0.973,211,0.906,245,1.355,246,1.355,272,3.725,290,0.906,303,1.092,324,3.314,334,2.14,350,2.326,351,1.424,362,1.505,363,3.314,364,2.683,368,3.314,372,2.715,381,1.355,382,1.707,407,2.023,411,2.366,465,1.439,466,2.129,511,2.683,556,2.14,616,2.683,626,2.683,632,2.129,633,3.312,634,1.505,635,2.129,645,3.312,665,3.312,677,1.707,682,3.312,697,2.683,709,2.366,710,2.715,722,4.257,748,2.922,754,3.312,755,3.312,772,1.505,808,1.134,811,2.683,822,2.3,823,1.234,824,2.629,829,2.683,832,2.129,870,2.683,953,2.683,956,2.366,958,3.599,971,1.505,1190,2.683,1199,2.305,1201,3.312,1203,1.505,1204,1.355,1205,1.355,1259,1.505,1265,5.121,1266,4.063,1267,3.909,1268,4.082,1269,3.314,1270,2.683,1271,3.165,1272,2.014,1273,4.43,1274,3.165,1275,3.165,1276,3.165,1277,3.165,1278,2.683,1279,2.014,1280,3.165,1281,2.014,1282,3.165,1283,3.165,1284,3.165,1285,2.014,1286,3.165,1287,3.165,1288,2.014,1289,2.014,1290,2.683,1291,4.815,1292,3.165,1293,3.165,1294,2.014,1295,2.014,1296,2.014,1297,3.165,1298,3.165,1299,2.014,1300,2.014,1301,2.014,1302,2.014,1303,2.014,1304,2.014,1305,3.165,1306,1.707,1307,2.014,1308,2.014,1309,2.014,1310,2.014,1311,2.014,1312,1.707,1313,2.014,1314,3.165,1315,3.165,1316,3.165,1317,2.683,1318,4.43,1319,2.014,1320,1.707,1321,2.014,1322,2.014]],["title/modules/TodoListModule.html",[187,1.17,203,2.279]],["body/modules/TodoListModule.html",[3,0.194,4,0.162,9,0.162,50,0.025,77,0.571,78,0.296,85,0.194,86,0.162,110,0.619,148,1,179,1.624,181,1.624,184,0.014,185,0.018,186,0.014,187,1.374,189,1.465,190,2.24,191,3.52,192,2.676,193,3.52,194,1.79,201,3.362,203,4.68,204,3.478,205,2.676,206,2.24,208,2.326,212,2.326,233,3.865,234,2.974,237,3.865,238,2.974,239,3.865,240,2.974,250,2.676,446,2.974,783,4.383,784,3.373,894,4.383,895,3.373,896,3.373,1199,3.362,1204,2.676,1205,2.676,1216,2.676,1266,2.676,1323,3.979,1324,3.979,1325,3.979,1326,3.979,1327,4.346,1328,3.373,1329,3.979,1330,3.373,1331,3.373,1332,3.373,1333,3.979]],["title/modules/TodoListRoutingModule.html",[187,1.17,1327,2.279]],["body/modules/TodoListRoutingModule.html",[0,0.453,3,0.221,4,0.184,9,0.184,50,0.025,77,0.547,78,0.336,83,1.464,85,0.221,86,0.184,110,0.873,179,1.532,181,1.409,184,0.016,185,0.02,186,0.016,189,1.664,194,2.034,208,2.034,212,2.523,254,3.172,255,3.436,256,1.776,257,4.1,280,3.771,357,2.545,446,3.379,462,3.379,711,3.832,1186,4.1,1192,3.832,1193,3.832,1216,3.04,1266,3.04,1327,3.771,1328,3.832,1330,3.832,1331,3.832,1332,3.832,1334,4.52,1335,4.52,1336,4.52]],["title/injectables/TodoListService.html",[289,1.03,1199,1.763]],["body/injectables/TodoListService.html",[3,0.13,4,0.108,9,0.108,17,1.281,22,0.325,23,1.186,30,0.703,37,0.512,44,1.885,45,2.007,47,1.02,49,1.247,50,0.025,51,1.012,52,0.872,53,1.247,56,1.128,57,1.368,65,1.932,66,1.819,67,1.704,77,0.454,78,0.197,81,1.625,85,0.13,86,0.108,87,0.585,88,0.806,110,0.976,111,0.981,184,0.009,185,0.014,186,0.009,245,1.784,246,1.784,256,1.042,289,1.186,290,1.193,302,2.391,303,1.347,334,1.885,338,3.114,350,2.749,351,2.297,379,2.917,463,1.493,465,0.976,486,1.625,493,1.493,509,4.328,533,1.38,535,2.625,556,1.281,562,1.982,657,3.308,665,3.816,670,2.248,682,1.982,709,2.917,710,2.391,722,3.816,754,4.067,755,3.816,772,1.982,808,2.607,822,1.756,823,1.625,824,2.625,956,2.917,971,1.982,1180,1.784,1199,2.031,1203,1.982,1259,1.982,1262,2.248,1268,3.925,1269,3.925,1270,3.308,1278,3.308,1290,3.308,1306,3.308,1312,2.248,1317,2.248,1337,5.594,1338,2.248,1339,3.902,1340,3.902,1341,5.106,1342,5.106,1343,3.902,1344,3.902,1345,3.902,1346,3.902,1347,3.902,1348,2.652,1349,2.652,1350,3.902,1351,2.652,1352,3.902,1353,3.902,1354,2.652,1355,3.902,1356,2.652,1357,2.652,1358,3.902,1359,2.652,1360,3.902,1361,2.652,1362,3.902,1363,2.652,1364,2.652,1365,5.106,1366,2.652,1367,2.652,1368,2.652,1369,2.652,1370,3.902,1371,2.652,1372,2.652,1373,2.652,1374,2.652,1375,2.652,1376,2.652,1377,2.652,1378,2.652,1379,2.652,1380,2.652,1381,2.652,1382,3.902,1383,2.652,1384,2.652,1385,2.652]],["title/coverage.html",[1386,3.938]],["body/coverage.html",[0,0.511,1,0.963,9,0.147,10,3.049,41,1.737,43,1.872,45,1.413,50,0.025,52,0.479,86,0.197,110,0.56,128,4.208,154,0.963,155,1.296,157,0.963,159,0.904,161,0.963,163,0.904,165,0.904,167,0.904,170,0.904,172,0.963,174,0.963,176,0.904,177,1.216,179,0.904,181,0.904,184,0.013,185,0.017,186,0.013,225,2.419,259,3.049,260,2.688,261,3.049,275,3.676,276,2.419,278,3.049,279,3.049,289,1.854,294,1.872,296,2.025,298,2.025,303,1.242,315,3.049,321,3.049,332,3.615,333,3.615,357,2.025,360,3.049,361,2.688,362,3.615,381,2.419,411,2.688,448,2.419,464,3.049,601,3.049,614,3.049,615,3.049,653,3.049,746,3.049,747,3.049,787,2.964,788,2.204,790,3.049,795,3.615,796,2.419,797,3.049,841,3.049,842,2.419,844,3.049,902,2.419,905,2.688,907,2.688,913,3.615,914,3.049,929,2.419,1006,3.049,1007,3.049,1049,2.419,1056,3.049,1120,3.049,1155,3.049,1165,3.049,1166,3.049,1176,3.049,1186,2.419,1187,3.049,1188,3.049,1199,1.872,1215,3.049,1216,2.419,1217,3.049,1265,3.049,1266,2.419,1320,3.049,1337,3.049,1338,3.049,1386,3.049,1387,3.596,1388,3.596,1389,3.596,1390,5.465,1391,3.596,1392,3.596,1393,3.596,1394,4.837,1395,3.596,1396,3.596,1397,6.281,1398,4.837,1399,3.596,1400,3.596,1401,3.596,1402,3.049,1403,3.596,1404,3.596,1405,3.596,1406,3.596,1407,3.596,1408,3.596,1409,3.596,1410,3.596,1411,3.596,1412,3.596,1413,3.596,1414,4.837,1415,3.596,1416,3.596,1417,3.596,1418,3.596]],["title/dependencies.html",[190,2.297,1419,2.819]],["body/dependencies.html",[50,0.025,78,0.365,83,1.59,184,0.017,185,0.021,186,0.017,190,2.763,210,2.848,211,2.653,243,2.763,290,2.208,389,4.161,530,4.161,531,4.161,590,4.161,782,3.668,1420,6.945,1421,4.908,1422,5.896,1423,4.908,1424,4.908,1425,4.908,1426,4.908,1427,4.908,1428,4.908,1429,4.908,1430,4.908,1431,4.908,1432,4.908,1433,4.908]],["title/index.html",[22,0.346,1434,2.819,1435,2.819]],["body/index.html",[4,0.195,16,1.368,50,0.02,75,3.583,184,0.017,185,0.02,186,0.017,206,2.699,562,3.583,577,2.937,647,4.064,672,3.91,832,4.375,935,4.064,1146,4.064,1181,4.064,1436,4.793,1437,4.793,1438,6.256,1439,6.256,1440,4.793,1441,4.793,1442,6.256,1443,4.793,1444,4.793,1445,4.793,1446,4.793,1447,4.793,1448,4.793,1449,4.793,1450,5.813,1451,5.813,1452,6.504,1453,4.793,1454,5.813,1455,5.813,1456,4.793,1457,6.504,1458,4.793,1459,4.793,1460,4.793,1461,6.256,1462,4.793]],["title/modules.html",[189,1.71]],["body/modules.html",[50,0.021,184,0.018,185,0.021,186,0.018,188,3.758,189,1.851,199,3.382,200,3.382,201,2.616,202,3.382,203,3.382,211,2.974,440,3.382,629,5.603,888,3.382,1327,3.382,1463,6.609,1464,7.017,1465,6.75,1466,6.75]],["title/overview.html",[1467,3.938]],["body/overview.html",[2,1.632,50,0.022,184,0.019,185,0.022,186,0.019,189,1.976,254,2.794,277,3.611,331,4.013,463,3.022,535,4.181,789,4.013,1098,4.551,1402,4.551,1467,4.551,1468,5.368,1469,5.368,1470,5.368]],["title/routes.html",[254,2.417]],["body/routes.html",[50,0.022,184,0.019,185,0.022,186,0.019,254,2.899]]],"invertedIndex":[["",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["0/10",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["0].value",{"_index":572,"title":{},"body":{"injectables/GmailService.html":{}}}],["1",{"_index":379,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["1.0.1",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["10.1.1",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["1000)).tostring",{"_index":878,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["10000",{"_index":773,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["11",{"_index":1470,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1402,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["15",{"_index":1320,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["18",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["1].url",{"_index":1045,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["2",{"_index":535,"title":{},"body":{"injectables/GmailService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["2.0.0",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["2/15",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":961,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["200",{"_index":1038,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["2000",{"_index":1312,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["3",{"_index":1098,"title":{},"body":{"components/SpotifySearchComponent.html":{},"overview.html":{}}}],["3/16",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":974,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["33",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":877,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["37",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1469,"title":{},"body":{"overview.html":{}}}],["5/15",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":381,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["500",{"_index":976,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["5000",{"_index":774,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["500ms",{"_index":937,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["599px",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["6.5.4",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1468,"title":{},"body":{"overview.html":{}}}],["9.1.9",{"_index":1440,"title":{},"body":{"index.html":{}}}],["9/12",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1118,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["90vh",{"_index":428,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["__v",{"_index":1179,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["_id",{"_index":1180,"title":{},"body":{"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{}}}],["_snackbar",{"_index":1273,"title":{},"body":{"components/TodoListComponent.html":{}}}],["absolute",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["access",{"_index":717,"title":{},"body":{"injectables/HttpService.html":{}}}],["accessors",{"_index":484,"title":{},"body":{"injectables/GmailService.html":{}}}],["actions",{"_index":469,"title":{},"body":{"injectables/GmailService.html":{},"components/HomePageComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["activatedroute",{"_index":283,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailStoreTokenComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":286,"title":{},"body":{"guards/GetEmailResolver.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["actual_component",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["add",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/GmailService.html":{},"components/TodoListComponent.html":{}}}],["added",{"_index":1263,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["addlabelids",{"_index":600,"title":{},"body":{"injectables/GmailService.html":{}}}],["addnewtodo",{"_index":654,"title":{},"body":{"injectables/HttpService.html":{}}}],["addnewtodo(newtododata",{"_index":668,"title":{},"body":{"injectables/HttpService.html":{}}}],["addtodo",{"_index":1339,"title":{},"body":{"injectables/TodoListService.html":{}}}],["addtodo(newtododata",{"_index":1347,"title":{},"body":{"injectables/TodoListService.html":{}}}],["afterviewinit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["album",{"_index":638,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["album's",{"_index":793,"title":{},"body":{"interfaces/Song.html":{}}}],["albums",{"_index":1089,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["alert('nav",{"_index":1163,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["align",{"_index":432,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["allow",{"_index":719,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular",{"_index":1438,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":389,"title":{},"body":{"components/GmailEmailListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["angular/compiler",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":891,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["angular/material/button",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["angular/material/card",{"_index":893,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["angular/material/checkbox",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{},"modules/TodoListModule.html":{}}}],["angular/material/expansion",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":895,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["angular/material/icon",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{}}}],["angular/material/input",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["angular/material/paginator",{"_index":453,"title":{},"body":{"modules/GmailModule.html":{}}}],["angular/material/progress",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{}}}],["angular/material/sidenav",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":898,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["angular/material/snack",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/ReadEmailComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["angular/material/table",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TodoListModule.html":{}}}],["angular/material/toolbar",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/GetEmailResolver.html":{},"modules/GmailRoutingModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"modules/TodoListRoutingModule.html":{},"dependencies.html":{}}}],["animate",{"_index":385,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["animate(250",{"_index":396,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["animations",{"_index":390,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["another",{"_index":497,"title":{},"body":{"injectables/GmailService.html":{},"components/SpotifyPlayerComponent.html":{}}}],["api",{"_index":588,"title":{},"body":{"injectables/GmailService.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{}}}],["apiwith",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["app.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["appmodule",{"_index":188,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["approutingmodule",{"_index":199,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}}}],["around",{"_index":431,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["array",{"_index":350,"title":{},"body":{"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["artist",{"_index":637,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["artists",{"_index":1092,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["asynchronity",{"_index":939,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["atob",{"_index":593,"title":{},"body":{"injectables/GmailService.html":{}}}],["auth",{"_index":694,"title":{},"body":{"injectables/HttpService.html":{}}}],["authorization",{"_index":737,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["autocomplete",{"_index":1086,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["automatically",{"_index":1447,"title":{},"body":{"index.html":{}}}],["available",{"_index":1466,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/ReadEmailComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["base64",{"_index":590,"title":{},"body":{"injectables/GmailService.html":{},"dependencies.html":{}}}],["bc",{"_index":938,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["bearer",{"_index":738,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["between",{"_index":837,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["black",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":355,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{}}}],["boolean",{"_index":344,"title":{},"body":{"classes/GmailCustomEmail.html":{},"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{}}}],["bootstrap",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["bottom",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom:0",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["bpobserver",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpointobserver",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1464,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["cachedmessages",{"_index":470,"title":{},"body":{"injectables/GmailService.html":{}}}],["call",{"_index":498,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["callback",{"_index":954,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["calls",{"_index":549,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyPlayerComponent.html":{}}}],["canactivate",{"_index":1052,"title":{},"body":{"modules/SpotifyRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{}}}],["canactivate(route",{"_index":1167,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["cases",{"_index":1384,"title":{},"body":{"injectables/TodoListService.html":{}}}],["center",{"_index":839,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["change",{"_index":1146,"title":{},"body":{"injectables/SpotifyService.html":{},"index.html":{}}}],["check",{"_index":577,"title":{},"body":{"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"index.html":{}}}],["checkboxes",{"_index":1117,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["checkgmailstatus",{"_index":475,"title":{},"body":{"injectables/GmailService.html":{}}}],["checks",{"_index":845,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["checkspotifystatus",{"_index":655,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["class",{"_index":86,"title":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["classes",{"_index":331,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"overview.html":{}}}],["cleanup",{"_index":1283,"title":{},"body":{"components/TodoListComponent.html":{}}}],["cleartimeout(this.timeoutmarkemailasreadid",{"_index":775,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["cli",{"_index":1439,"title":{},"body":{"index.html":{}}}],["click",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["clickable",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["clientid",{"_index":674,"title":{},"body":{"injectables/HttpService.html":{}}}],["clientsecret",{"_index":675,"title":{},"body":{"injectables/HttpService.html":{}}}],["cluster_appmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_declarations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_imports",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_gmailmodule",{"_index":437,"title":{},"body":{"modules/GmailModule.html":{}}}],["cluster_gmailmodule_declarations",{"_index":438,"title":{},"body":{"modules/GmailModule.html":{}}}],["cluster_gmailmodule_imports",{"_index":439,"title":{},"body":{"modules/GmailModule.html":{}}}],["cluster_spotifymodule",{"_index":883,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["cluster_spotifymodule_declarations",{"_index":884,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["cluster_spotifymodule_exports",{"_index":886,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["cluster_spotifymodule_imports",{"_index":885,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["cluster_spotifymodule_providers",{"_index":887,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["cluster_todolistmodule",{"_index":1323,"title":{},"body":{"modules/TodoListModule.html":{}}}],["cluster_todolistmodule_declarations",{"_index":1324,"title":{},"body":{"modules/TodoListModule.html":{}}}],["cluster_todolistmodule_imports",{"_index":1325,"title":{},"body":{"modules/TodoListModule.html":{}}}],["cluster_todolistmodule_providers",{"_index":1326,"title":{},"body":{"modules/TodoListModule.html":{}}}],["col",{"_index":1318,"title":{},"body":{"components/TodoListComponent.html":{}}}],["color",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":999,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["columns",{"_index":1293,"title":{},"body":{"components/TodoListComponent.html":{}}}],["come",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["commonmodule",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{},"modules/SpotifyModule.html":{}}}],["complete",{"_index":553,"title":{},"body":{"injectables/GmailService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailRoutingModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["components/email",{"_index":450,"title":{},"body":{"modules/GmailModule.html":{}}}],["components/gmail",{"_index":445,"title":{},"body":{"modules/GmailModule.html":{}}}],["components/gmailstoretoken/gmailstoretoken.component",{"_index":444,"title":{},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{}}}],["components/spotify",{"_index":904,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["components/todo",{"_index":1330,"title":{},"body":{"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["componenttitle",{"_index":1220,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["confirm",{"_index":1264,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["console",{"_index":1299,"title":{},"body":{"components/TodoListComponent.html":{}}}],["console.log(filteredemail",{"_index":313,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["console.log(tokendecoded",{"_index":1175,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["const",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/GetEmailResolver.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(bpobserver",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(gmailservice",{"_index":281,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{}}}],["constructor(http",{"_index":486,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["constructor(httpsvc",{"_index":851,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["constructor(route",{"_index":605,"title":{},"body":{"components/GmailStoreTokenComponent.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["constructor(spotifyservice",{"_index":1068,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["constructor(spotifysvc",{"_index":927,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["constructor(titleservice",{"_index":1272,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(titlesvc",{"_index":619,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["constructor(todosvc",{"_index":1198,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["contain",{"_index":273,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["container",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{}}}],["container'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["container.component",{"_index":451,"title":{},"body":{"modules/GmailModule.html":{}}}],["container.component.css",{"_index":264,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["container.component.html",{"_index":265,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["container.component.ts",{"_index":261,"title":{},"body":{"components/EmailContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":268,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["container.component.ts:14",{"_index":269,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["container/email",{"_index":260,"title":{},"body":{"components/EmailContainerComponent.html":{},"modules/GmailModule.html":{},"coverage.html":{}}}],["containing",{"_index":511,"title":{},"body":{"injectables/GmailService.html":{},"components/TodoListComponent.html":{}}}],["contains",{"_index":625,"title":{},"body":{"components/HomePageComponent.html":{},"components/TodoEditComponent.html":{}}}],["containsemailwithid",{"_index":476,"title":{},"body":{"injectables/GmailService.html":{}}}],["containsemailwithid(emailid",{"_index":489,"title":{},"body":{"injectables/GmailService.html":{}}}],["content",{"_index":407,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["context",{"_index":1195,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["context_uri",{"_index":1149,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["control",{"_index":718,"title":{},"body":{"injectables/HttpService.html":{}}}],["controls",{"_index":645,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{}}}],["coverage",{"_index":1386,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":631,"title":{},"body":{"components/HomePageComponent.html":{},"guards/TodoDataResolverService.html":{}}}],["currelement",{"_index":1059,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["current",{"_index":710,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["currheader.name",{"_index":571,"title":{},"body":{"injectables/GmailService.html":{}}}],["currid",{"_index":1221,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currpageindex",{"_index":365,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["currpagesize",{"_index":366,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["currpart.mimetype",{"_index":583,"title":{},"body":{"injectables/GmailService.html":{}}}],["currplayerstatus",{"_index":917,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["currtodo",{"_index":1222,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["currtodo._id",{"_index":1214,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["cursor",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor:pointer",{"_index":423,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["custom",{"_index":296,"title":{},"body":{"guards/GetEmailResolver.html":{},"classes/GmailCustomEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["dashboard",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["data",{"_index":357,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/GmailService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["data.emailcontent",{"_index":762,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["data.find((currtodo",{"_index":1213,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["data.resolver",{"_index":456,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["data.resolver.ts",{"_index":279,"title":{},"body":{"guards/GetEmailResolver.html":{},"coverage.html":{}}}],["data.resolver.ts:11",{"_index":284,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["data.resolver.ts:14",{"_index":287,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["data.todo",{"_index":1253,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["data.todo._id",{"_index":1251,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["date().gettime",{"_index":539,"title":{},"body":{"injectables/GmailService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["db",{"_index":628,"title":{},"body":{"components/HomePageComponent.html":{}}}],["declarations",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["decoding",{"_index":591,"title":{},"body":{"injectables/GmailService.html":{}}}],["deep",{"_index":833,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["default",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["define",{"_index":1275,"title":{},"body":{"components/TodoListComponent.html":{}}}],["defined",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["defines",{"_index":953,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{}}}],["delete",{"_index":633,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["deleted",{"_index":1383,"title":{},"body":{"injectables/TodoListService.html":{}}}],["deletes",{"_index":1280,"title":{},"body":{"components/TodoListComponent.html":{}}}],["deletetodo",{"_index":1270,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodo(idtodo",{"_index":1278,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["deletetodoelement",{"_index":656,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletetodoelement(idtodo",{"_index":680,"title":{},"body":{"injectables/HttpService.html":{}}}],["dependencies",{"_index":190,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{},"dependencies.html":{}}}],["depending",{"_index":1147,"title":{},"body":{"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{}}}],["description",{"_index":465,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["destroy",{"_index":1282,"title":{},"body":{"components/TodoListComponent.html":{}}}],["dev",{"_index":1444,"title":{},"body":{"index.html":{}}}],["development",{"_index":1441,"title":{},"body":{"index.html":{}}}],["device",{"_index":1019,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["direction",{"_index":998,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["direction:column",{"_index":1005,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["direction:row",{"_index":996,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["directives",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["display",{"_index":435,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["display:block",{"_index":410,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["display:flex",{"_index":425,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["displayed",{"_index":956,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displayedcolumns",{"_index":368,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{}}}],["displayname",{"_index":1063,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["displayname(element",{"_index":1070,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["displays",{"_index":1290,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["displaysnackbar",{"_index":1340,"title":{},"body":{"injectables/TodoListService.html":{}}}],["displaysnackbar(message",{"_index":1350,"title":{},"body":{"injectables/TodoListService.html":{}}}],["documentation",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["domsanitizer",{"_index":753,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["don't",{"_index":826,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["don\\'t",{"_index":840,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["dummy",{"_index":1365,"title":{},"body":{"injectables/TodoListService.html":{}}}],["duration",{"_index":772,"title":{},"body":{"components/ReadEmailComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["dynamic",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1458,"title":{},"body":{"index.html":{}}}],["each",{"_index":546,"title":{},"body":{"injectables/GmailService.html":{}}}],["edit",{"_index":632,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["edit.component",{"_index":1331,"title":{},"body":{"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["edit.component.css",{"_index":1218,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.html",{"_index":1219,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts",{"_index":1217,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:15",{"_index":1238,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:16",{"_index":1239,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:17",{"_index":1241,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:18",{"_index":1240,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:21",{"_index":1243,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:27",{"_index":1228,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:33",{"_index":1231,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:38",{"_index":1230,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:50",{"_index":1232,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:63",{"_index":1237,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit.component.ts:75",{"_index":1234,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edit/todo",{"_index":1216,"title":{},"body":{"components/TodoEditComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["edited",{"_index":1260,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["editmode",{"_index":1223,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["edittodo",{"_index":657,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["edittodo(idtodo",{"_index":683,"title":{},"body":{"injectables/HttpService.html":{}}}],["edittodo(newtodo",{"_index":1353,"title":{},"body":{"injectables/TodoListService.html":{}}}],["elem._id",{"_index":1372,"title":{},"body":{"injectables/TodoListService.html":{}}}],["element",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["element.name",{"_index":1108,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["email",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["email'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["email.component",{"_index":449,"title":{},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{}}}],["email.component.css",{"_index":749,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.component.html",{"_index":750,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.component.ts",{"_index":747,"title":{},"body":{"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:15",{"_index":759,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.component.ts:17",{"_index":756,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.component.ts:20",{"_index":758,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.component.ts:39",{"_index":757,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["email.from",{"_index":405,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["email.interface",{"_index":297,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{}}}],["email.interface.ts",{"_index":333,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"coverage.html":{}}}],["email.interface.ts:2",{"_index":341,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{}}}],["email.interface.ts:25",{"_index":352,"title":{},"body":{"classes/GmailEmail.html":{}}}],["email.interface.ts:3",{"_index":346,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{}}}],["email.interface.ts:4",{"_index":345,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{}}}],["email.interface.ts:5",{"_index":339,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{}}}],["email.interface.ts:6",{"_index":343,"title":{},"body":{"classes/GmailCustomEmail.html":{}}}],["email.interface.ts:7",{"_index":347,"title":{},"body":{"classes/GmailCustomEmail.html":{}}}],["email.interface.ts:8",{"_index":340,"title":{},"body":{"classes/GmailCustomEmail.html":{}}}],["email.snippet",{"_index":408,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["email/:emailid",{"_index":459,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["email/read",{"_index":448,"title":{},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["email_container",{"_index":778,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["emailcontainercomponent",{"_index":154,"title":{"components/EmailContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["emailcontent",{"_index":314,"title":{},"body":{"guards/GetEmailResolver.html":{},"modules/GmailRoutingModule.html":{},"components/ReadEmailComponent.html":{}}}],["emailcontent.from",{"_index":777,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["emailcontent.subject",{"_index":776,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["emailid",{"_index":300,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{}}}],["emailinfo",{"_index":503,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.id",{"_index":566,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.internaldate",{"_index":567,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.labelids.includes('unread",{"_index":568,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.payload.body.data",{"_index":575,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.payload.headers.filter((currheader",{"_index":570,"title":{},"body":{"injectables/GmailService.html":{}}}],["emailinfo.payload.parts.filter((currpart",{"_index":582,"title":{},"body":{"injectables/GmailService.html":{}}}],["emaillist",{"_index":369,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["emit",{"_index":526,"title":{},"body":{"injectables/GmailService.html":{}}}],["empty",{"_index":1196,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["encapsulation",{"_index":262,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["end",{"_index":1457,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":934,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["enlever",{"_index":1301,"title":{},"body":{"components/TodoListComponent.html":{}}}],["entering",{"_index":1191,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["environment",{"_index":714,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["environments/environment",{"_index":715,"title":{},"body":{"injectables/HttpService.html":{}}}],["error",{"_index":677,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["etc",{"_index":873,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["evenly",{"_index":1119,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["event",{"_index":376,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["example",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":1454,"title":{},"body":{"index.html":{}}}],["expdate",{"_index":1126,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{}}}],["exports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["false",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["features",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{}}}],["fetch",{"_index":949,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"guards/TodoDataResolverService.html":{}}}],["fetchautocomplete",{"_index":1123,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetchautocomplete(query",{"_index":1127,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["fetchemaillist",{"_index":477,"title":{},"body":{"injectables/GmailService.html":{}}}],["fetchemaillist(limit",{"_index":491,"title":{},"body":{"injectables/GmailService.html":{}}}],["fetches",{"_index":697,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["fetchtodolist",{"_index":1341,"title":{},"body":{"injectables/TodoListService.html":{}}}],["fetchtodosandthemes",{"_index":1342,"title":{},"body":{"injectables/TodoListService.html":{}}}],["field",{"_index":896,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["files",{"_index":1449,"title":{},"body":{"index.html":{}}}],["filter",{"_index":291,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["filteredemail",{"_index":309,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{}}}],["filteredparts",{"_index":581,"title":{},"body":{"injectables/GmailService.html":{}}}],["filteredparts[0].body.data",{"_index":586,"title":{},"body":{"injectables/GmailService.html":{}}}],["filteremailinfo",{"_index":478,"title":{},"body":{"injectables/GmailService.html":{}}}],["filteremailinfo(emailinfo",{"_index":501,"title":{},"body":{"injectables/GmailService.html":{}}}],["filterparams",{"_index":1128,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["find",{"_index":969,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["finished",{"_index":550,"title":{},"body":{"injectables/GmailService.html":{}}}],["first",{"_index":540,"title":{},"body":{"injectables/GmailService.html":{}}}],["flex",{"_index":995,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["font",{"_index":420,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["forkjoin",{"_index":528,"title":{},"body":{"injectables/GmailService.html":{}}}],["forkjoin(messagestofetch).subscribe",{"_index":552,"title":{},"body":{"injectables/GmailService.html":{}}}],["form",{"_index":700,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{}}}],["form).subscribe",{"_index":1153,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["form.context_uri",{"_index":1152,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["form.uris",{"_index":1151,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["formatted",{"_index":1178,"title":{},"body":{"interfaces/Todo.html":{}}}],["formcontrol",{"_index":1060,"title":{},"body":{"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{}}}],["formcontrol(false",{"_index":1090,"title":{},"body":{"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{}}}],["formcontrol(true",{"_index":1093,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["formgroup",{"_index":1088,"title":{},"body":{"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{}}}],["formgroupoptions",{"_index":1061,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["formsmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{}}}],["found",{"_index":1317,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["full",{"_index":830,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["function",{"_index":1284,"title":{},"body":{"components/TodoListComponent.html":{}}}],["further",{"_index":1460,"title":{},"body":{"index.html":{}}}],["g",{"_index":595,"title":{},"body":{"injectables/GmailService.html":{}}}],["generated",{"_index":1437,"title":{},"body":{"index.html":{}}}],["getavailabledevices",{"_index":919,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["getcachedemail",{"_index":479,"title":{},"body":{"injectables/GmailService.html":{}}}],["getcachedemail(emailid",{"_index":504,"title":{},"body":{"injectables/GmailService.html":{}}}],["getemaillist",{"_index":658,"title":{},"body":{"injectables/HttpService.html":{}}}],["getemaillist(limit",{"_index":687,"title":{},"body":{"injectables/HttpService.html":{}}}],["getemailresolver",{"_index":276,"title":{"guards/GetEmailResolver.html":{}},"body":{"guards/GetEmailResolver.html":{},"modules/GmailRoutingModule.html":{},"coverage.html":{}}}],["getgmailauthurl",{"_index":659,"title":{},"body":{"injectables/HttpService.html":{}}}],["getindividualemailinfo",{"_index":660,"title":{},"body":{"injectables/HttpService.html":{}}}],["getindividualemailinfo(emailid",{"_index":690,"title":{},"body":{"injectables/HttpService.html":{}}}],["getinfoonplayback",{"_index":1008,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["getpagetoken",{"_index":524,"title":{},"body":{"injectables/GmailService.html":{}}}],["getplaybackinfo",{"_index":920,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["gets",{"_index":936,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["getspotifyauthurl",{"_index":661,"title":{},"body":{"injectables/HttpService.html":{}}}],["getting",{"_index":1434,"title":{"index.html":{}},"body":{}}],["gettodo",{"_index":1343,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":1358,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodolist",{"_index":662,"title":{},"body":{"injectables/HttpService.html":{}}}],["github",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/GithubComponent.html":{}}}],["github'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["github.component.css",{"_index":316,"title":{},"body":{"components/GithubComponent.html":{}}}],["github.component.html",{"_index":317,"title":{},"body":{"components/GithubComponent.html":{}}}],["githubcomponent",{"_index":157,"title":{"components/GithubComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["gmail",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailRoutingModule.html":{}}}],["gmail'},{'name",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["gmail.component",{"_index":442,"title":{},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{}}}],["gmail.component.css",{"_index":322,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmail.component.html",{"_index":323,"title":{},"body":{"components/GmailComponent.html":{}}}],["gmail.routing",{"_index":443,"title":{},"body":{"modules/GmailModule.html":{}}}],["gmail/get",{"_index":732,"title":{},"body":{"injectables/HttpService.html":{}}}],["gmail/gmail.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["gmail/logged",{"_index":457,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["gmail/read",{"_index":458,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["gmail/services/gmail.service",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["gmail/store",{"_index":460,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["gmailcomponent",{"_index":159,"title":{"components/GmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["gmailcustomemail",{"_index":294,"title":{"classes/GmailCustomEmail.html":{}},"body":{"guards/GetEmailResolver.html":{},"classes/GmailCustomEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["gmailemail",{"_index":298,"title":{"classes/GmailEmail.html":{}},"body":{"guards/GetEmailResolver.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"coverage.html":{}}}],["gmailemailcomponent",{"_index":563,"title":{},"body":{"injectables/GmailService.html":{}}}],["gmailemaillistcomponent",{"_index":161,"title":{"components/GmailEmailListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["gmailmodule",{"_index":200,"title":{"modules/GmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules.html":{}}}],["gmailroutingmodule",{"_index":440,"title":{"modules/GmailRoutingModule.html":{}},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules.html":{}}}],["gmailservice",{"_index":41,"title":{"injectables/GmailService.html":{}},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["gmailstoretoken",{"_index":602,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["gmailstoretoken'},{'name",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["gmailstoretoken.component.css",{"_index":603,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["gmailstoretoken.component.html",{"_index":604,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["gmailstoretokencomponent",{"_index":163,"title":{"components/GmailStoreTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["gmailsvc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":935,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"index.html":{}}}],["goes",{"_index":1017,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["gotonextsong",{"_index":921,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["gotonextsong(with_device",{"_index":1015,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["gotoprevioussong",{"_index":922,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["gotoprevioussong(with_device",{"_index":1020,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["graph",{"_index":1465,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":275,"title":{"guards/GetEmailResolver.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":277,"title":{},"body":{"guards/GetEmailResolver.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"overview.html":{}}}],["guards/spotify",{"_index":1050,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["handle",{"_index":971,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["handled",{"_index":1185,"title":{},"body":{"interfaces/Todo.html":{}}}],["handleroute",{"_index":1224,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["handleroute(data",{"_index":1229,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["handles",{"_index":467,"title":{},"body":{"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{}}}],["handlespotifystatus",{"_index":804,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["handlespotifystatus(response",{"_index":806,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["header",{"_index":416,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["headers",{"_index":353,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["height",{"_index":427,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["height:15vh",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["height:5vh",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["height:70vh",{"_index":412,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["height:80vh",{"_index":779,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["height:90vh",{"_index":330,"title":{},"body":{"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{}}}],["height:95vh",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":1461,"title":{},"body":{"index.html":{}}}],["here",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["hidden",{"_index":434,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["home",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["home.component",{"_index":901,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{}}}],["home.component.css",{"_index":799,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.html",{"_index":800,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts",{"_index":797,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:16",{"_index":813,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:20",{"_index":814,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:24",{"_index":805,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:32",{"_index":810,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:45",{"_index":807,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home.component.ts:54",{"_index":809,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["home/spotify",{"_index":796,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"coverage.html":{}}}],["homepage",{"_index":798,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["homepagecomponent",{"_index":165,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["host",{"_index":409,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["html",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["htmlcontent",{"_index":267,"title":{},"body":{"components/EmailContainerComponent.html":{},"classes/GmailCustomEmail.html":{},"injectables/GmailService.html":{}}}],["htmlcontentasbase64",{"_index":573,"title":{},"body":{"injectables/GmailService.html":{}}}],["htmlcontentasbase64.replace",{"_index":594,"title":{},"body":{"injectables/GmailService.html":{}}}],["http",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["http://localhost:4200",{"_index":1446,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{}}}],["httpclient",{"_index":666,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["httpclientmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":860,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httphandler",{"_index":857,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httpheaders",{"_index":712,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpinterceptor",{"_index":861,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["httprequest",{"_index":855,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["https://stackoverflow.com/questions/24745006/gmail",{"_index":587,"title":{},"body":{"injectables/GmailService.html":{}}}],["httpservice",{"_index":45,"title":{"injectables/HttpService.html":{}},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["httpsvc",{"_index":853,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["id",{"_index":334,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["identifier",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["idtodo",{"_index":682,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(!localstorage.getitem('spotifytoken",{"_index":819,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["if(!newformvalue.albums",{"_index":1112,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["if(!todoid",{"_index":1209,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(data.todo._id",{"_index":1248,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(element",{"_index":1107,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["if(emailinfo.payload.body.size",{"_index":574,"title":{},"body":{"injectables/GmailService.html":{}}}],["if(filteredparts.length",{"_index":585,"title":{},"body":{"injectables/GmailService.html":{}}}],["if(filterparams.albums",{"_index":1137,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["if(filterparams.artists",{"_index":1139,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["if(filterparams.songs",{"_index":1141,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["if(localstorage.getitem('gmailtoken",{"_index":327,"title":{},"body":{"components/GmailComponent.html":{}}}],["if(localstorage.getitem('spotifytoken",{"_index":864,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(newvalue.length",{"_index":1101,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["if(params.token",{"_index":1160,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["if(parseint(localstorage.getitem('spotifyexp",{"_index":866,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(req.url.includes('spotify",{"_index":862,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["if(response.status",{"_index":823,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["if(this.currplayerstatus",{"_index":979,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["if(this.editmode",{"_index":1255,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["if(this.gmailservice.containsemailwithid(emailid",{"_index":305,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["if(this.todosvc.todos.length",{"_index":1210,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["if(token",{"_index":739,"title":{},"body":{"injectables/HttpService.html":{},"guards/SpotifyTokenGuard.html":{}}}],["if(type",{"_index":1150,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["if(val",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["if(val.url.includes('/gmail/logged",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["if(val.url.includes('/spotify/logged",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":794,"title":{},"body":{"interfaces/Song.html":{}}}],["imageurl",{"_index":792,"title":{},"body":{"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{}}}],["import(\"rxjs\").observable",{"_index":1206,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["important",{"_index":836,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["indicating",{"_index":815,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{}}}],["init",{"_index":811,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["injectable",{"_index":289,"title":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["injectables",{"_index":463,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["inline",{"_index":764,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["input",{"_index":270,"title":{},"body":{"components/EmailContainerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["inputs",{"_index":266,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["inside",{"_index":274,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["instanceof",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":850,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["intercept(req",{"_index":854,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptor",{"_index":841,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":843,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["interceptors/spotify.interceptor",{"_index":899,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["interface",{"_index":787,"title":{"interfaces/Song.html":{},"interfaces/Todo.html":{}},"body":{"interfaces/Song.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["interfaces",{"_index":789,"title":{},"body":{"interfaces/Song.html":{},"interfaces/Todo.html":{},"overview.html":{}}}],["interfaces/gmail",{"_index":295,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{}}}],["internaldate",{"_index":335,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"injectables/GmailService.html":{}}}],["isloading",{"_index":370,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["isloggedongmail",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["isloggedonspotify",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["isread",{"_index":336,"title":{},"body":{"classes/GmailCustomEmail.html":{},"injectables/GmailService.html":{}}}],["issmallscreen",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":1039,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.album.images[item.album.images.length",{"_index":1044,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.album.name",{"_index":1043,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.artists[0].name",{"_index":1042,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["item.name",{"_index":1041,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["items",{"_index":838,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["items:center",{"_index":433,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["javascript",{"_index":592,"title":{},"body":{"injectables/GmailService.html":{}}}],["js",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":429,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["jwt_decode(token",{"_index":1174,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["karma",{"_index":1456,"title":{},"body":{"index.html":{}}}],["ko",{"_index":1235,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["labelids",{"_index":348,"title":{},"body":{"classes/GmailEmail.html":{}}}],["left",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{}}}],["limit",{"_index":500,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{}}}],["limit.tostring",{"_index":736,"title":{},"body":{"injectables/HttpService.html":{}}}],["linked",{"_index":626,"title":{},"body":{"components/HomePageComponent.html":{},"components/TodoListComponent.html":{}}}],["list",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list'},{'name",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["list.component",{"_index":446,"title":{},"body":{"modules/GmailModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["list.component.css",{"_index":363,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{}}}],["list.component.html",{"_index":364,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{}}}],["list.component.ts",{"_index":362,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":1279,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:24",{"_index":1296,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:26",{"_index":1294,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:28",{"_index":384,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:29",{"_index":383,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:31",{"_index":382,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{}}}],["list.component.ts:32",{"_index":380,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:34",{"_index":373,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:36",{"_index":1295,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:38",{"_index":378,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:41",{"_index":1274,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:47",{"_index":377,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:51",{"_index":375,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["list.component.ts:57",{"_index":1285,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:76",{"_index":1281,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:84",{"_index":1289,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:89",{"_index":1288,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["list.module.ts",{"_index":1329,"title":{},"body":{"modules/TodoListModule.html":{}}}],["list.routing",{"_index":1333,"title":{},"body":{"modules/TodoListModule.html":{}}}],["list.routing.ts",{"_index":1334,"title":{},"body":{"modules/TodoListRoutingModule.html":{}}}],["list.service",{"_index":1205,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{}}}],["list.service.ts",{"_index":1338,"title":{},"body":{"injectables/TodoListService.html":{},"coverage.html":{}}}],["list.service.ts:11",{"_index":1367,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:12",{"_index":1366,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:14",{"_index":1346,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:17",{"_index":1357,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:28",{"_index":1359,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:38",{"_index":1356,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:42",{"_index":1363,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:49",{"_index":1354,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:58",{"_index":1364,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:67",{"_index":1351,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:73",{"_index":1349,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:77",{"_index":1361,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:87",{"_index":1348,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/gmail",{"_index":361,"title":{},"body":{"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"coverage.html":{}}}],["list/todo",{"_index":1266,"title":{},"body":{"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["listadd",{"_index":1321,"title":{},"body":{"components/TodoListComponent.html":{}}}],["listwith",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["literal",{"_index":351,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["loadnewlist",{"_index":371,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["loadnewlist(event",{"_index":374,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["localstorage.getitem('gmailtoken",{"_index":537,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{}}}],["localstorage.getitem('spotifytoken",{"_index":869,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{}}}],["localstorage.setitem('gmailexp",{"_index":611,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["localstorage.setitem('gmailtoken",{"_index":609,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifyexp",{"_index":876,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifyrefresh",{"_index":1162,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["localstorage.setitem('spotifytoken",{"_index":874,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["logged",{"_index":828,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["logging",{"_index":636,"title":{},"body":{"components/HomePageComponent.html":{}}}],["login",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{}}}],["make",{"_index":545,"title":{},"body":{"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{}}}],["makegetcallonemail",{"_index":480,"title":{},"body":{"injectables/GmailService.html":{}}}],["makegetcallonemail(message",{"_index":506,"title":{},"body":{"injectables/GmailService.html":{}}}],["makes",{"_index":496,"title":{},"body":{"injectables/GmailService.html":{}}}],["many",{"_index":646,"title":{},"body":{"components/HomePageComponent.html":{}}}],["map",{"_index":532,"title":{},"body":{"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{}}}],["margin",{"_index":1001,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["marked",{"_index":771,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["markemailasread",{"_index":481,"title":{},"body":{"injectables/GmailService.html":{}}}],["markemailasread(id",{"_index":513,"title":{},"body":{"injectables/GmailService.html":{}}}],["markemailasunread",{"_index":482,"title":{},"body":{"injectables/GmailService.html":{}}}],["markemailasunread(id",{"_index":515,"title":{},"body":{"injectables/GmailService.html":{}}}],["mat",{"_index":415,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["matautocompletemodule",{"_index":890,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["matbuttonmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["matcardmodule",{"_index":892,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["matcheckboxmodule",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{},"modules/TodoListModule.html":{}}}],["matching",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["material",{"_index":1292,"title":{},"body":{"components/TodoListComponent.html":{}}}],["matexpansionmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":894,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["maticonmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{}}}],["matinputmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["matpaginatormodule",{"_index":452,"title":{},"body":{"modules/GmailModule.html":{}}}],["matprogressspinnermodule",{"_index":785,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{}}}],["matsidenavmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":897,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["matsnackbar",{"_index":755,"title":{},"body":{"components/ReadEmailComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["matsnackbarmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/ReadEmailComponent.html":{}}}],["mattablemodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TodoListModule.html":{}}}],["mattoolbar",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{}}}],["menu",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":534,"title":{},"body":{"injectables/GmailService.html":{}}}],["message",{"_index":509,"title":{},"body":{"injectables/GmailService.html":{},"injectables/TodoListService.html":{}}}],["message.id",{"_index":508,"title":{},"body":{"injectables/GmailService.html":{}}}],["messagebox",{"_index":471,"title":{},"body":{"injectables/GmailService.html":{}}}],["messages",{"_index":543,"title":{},"body":{"injectables/GmailService.html":{}}}],["messagestofetch",{"_index":547,"title":{},"body":{"injectables/GmailService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["mimetype",{"_index":359,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/GmailService.html":{}}}],["min",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["missing",{"_index":678,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{}}}],["models/todo",{"_index":1203,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["modify",{"_index":745,"title":{},"body":{"injectables/HttpService.html":{}}}],["modifyemail",{"_index":663,"title":{},"body":{"injectables/HttpService.html":{}}}],["modifyemail(id",{"_index":699,"title":{},"body":{"injectables/HttpService.html":{}}}],["module",{"_index":187,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["modules",{"_index":189,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":627,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"interfaces/Todo.html":{}}}],["mongodb",{"_index":1182,"title":{},"body":{"interfaces/Todo.html":{}}}],["more",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["multi",{"_index":912,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["name:string",{"_index":354,"title":{},"body":{"classes/GmailEmail.html":{}}}],["navigate",{"_index":1445,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1197,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["needslogin",{"_index":801,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["new",{"_index":303,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["newemaillist",{"_index":401,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["newemaillistposted",{"_index":472,"title":{},"body":{"injectables/GmailService.html":{}}}],["newformvalue",{"_index":1076,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["newformvalue.artists",{"_index":1113,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["newformvalue.songs",{"_index":1114,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["newlist",{"_index":1380,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtodo",{"_index":1355,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtodo._id",{"_index":1375,"title":{},"body":{"injectables/TodoListService.html":{}}}],["newtododata",{"_index":670,"title":{},"body":{"injectables/HttpService.html":{},"injectables/TodoListService.html":{}}}],["newtodolist",{"_index":1307,"title":{},"body":{"components/TodoListComponent.html":{}}}],["newvalue",{"_index":1079,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["next",{"_index":856,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["next.handle(req",{"_index":882,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["next.handle(request",{"_index":881,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["nextpagetoken",{"_index":473,"title":{},"body":{"injectables/GmailService.html":{}}}],["ng",{"_index":832,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["ngondestroy",{"_index":372,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["none",{"_index":436,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["null",{"_index":493,"title":{},"body":{"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{},"injectables/SpotifyService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{}}}],["number",{"_index":342,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{}}}],["object",{"_index":510,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifySearchComponent.html":{}}}],["obs",{"_index":977,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["obs.subscribe((response",{"_index":982,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["observable",{"_index":288,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{}}}],["observable((observer",{"_index":304,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["observable>((observer",{"_index":871,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["observe",{"_index":1036,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["observer.complete",{"_index":307,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["observer.next(filteredemail",{"_index":311,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["observer.next(this.gmailservice.getcachedemail(emailid",{"_index":306,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["ok",{"_index":824,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["onclickplaypause",{"_index":923,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["ondestroy",{"_index":748,"title":{},"body":{"components/ReadEmailComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["one",{"_index":870,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"components/TodoListComponent.html":{}}}],["oninfoonplaybackreceived",{"_index":1009,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["oninfoonplaybackreceived(response",{"_index":1022,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["onnewemaillistposted",{"_index":474,"title":{},"body":{"injectables/GmailService.html":{}}}],["onoptionschanged",{"_index":1064,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["onoptionschanged(newformvalue",{"_index":1074,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["onplaybackchanged",{"_index":1121,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["onplaybackinforeceived",{"_index":955,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["onpreviousornextsongtriggered",{"_index":924,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["onroutereventreceived",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["onroutereventreceived(val",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearchtextchanged",{"_index":1065,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["onsearchtextchanged(newvalue",{"_index":1077,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["onsubmitform",{"_index":1225,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["ontodoadded",{"_index":1226,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["ontodoadded(response",{"_index":1233,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["ontodoedited",{"_index":1227,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["ontodoedited(response",{"_index":1236,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["ontodoelementdeleted",{"_index":1344,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ontodoelementdeleted(response",{"_index":1360,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ontodolistfetched",{"_index":1345,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ontodolistfetched(response",{"_index":1362,"title":{},"body":{"injectables/TodoListService.html":{}}}],["ontodolistsaved",{"_index":1271,"title":{},"body":{"components/TodoListComponent.html":{}}}],["ontodolistsaved(response",{"_index":1287,"title":{},"body":{"components/TodoListComponent.html":{}}}],["opacity",{"_index":395,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["opened",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["operations",{"_index":1277,"title":{},"body":{"components/TodoListComponent.html":{}}}],["option",{"_index":834,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["option.name",{"_index":1116,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["optional",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["options",{"_index":1062,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["origin",{"_index":720,"title":{},"body":{"injectables/HttpService.html":{}}}],["otherwise",{"_index":576,"title":{},"body":{"injectables/GmailService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"components/HomePageComponent.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{},"index.html":{}}}],["overflow",{"_index":413,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{}}}],["overview",{"_index":1467,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1419,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":616,"title":{},"body":{"components/HomePageComponent.html":{},"components/TodoListComponent.html":{}}}],["page'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["page.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":617,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.html",{"_index":618,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":615,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":622,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":620,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pages/github/github.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/read",{"_index":447,"title":{},"body":{"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{}}}],["pages/spotify",{"_index":900,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{}}}],["pages/todo",{"_index":1332,"title":{},"body":{"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["pagetoken",{"_index":485,"title":{},"body":{"injectables/GmailService.html":{}}}],["param",{"_index":556,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["parameter",{"_index":1184,"title":{},"body":{"interfaces/Todo.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["params",{"_index":733,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{}}}],["params.append('max_results",{"_index":735,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('pagetoken",{"_index":740,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.expires",{"_index":612,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["params.join",{"_index":1145,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["params.push('album",{"_index":1138,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["params.push('artist",{"_index":1140,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["params.push('track",{"_index":1142,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["params.refresh",{"_index":1161,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["params.token",{"_index":610,"title":{},"body":{"components/GmailStoreTokenComponent.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["params.tostring",{"_index":742,"title":{},"body":{"injectables/HttpService.html":{}}}],["parse",{"_index":589,"title":{},"body":{"injectables/GmailService.html":{}}}],["parseemail",{"_index":483,"title":{},"body":{"injectables/GmailService.html":{}}}],["parseemail(emailinfo",{"_index":517,"title":{},"body":{"injectables/GmailService.html":{}}}],["parseint(localstorage.getitem('gmailexp",{"_index":538,"title":{},"body":{"injectables/GmailService.html":{}}}],["parseint(localstorage.getitem('spotifyexp",{"_index":1136,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["part",{"_index":579,"title":{},"body":{"injectables/GmailService.html":{}}}],["parts",{"_index":358,"title":{},"body":{"classes/GmailEmail.html":{},"injectables/GmailService.html":{}}}],["passes",{"_index":1298,"title":{},"body":{"components/TodoListComponent.html":{}}}],["path",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["pause",{"_index":644,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["pauses",{"_index":945,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["pausesong",{"_index":1010,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["pausesong(with_device",{"_index":1024,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["payload",{"_index":349,"title":{},"body":{"classes/GmailEmail.html":{}}}],["per",{"_index":499,"title":{},"body":{"injectables/GmailService.html":{}}}],["perform",{"_index":635,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"components/TodoListComponent.html":{}}}],["pipe(map(this.oninfoonplaybackreceived.bind(this",{"_index":1037,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["play",{"_index":640,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["play_arrow",{"_index":992,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["playback",{"_index":468,"title":{},"body":{"injectables/GmailService.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["playback's",{"_index":950,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["playbackchanged",{"_index":918,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["playbackchangedsource",{"_index":1122,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["playelement",{"_index":1066,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["playelement(selectedoption",{"_index":1080,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["playelement(uri",{"_index":1131,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["player",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{}}}],["player'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["player.component",{"_index":906,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["player.component.css",{"_index":915,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.html",{"_index":916,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts",{"_index":914,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"coverage.html":{}}}],["player.component.ts:14",{"_index":960,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:21",{"_index":959,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:22",{"_index":962,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:24",{"_index":930,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:27",{"_index":942,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:43",{"_index":952,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:47",{"_index":932,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:57",{"_index":943,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:76",{"_index":940,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:83",{"_index":947,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:89",{"_index":933,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:93",{"_index":931,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.component.ts:97",{"_index":957,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.service",{"_index":964,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["player.service.ts",{"_index":1007,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["player.service.ts:11",{"_index":1012,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:20",{"_index":1025,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:28",{"_index":1027,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:36",{"_index":1016,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:40",{"_index":1021,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:44",{"_index":1014,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:49",{"_index":1023,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:63",{"_index":1013,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player.service.ts:67",{"_index":1029,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["player/spotify",{"_index":905,"title":{},"body":{"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"coverage.html":{}}}],["playing",{"_index":1035,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["plays",{"_index":944,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["playsong",{"_index":1011,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["playsong(with_device",{"_index":1026,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["please",{"_index":829,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/TodoListComponent.html":{}}}],["pointer",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["populateoptions",{"_index":1067,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["populateoptions(response",{"_index":1083,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["position",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{}}}],["position:absolute",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":551,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{}}}],["precheck",{"_index":673,"title":{},"body":{"injectables/HttpService.html":{}}}],["present",{"_index":676,"title":{},"body":{"injectables/HttpService.html":{}}}],["previous",{"_index":941,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["printable",{"_index":531,"title":{},"body":{"injectables/GmailService.html":{},"dependencies.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["process",{"_index":527,"title":{},"body":{"injectables/GmailService.html":{}}}],["project",{"_index":1436,"title":{},"body":{"index.html":{}}}],["projects",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["promise",{"_index":1171,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["properly",{"_index":1143,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/ReadEmailComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["protractor",{"_index":1459,"title":{},"body":{"index.html":{}}}],["provide",{"_index":910,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["providedin",{"_index":533,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["providers",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["public",{"_index":367,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{}}}],["push",{"_index":561,"title":{},"body":{"injectables/GmailService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["put",{"_index":724,"title":{},"body":{"injectables/HttpService.html":{}}}],["put,delete",{"_index":726,"title":{},"body":{"injectables/HttpService.html":{}}}],["query",{"_index":1130,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["quoted",{"_index":530,"title":{},"body":{"injectables/GmailService.html":{},"dependencies.html":{}}}],["quotedprintable",{"_index":529,"title":{},"body":{"injectables/GmailService.html":{}}}],["quotedprintable.decode(emailinfo.snippet",{"_index":569,"title":{},"body":{"injectables/GmailService.html":{}}}],["reactiveformsmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{}}}],["read",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["reademailcomponent",{"_index":167,"title":{"components/ReadEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["readme",{"_index":1462,"title":{},"body":{"index.html":{}}}],["recursion",{"_index":578,"title":{},"body":{"injectables/GmailService.html":{}}}],["refresh",{"_index":706,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{}}}],["refreshspotifytoken",{"_index":664,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshspotifytoken(refreshtoken",{"_index":702,"title":{},"body":{"injectables/HttpService.html":{}}}],["refreshtoken",{"_index":705,"title":{},"body":{"injectables/HttpService.html":{}}}],["regenerate",{"_index":704,"title":{},"body":{"injectables/HttpService.html":{}}}],["relaunch",{"_index":879,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reload",{"_index":1448,"title":{},"body":{"index.html":{}}}],["removelabelids",{"_index":598,"title":{},"body":{"injectables/GmailService.html":{}}}],["replace",{"_index":686,"title":{},"body":{"injectables/HttpService.html":{}}}],["replace(/_/g",{"_index":596,"title":{},"body":{"injectables/GmailService.html":{}}}],["representing",{"_index":1177,"title":{},"body":{"interfaces/Todo.html":{}}}],["represents",{"_index":791,"title":{},"body":{"interfaces/Song.html":{}}}],["req",{"_index":859,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.clone",{"_index":867,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["req.url.includes('refresh",{"_index":863,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["reqopts",{"_index":716,"title":{},"body":{"injectables/HttpService.html":{}}}],["request",{"_index":848,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{}}}],["requested",{"_index":1352,"title":{},"body":{"injectables/TodoListService.html":{}}}],["requestmade",{"_index":1267,"title":{},"body":{"components/TodoListComponent.html":{}}}],["requests",{"_index":816,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["required",{"_index":763,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["resolve",{"_index":280,"title":{},"body":{"guards/GetEmailResolver.html":{},"modules/GmailRoutingModule.html":{},"guards/TodoDataResolverService.html":{},"modules/TodoListRoutingModule.html":{}}}],["resolve(route",{"_index":285,"title":{},"body":{"guards/GetEmailResolver.html":{},"guards/TodoDataResolverService.html":{}}}],["resolver",{"_index":1189,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service",{"_index":1336,"title":{},"body":{"modules/TodoListRoutingModule.html":{}}}],["resolver.service.ts",{"_index":1188,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:19",{"_index":1200,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolver.service.ts:28",{"_index":1202,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["resolvers/email",{"_index":455,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["resolvers/todo",{"_index":1335,"title":{},"body":{"modules/TodoListRoutingModule.html":{}}}],["response",{"_index":808,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["response.body.item",{"_index":1040,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["response.data",{"_index":1106,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["response.messages.map(this.makegetcallonemail.bind(this",{"_index":548,"title":{},"body":{"injectables/GmailService.html":{}}}],["response.newlist",{"_index":1381,"title":{},"body":{"injectables/TodoListService.html":{}}}],["response.nextpagetoken",{"_index":544,"title":{},"body":{"injectables/GmailService.html":{}}}],["response.status",{"_index":1262,"title":{},"body":{"components/TodoEditComponent.html":{},"injectables/TodoListService.html":{}}}],["response.token",{"_index":875,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["response.url",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{}}}],["result",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["retrieve",{"_index":693,"title":{},"body":{"injectables/HttpService.html":{}}}],["retrieves",{"_index":495,"title":{},"body":{"injectables/GmailService.html":{}}}],["return",{"_index":302,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["returns",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["reverses",{"_index":946,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["rewrite",{"_index":849,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["right",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["right:0.5vw",{"_index":1002,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["route",{"_index":282,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailStoreTokenComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{}}}],["route.parammap.get('emailid",{"_index":301,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["route.parammap.get('id",{"_index":1208,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["router",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{}}}],["routermodule",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":462,"title":{},"body":{"modules/GmailRoutingModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1169,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["routes",{"_index":254,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/GmailRoutingModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules/TodoListRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":417,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["rss",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1442,"title":{},"body":{"index.html":{}}}],["running",{"_index":1450,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":290,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":292,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{}}}],["sanitizer",{"_index":752,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["save",{"_index":634,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/TodoListComponent.html":{}}}],["saved",{"_index":1311,"title":{},"body":{"components/TodoListComponent.html":{}}}],["saves",{"_index":709,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist",{"_index":665,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["savetodolist(todolist",{"_index":707,"title":{},"body":{"injectables/HttpService.html":{}}}],["search",{"_index":580,"title":{},"body":{"injectables/GmailService.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifySearchComponent.html":{}}}],["search'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["search.component",{"_index":908,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["search.component.css",{"_index":1057,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.html",{"_index":1058,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts",{"_index":1056,"title":{},"body":{"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":1087,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:14",{"_index":1094,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:18",{"_index":1069,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:24",{"_index":1085,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:29",{"_index":1095,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:30",{"_index":1073,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:36",{"_index":1078,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:44",{"_index":1072,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:50",{"_index":1084,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:55",{"_index":1071,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:62",{"_index":1081,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search.component.ts:66",{"_index":1075,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["search/spotify",{"_index":907,"title":{},"body":{"modules/SpotifyModule.html":{},"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["seem",{"_index":827,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["selectedoption",{"_index":1082,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["selectedoption.type",{"_index":1111,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["sender",{"_index":404,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{}}}],["serve",{"_index":1443,"title":{},"body":{"index.html":{}}}],["server",{"_index":672,"title":{},"body":{"injectables/HttpService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"index.html":{}}}],["server_root/todos",{"_index":696,"title":{},"body":{"injectables/HttpService.html":{}}}],["service",{"_index":466,"title":{},"body":{"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["services/gmail.service",{"_index":299,"title":{},"body":{"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{}}}],["services/http.service",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"guards/TodoDataResolverService.html":{},"injectables/TodoListService.html":{}}}],["services/spotify",{"_index":963,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["services/spotify.service",{"_index":817,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["services/todo",{"_index":1204,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{}}}],["setcurrentsong",{"_index":925,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["setcurrentsong(song",{"_index":951,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["setheaders",{"_index":868,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["setinterval",{"_index":972,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["sets",{"_index":1286,"title":{},"body":{"components/TodoListComponent.html":{}}}],["settimeout",{"_index":768,"title":{},"body":{"components/ReadEmailComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["setvolume",{"_index":926,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{}}}],["setvolume(value",{"_index":1028,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["shared/shared.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}],["sharedmodule",{"_index":201,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SharedModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{},"modules.html":{}}}],["sidenav",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["simply",{"_index":865,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["size",{"_index":356,"title":{},"body":{"classes/GmailEmail.html":{}}}],["skip_next",{"_index":993,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["skip_previous",{"_index":991,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["slice:0:20",{"_index":406,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["snackbar",{"_index":754,"title":{},"body":{"components/ReadEmailComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["snippet",{"_index":337,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{}}}],["song",{"_index":788,"title":{"interfaces/Song.html":{}},"body":{"interfaces/Song.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["song.album",{"_index":990,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song.artist",{"_index":989,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song.title",{"_index":988,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_container",{"_index":1003,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_img_container",{"_index":1000,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["song_title_container",{"_index":997,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["songs",{"_index":1091,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"modules/GmailModule.html":{},"modules/GmailRoutingModule.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"modules/SharedModule.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"index.html":{}}}],["space",{"_index":430,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["specific",{"_index":1183,"title":{},"body":{"interfaces/Todo.html":{}}}],["spinner",{"_index":424,"title":{},"body":{"components/GmailEmailListComponent.html":{},"modules/SharedModule.html":{}}}],["spotify",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["spotify's",{"_index":630,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyService.html":{}}}],["spotify.routing",{"_index":909,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["spotify/autocomp",{"_index":1144,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["spotify/get",{"_index":731,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/logged",{"_index":1053,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["spotify/precheck",{"_index":729,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/refresh",{"_index":730,"title":{},"body":{"injectables/HttpService.html":{}}}],["spotify/services/spotify.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["spotify/spotify.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["spotify/store",{"_index":1054,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["spotify\\'s",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{}}}],["spotify_player_content",{"_index":994,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["spotifyauthurl",{"_index":802,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifyhomecomponent",{"_index":170,"title":{"components/SpotifyHomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["spotifyinterceptor",{"_index":842,"title":{"interceptors/SpotifyInterceptor.html":{}},"body":{"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"coverage.html":{}}}],["spotifymodule",{"_index":202,"title":{"modules/SpotifyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpotifyModule.html":{},"modules.html":{}}}],["spotifyok",{"_index":803,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["spotifyplayercomponent",{"_index":172,"title":{"components/SpotifyPlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["spotifyplayerservice",{"_index":929,"title":{"injectables/SpotifyPlayerService.html":{}},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["spotifyplayersvc",{"_index":928,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["spotifyroutingmodule",{"_index":888,"title":{"modules/SpotifyRoutingModule.html":{}},"body":{"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"modules.html":{}}}],["spotifysearchcomponent",{"_index":174,"title":{"components/SpotifySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["spotifyservice",{"_index":43,"title":{"injectables/SpotifyService.html":{}},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"coverage.html":{}}}],["spotifystoretokencomponent",{"_index":176,"title":{"components/SpotifyStoreTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["spotifysvc",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["spotifytokenguard",{"_index":1049,"title":{"guards/SpotifyTokenGuard.html":{}},"body":{"modules/SpotifyRoutingModule.html":{},"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["src/app/app",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/gmail/components/email",{"_index":259,"title":{},"body":{"components/EmailContainerComponent.html":{},"coverage.html":{}}}],["src/app/gmail/components/gmail",{"_index":360,"title":{},"body":{"components/GmailEmailListComponent.html":{},"coverage.html":{}}}],["src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts",{"_index":601,"title":{},"body":{"components/GmailStoreTokenComponent.html":{},"coverage.html":{}}}],["src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts:13",{"_index":607,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts:9",{"_index":606,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["src/app/gmail/gmail.component.ts",{"_index":321,"title":{},"body":{"components/GmailComponent.html":{},"coverage.html":{}}}],["src/app/gmail/gmail.component.ts:11",{"_index":325,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/gmail/gmail.component.ts:15",{"_index":326,"title":{},"body":{"components/GmailComponent.html":{}}}],["src/app/gmail/gmail.module.ts",{"_index":441,"title":{},"body":{"modules/GmailModule.html":{}}}],["src/app/gmail/gmail.routing.ts",{"_index":454,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["src/app/gmail/interfaces/gmail",{"_index":332,"title":{},"body":{"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"coverage.html":{}}}],["src/app/gmail/pages/read",{"_index":746,"title":{},"body":{"components/ReadEmailComponent.html":{},"coverage.html":{}}}],["src/app/gmail/resolvers/email",{"_index":278,"title":{},"body":{"guards/GetEmailResolver.html":{},"coverage.html":{}}}],["src/app/gmail/services/gmail.service.ts",{"_index":464,"title":{},"body":{"injectables/GmailService.html":{},"coverage.html":{}}}],["src/app/gmail/services/gmail.service.ts:132",{"_index":490,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:136",{"_index":514,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:144",{"_index":516,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:18",{"_index":521,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:19",{"_index":523,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:22",{"_index":519,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:23",{"_index":520,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:25",{"_index":487,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:31",{"_index":525,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:35",{"_index":488,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:42",{"_index":494,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:66",{"_index":507,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:70",{"_index":518,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:79",{"_index":505,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/gmail/services/gmail.service.ts:83",{"_index":502,"title":{},"body":{"injectables/GmailService.html":{}}}],["src/app/pages/github/github.component.ts",{"_index":315,"title":{},"body":{"components/GithubComponent.html":{},"coverage.html":{}}}],["src/app/pages/github/github.component.ts:12",{"_index":319,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/github/github.component.ts:8",{"_index":318,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/pages/home",{"_index":614,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/services/http.service",{"_index":293,"title":{},"body":{"guards/GetEmailResolver.html":{},"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{}}}],["src/app/services/http.service.ts",{"_index":653,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http.service.ts:102",{"_index":703,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:108",{"_index":692,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:112",{"_index":689,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:123",{"_index":688,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:141",{"_index":691,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:154",{"_index":701,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:18",{"_index":695,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:35",{"_index":708,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:53",{"_index":685,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:69",{"_index":681,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:79",{"_index":669,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:9",{"_index":667,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http.service.ts:94",{"_index":671,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/spotify/components/spotify",{"_index":913,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"coverage.html":{}}}],["src/app/spotify/guards/spotify",{"_index":1165,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["src/app/spotify/interceptors/spotify.interceptor.ts",{"_index":844,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"coverage.html":{}}}],["src/app/spotify/interceptors/spotify.interceptor.ts:16",{"_index":852,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/spotify/interceptors/spotify.interceptor.ts:20",{"_index":858,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["src/app/spotify/pages/spotify",{"_index":795,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["src/app/spotify/services/song",{"_index":965,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["src/app/spotify/services/song.ts",{"_index":790,"title":{},"body":{"interfaces/Song.html":{},"coverage.html":{}}}],["src/app/spotify/services/spotify",{"_index":1006,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"coverage.html":{}}}],["src/app/spotify/services/spotify.service.ts",{"_index":1120,"title":{},"body":{"injectables/SpotifyService.html":{},"coverage.html":{}}}],["src/app/spotify/services/spotify.service.ts:11",{"_index":1134,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/spotify/services/spotify.service.ts:14",{"_index":1124,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/spotify/services/spotify.service.ts:23",{"_index":1125,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/spotify/services/spotify.service.ts:27",{"_index":1129,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/spotify/services/spotify.service.ts:46",{"_index":1132,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["src/app/spotify/spotify.module.ts",{"_index":889,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["src/app/spotify/spotify.routing.ts",{"_index":1048,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["src/app/todolist/components/todo",{"_index":1215,"title":{},"body":{"components/TodoEditComponent.html":{},"coverage.html":{}}}],["src/app/todolist/models/todo",{"_index":1244,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["src/app/todolist/models/todo.ts",{"_index":1176,"title":{},"body":{"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/todolist/pages/todo",{"_index":1265,"title":{},"body":{"components/TodoListComponent.html":{},"coverage.html":{}}}],["src/app/todolist/resolvers/todo",{"_index":1187,"title":{},"body":{"guards/TodoDataResolverService.html":{},"coverage.html":{}}}],["src/app/todolist/services/todo",{"_index":1337,"title":{},"body":{"injectables/TodoListService.html":{},"coverage.html":{}}}],["src/app/todolist/todo",{"_index":1328,"title":{},"body":{"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{}}}],["src/environments/environment",{"_index":1135,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["started",{"_index":1435,"title":{"index.html":{}},"body":{}}],["state",{"_index":1168,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"guards/TodoDataResolverService.html":{}}}],["statements",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["statud",{"_index":812,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["status",{"_index":822,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["sticky",{"_index":418,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["still",{"_index":846,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["store",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["str.length",{"_index":1097,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"interfaces/Todo.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["style",{"_index":386,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["subject",{"_index":338,"title":{},"body":{"classes/GmailCustomEmail.html":{},"injectables/GmailService.html":{},"injectables/SpotifyService.html":{},"injectables/TodoListService.html":{}}}],["subscribe",{"_index":1047,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["subscription",{"_index":958,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyService.html":{},"components/TodoListComponent.html":{}}}],["succesfully",{"_index":1259,"title":{},"body":{"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["support",{"_index":629,"title":{},"body":{"components/HomePageComponent.html":{},"modules.html":{}}}],["svg",{"_index":1463,"title":{},"body":{"modules.html":{}}}],["table",{"_index":411,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["test",{"_index":1453,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1452,"title":{},"body":{"index.html":{}}}],["text",{"_index":835,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["text/html",{"_index":584,"title":{},"body":{"injectables/GmailService.html":{}}}],["theme",{"_index":1291,"title":{},"body":{"components/TodoListComponent.html":{}}}],["themes",{"_index":1268,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this._snackbar.open('todo",{"_index":1310,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.bpobserver.ismatched('(max",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cachedmessages[emailid",{"_index":565,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.cachedmessages[emailinfo.id",{"_index":560,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.currelement",{"_index":1105,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.currid",{"_index":1250,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.currplayerstatus",{"_index":983,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.currtodo",{"_index":1252,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.displaysnackbar('todo",{"_index":1382,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.editmode",{"_index":1249,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.emailcontent",{"_index":761,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.emailcontent.htmlcontent",{"_index":765,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.emaillist",{"_index":400,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["this.filteremailinfo(emailinfo",{"_index":559,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.form.setvalue(this.currtodo",{"_index":1254,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.formcontrol.valuechanges.subscribe(this.onsearchtextchanged.bind(this",{"_index":1099,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.formgroupoptions.setvalue",{"_index":1115,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.formgroupoptions.value).subscribe(this.populateoptions.bind(this",{"_index":1103,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.formgroupoptions.valuechanges.subscribe(this.onoptionschanged.bind(this",{"_index":1100,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.getplaybackinfo",{"_index":973,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.gmailservice.fetchemaillist",{"_index":328,"title":{},"body":{"components/GmailComponent.html":{}}}],["this.gmailservice.fetchemaillist(event.pagesize",{"_index":402,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["this.gmailservice.filteremailinfo(emailinfo",{"_index":310,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["this.gmailservice.getcachedemail(emailid",{"_index":312,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["this.gmailservice.markemailasread(this.emailcontent.id).subscribe",{"_index":769,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.gmailservice.onnewemaillistposted.subscribe((newemaillist",{"_index":399,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["this.gmailservice.pagetoken",{"_index":403,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["this.gmailsvc.checkgmailstatus",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.addnewtodo(newtododata",{"_index":1385,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.checkspotifystatus().subscribe(this.handlespotifystatus.bind(this",{"_index":820,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.http.delete(environment.serverroot",{"_index":727,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.deletetodoelement(idtodo).subscribe(this.ontodoelementdeleted.bind(this",{"_index":1379,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.edittodo(_id",{"_index":1376,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(\"https://gmail.googleapis.com/gmail/v1/users/me/messages",{"_index":743,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('https://api.spotify.com/v1/me/player/currently",{"_index":1034,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.get(`https://gmail.googleapis.com/gmail/v1/users/me/messages",{"_index":741,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(environment.serverroot",{"_index":728,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SpotifyService.html":{}}}],["this.http.get>(environment.serverroot",{"_index":721,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.getemaillist(limit",{"_index":541,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.http.getgmailauthurl().subscribe((response",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.getindividualemailinfo(message.id).pipe(map(this.parseemail.bind(this",{"_index":558,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.http.getspotifyauthurl().subscribe((response",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.gettodolist().pipe(map((data",{"_index":1212,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.http.gettodolist().subscribe((response",{"_index":1368,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.gettodolist().subscribe(this.ontodolistfetched.bind(this",{"_index":1373,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.modifyemail",{"_index":599,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.http.modifyemail(id",{"_index":597,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.http.post('https://api.spotify.com/v1/me/player/next",{"_index":1032,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.post('https://api.spotify.com/v1/me/player/previous",{"_index":1033,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.post('https://gmail.googleapis.com/gmail/v1/users/me/messages",{"_index":744,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.post(environment.serverroot",{"_index":723,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/pause",{"_index":1030,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/play",{"_index":1031,"title":{},"body":{"injectables/SpotifyPlayerService.html":{},"injectables/SpotifyService.html":{}}}],["this.http.put('https://api.spotify.com/v1/me/player/volume?volume_percent",{"_index":1046,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["this.http.put(environment.serverroot",{"_index":725,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.savetodolist(this.todos",{"_index":1377,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.httpservice.getindividualemailinfo(emailid).subscribe((emailinfo",{"_index":308,"title":{},"body":{"guards/GetEmailResolver.html":{}}}],["this.httpsvc.refreshspotifytoken(localstorage.getitem('spotifyrefresh')).subscribe((response",{"_index":872,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["this.isloading",{"_index":398,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["this.isloggedongmail",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloggedonspotify",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.issmallscreen",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messagebox",{"_index":555,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.messagebox.push(filteredemail",{"_index":564,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.newemaillistposted.asobservable",{"_index":522,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.newemaillistposted.next(this.messagebox",{"_index":554,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.nextpagetoken",{"_index":536,"title":{},"body":{"injectables/GmailService.html":{}}}],["this.opened",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["this.options",{"_index":1104,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.playbackchanged",{"_index":967,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.playbackchangedsource.asobservable",{"_index":1133,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["this.playbackchangedsource.next",{"_index":1154,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["this.requestmade",{"_index":1305,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.route.data.subscribe((data",{"_index":760,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.route.data.subscribe(this.handleroute.bind(this",{"_index":1247,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":608,"title":{},"body":{"components/GmailStoreTokenComponent.html":{},"components/SpotifyStoreTokenComponent.html":{}}}],["this.router.events.subscribe(this.onroutereventreceived.bind(this",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/todolist",{"_index":1261,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.router.navigate(['gmail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['gmail/logged",{"_index":613,"title":{},"body":{"components/GmailStoreTokenComponent.html":{}}}],["this.router.navigate(['spotify",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['spotify/logged",{"_index":1164,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(this.emailcontent.htmlcontent",{"_index":766,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.snackbar.open('email",{"_index":770,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.snackbar.open(message",{"_index":1378,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.song",{"_index":975,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyauthurl",{"_index":825,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyok",{"_index":821,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.spotifyplayersvc.getavailabledevices",{"_index":986,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.getinfoonplayback().subscribe(this.setcurrentsong.bind(this",{"_index":966,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.gotonextsong().subscribe(this.getplaybackinfo.bind(this",{"_index":985,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.gotoprevioussong().subscribe(this.getplaybackinfo.bind(this",{"_index":984,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.pausesong",{"_index":980,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.playsong",{"_index":981,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyplayersvc.setvolume(this.volume",{"_index":987,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.spotifyservice.fetchautocomplete(newvalue",{"_index":1102,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.spotifyservice.playelement(selectedoption.uri",{"_index":1110,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["this.spotifysvc.checkspotifystatus",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spotifysvc.onplaybackchanged.subscribe(this.getplaybackinfo.bind(this",{"_index":968,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["this.themes",{"_index":1369,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.timeoutmarkemailasreadid",{"_index":767,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["this.titleservice.settitle('email",{"_index":329,"title":{},"body":{"components/GmailComponent.html":{}}}],["this.titleservice.settitle('todolist",{"_index":1300,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.titlesvc.settitle('dashboard",{"_index":623,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.titlesvc.settitle('spotify",{"_index":818,"title":{},"body":{"components/SpotifyHomeComponent.html":{}}}],["this.titlesvc.settitle('todo",{"_index":1246,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todolistchanged",{"_index":1303,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged$.unsubscribe",{"_index":1308,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todolistchanged.next([...this.todos",{"_index":1370,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todolistchanged.next(response.todos",{"_index":1374,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todos",{"_index":1306,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["this.todos.find((elem",{"_index":1371,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.todosvc.addtodo(this.form.value).subscribe(this.ontodoadded.bind(this",{"_index":1257,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.deletetodo(idtodo",{"_index":1313,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.displaysnackbar('todo",{"_index":1258,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.edittodo(this.form.value).subscribe(this.ontodoedited.bind(this",{"_index":1256,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["this.todosvc.fetchtodosandthemes",{"_index":1302,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.gettodo(todoid",{"_index":1211,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["this.todosvc.savetodolist().subscribe(this.ontodolistsaved.bind(this",{"_index":1309,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todosvc.todolistchanged.subscribe((newtodolist",{"_index":1304,"title":{},"body":{"components/TodoListComponent.html":{}}}],["threadid",{"_index":557,"title":{},"body":{"injectables/GmailService.html":{}}}],["three",{"_index":641,"title":{},"body":{"components/HomePageComponent.html":{}}}],["timeoutmarkemailasreadid",{"_index":751,"title":{},"body":{"components/ReadEmailComponent.html":{}}}],["title",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GmailComponent.html":{},"components/HomePageComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["titleservice",{"_index":324,"title":{},"body":{"components/GmailComponent.html":{},"components/TodoListComponent.html":{}}}],["titlesvc",{"_index":621,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/TodoEditComponent.html":{}}}],["todo",{"_index":110,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todo's",{"_index":1190,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["todo.content",{"_index":1316,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.theme",{"_index":1314,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.title",{"_index":1315,"title":{},"body":{"components/TodoListComponent.html":{}}}],["tododata",{"_index":684,"title":{},"body":{"injectables/HttpService.html":{}}}],["tododataresolverservice",{"_index":1186,"title":{"guards/TodoDataResolverService.html":{}},"body":{"guards/TodoDataResolverService.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["todoeditcomponent",{"_index":179,"title":{"components/TodoEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["todoid",{"_index":1207,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["todolist",{"_index":711,"title":{},"body":{"injectables/HttpService.html":{},"modules/TodoListRoutingModule.html":{}}}],["todolist/:id/edit",{"_index":1192,"title":{},"body":{"guards/TodoDataResolverService.html":{},"modules/TodoListRoutingModule.html":{}}}],["todolist/add",{"_index":1193,"title":{},"body":{"guards/TodoDataResolverService.html":{},"modules/TodoListRoutingModule.html":{}}}],["todolist/models/todo",{"_index":713,"title":{},"body":{"injectables/HttpService.html":{}}}],["todolist/todo",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["todolistchanged",{"_index":1269,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todolistcomponent",{"_index":181,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"coverage.html":{}}}],["todolistmodule",{"_index":203,"title":{"modules/TodoListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoListModule.html":{},"modules.html":{}}}],["todolistroutingmodule",{"_index":1327,"title":{"modules/TodoListRoutingModule.html":{}},"body":{"modules/TodoListModule.html":{},"modules/TodoListRoutingModule.html":{},"modules.html":{}}}],["todolistservice",{"_index":1199,"title":{"injectables/TodoListService.html":{}},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"modules/TodoListModule.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["todos",{"_index":722,"title":{},"body":{"injectables/HttpService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["todosave",{"_index":1322,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todoservice",{"_index":1276,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todosvc",{"_index":1201,"title":{},"body":{"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["todosvc.todolistchanged",{"_index":1297,"title":{},"body":{"components/TodoListComponent.html":{}}}],["togglesidenav",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":492,"title":{},"body":{"injectables/GmailService.html":{},"injectables/HttpService.html":{},"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{}}}],["token'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["token).subscribe((response",{"_index":542,"title":{},"body":{"injectables/GmailService.html":{}}}],["token.component",{"_index":903,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{}}}],["token.component.css",{"_index":1156,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.html",{"_index":1157,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts",{"_index":1155,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["token.component.ts:12",{"_index":1159,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.component.ts:8",{"_index":1158,"title":{},"body":{"components/SpotifyStoreTokenComponent.html":{}}}],["token.guard",{"_index":1051,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["token.guard.ts",{"_index":1166,"title":{},"body":{"guards/SpotifyTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:10",{"_index":1170,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["token/:token/:expires",{"_index":461,"title":{},"body":{"modules/GmailRoutingModule.html":{}}}],["token/:token/:refresh",{"_index":1055,"title":{},"body":{"modules/SpotifyRoutingModule.html":{}}}],["token/spotify",{"_index":902,"title":{},"body":{"modules/SpotifyModule.html":{},"modules/SpotifyRoutingModule.html":{},"components/SpotifyStoreTokenComponent.html":{},"coverage.html":{}}}],["tokendecoded",{"_index":1173,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["toolbar",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{}}}],["tr:hover",{"_index":422,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["track",{"_index":639,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/SpotifyService.html":{}}}],["transform",{"_index":393,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["transition",{"_index":387,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["transition('void",{"_index":392,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["translatey(0",{"_index":397,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["translatey(50px",{"_index":394,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["trigger",{"_index":388,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["trigger('emailelem",{"_index":391,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["triggered",{"_index":948,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["triggergmailloginprocedure",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["triggerloginprocedure",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["triggers",{"_index":1096,"title":{},"body":{"components/SpotifySearchComponent.html":{}}}],["true",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GmailEmailListComponent.html":{},"components/SpotifyHomeComponent.html":{},"modules/SpotifyModule.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"guards/SpotifyTokenGuard.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["try",{"_index":642,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/SpotifyService.html":{}}}],["tslib",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"guards/GetEmailResolver.html":{},"components/GmailComponent.html":{},"classes/GmailCustomEmail.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"injectables/HttpService.html":{},"components/ReadEmailComponent.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{},"interceptors/SpotifyInterceptor.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"guards/SpotifyTokenGuard.html":{},"interfaces/Todo.html":{},"guards/TodoDataResolverService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"coverage.html":{}}}],["unit",{"_index":1451,"title":{},"body":{"index.html":{}}}],["unread",{"_index":419,"title":{},"body":{"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{}}}],["uri",{"_index":1109,"title":{},"body":{"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{}}}],["uris",{"_index":1148,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["url",{"_index":679,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/Song.html":{},"components/SpotifyHomeComponent.html":{}}}],["urlsearchparams",{"_index":734,"title":{},"body":{"injectables/HttpService.html":{}}}],["urltree",{"_index":1172,"title":{},"body":{"guards/SpotifyTokenGuard.html":{}}}],["use",{"_index":562,"title":{},"body":{"injectables/GmailService.html":{},"injectables/TodoListService.html":{},"index.html":{}}}],["useclass",{"_index":911,"title":{},"body":{"modules/SpotifyModule.html":{}}}],["used",{"_index":272,"title":{},"body":{"components/EmailContainerComponent.html":{},"interfaces/Song.html":{},"guards/TodoDataResolverService.html":{},"components/TodoListComponent.html":{}}}],["using",{"_index":880,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{}}}],["val",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["valid",{"_index":847,"title":{},"body":{"interceptors/SpotifyInterceptor.html":{},"injectables/SpotifyService.html":{}}}],["validators",{"_index":1245,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["validators.required",{"_index":1242,"title":{},"body":{"components/TodoEditComponent.html":{}}}],["value",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/GmailEmail.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"components/SpotifySearchComponent.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{}}}],["version",{"_index":1181,"title":{},"body":{"interfaces/Todo.html":{},"index.html":{}}}],["via",{"_index":1455,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":271,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["viewencapsulation.shadowdom",{"_index":263,"title":{},"body":{"components/EmailContainerComponent.html":{}}}],["void",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EmailContainerComponent.html":{},"components/GithubComponent.html":{},"components/GmailComponent.html":{},"components/GmailEmailListComponent.html":{},"injectables/GmailService.html":{},"components/GmailStoreTokenComponent.html":{},"components/HomePageComponent.html":{},"components/ReadEmailComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifyPlayerComponent.html":{},"injectables/SpotifyPlayerService.html":{},"components/SpotifySearchComponent.html":{},"injectables/SpotifyService.html":{},"components/SpotifyStoreTokenComponent.html":{},"components/TodoEditComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["volume",{"_index":643,"title":{},"body":{"components/HomePageComponent.html":{},"components/SpotifyPlayerComponent.html":{}}}],["volume_and_change_device",{"_index":1004,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["want",{"_index":512,"title":{},"body":{"injectables/GmailService.html":{},"injectables/SpotifyPlayerService.html":{}}}],["way",{"_index":970,"title":{},"body":{"components/SpotifyPlayerComponent.html":{}}}],["we'll",{"_index":978,"title":{},"body":{"components/SpotifyPlayerComponent.html":{},"guards/TodoDataResolverService.html":{}}}],["weight:bolder",{"_index":421,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["welcome",{"_index":624,"title":{},"body":{"components/HomePageComponent.html":{}}}],["whole",{"_index":698,"title":{},"body":{"injectables/HttpService.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{},"components/TodoListComponent.html":{}}}],["width:100",{"_index":426,"title":{},"body":{"components/GmailEmailListComponent.html":{}}}],["width:15",{"_index":1319,"title":{},"body":{"components/TodoListComponent.html":{}}}],["width:90",{"_index":831,"title":{},"body":{"components/SpotifyHomeComponent.html":{},"components/SpotifySearchComponent.html":{}}}],["width:98",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.href",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["with_device",{"_index":1018,"title":{},"body":{"injectables/SpotifyPlayerService.html":{}}}],["without",{"_index":1194,"title":{},"body":{"guards/TodoDataResolverService.html":{}}}],["works",{"_index":320,"title":{},"body":{"components/GithubComponent.html":{}}}],["y:scroll",{"_index":414,"title":{},"body":{"components/GmailEmailListComponent.html":{},"components/ReadEmailComponent.html":{}}}],["z",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/GmailModule.html":{},"modules/SpotifyModule.html":{},"modules/TodoListModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                isLoggedOnGmail\n                            \n                            \n                                isLoggedOnSpotify\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRouterEventReceived\n                            \n                            \n                                toggleSidenav\n                            \n                            \n                                triggerGmailLoginProcedure\n                            \n                            \n                                triggerLoginProcedure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bpObserver: BreakpointObserver, gmailSvc: GmailService, spotifySvc: SpotifyService, http: HttpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bpObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gmailSvc\n                                                  \n                                                        \n                                                                        GmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifySvc\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRouterEventReceived\n                        \n                        \n                    \n                \n            \n            \n                \nonRouterEventReceived(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            triggerGmailLoginProcedure\n                        \n                        \n                    \n                \n            \n            \n                \ntriggerGmailLoginProcedure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            triggerLoginProcedure\n                        \n                        \n                    \n                \n            \n            \n                \ntriggerLoginProcedure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'black'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedOnGmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedOnSpotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSmallScreen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dashboard'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { SpotifyService } from './Spotify/services/spotify.service';\nimport { HttpService } from './services/http.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { GmailService } from './gmail/services/gmail.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit, OnInit {\n  opened = true;\n  title = 'dashboard';\n  isLoggedOnSpotify = false;\n  isLoggedOnGmail = false;\n  isSmallScreen = false;\n  color = 'black';\n  constructor(private bpObserver: BreakpointObserver, private gmailSvc: GmailService, private spotifySvc: SpotifyService, private http: HttpService, private router: Router) {\n\n    this.router.events.subscribe(this.onRouterEventReceived.bind(this));\n  }\n\n  ngOnInit() {\n    this.isLoggedOnSpotify = this.spotifySvc.checkSpotifyStatus();\n    this.isLoggedOnGmail = this.gmailSvc.checkGmailStatus();\n  }\n\n\n\n  ngAfterViewInit() {\n    this.isSmallScreen = this.bpObserver.isMatched('(max-width: 599px)');\n\n  }\n\n  onRouterEventReceived(val: any) {\n\n    if(val instanceof NavigationEnd) {\n      if(val.url.includes('/spotify/logged')) {\n        this.isLoggedOnSpotify = this.spotifySvc.checkSpotifyStatus();\n        this.router.navigate(['spotify'])\n      } else if(val.url.includes('/gmail/logged')) {\n        this.isLoggedOnGmail = this.gmailSvc.checkGmailStatus();\n        this.router.navigate(['gmail']);\n      }\n    }\n  }\n\n  toggleSidenav() {\n    this.opened = !this.opened;\n  }\n\n  triggerLoginProcedure() {\n    this.http.getSpotifyAuthUrl().subscribe((response: any) => {\n      window.location.href = response.url;\n    })\n  }\n\n  triggerGmailLoginProcedure() {\n    this.http.getGmailAuthUrl().subscribe((response: any) => {\n      window.location.href = response.url;\n    })\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      menu\n    \n    My dashboard\n  \n\n\n  \n\n\n\n    \n      \n        \n          Todo List\n\n        \n\n        List\n        Add\n\n\n      \n\n\n      \n        \n          GitHub\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          RSS\n\n        \n\n        My projects\n        Add an element\n\n\n      \n      \n        \n          GMail\n\n        \n\n        Click here to login\n        Home\n\n      \n      \n        \n          Spotify\n\n        \n\n        Click here to login\n        Home\n\n      \n    \n\n    \n\n    \n      \n\n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .example-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .clickable {\n      cursor: pointer;\n  }\n\n  .sidenav {\n\n      z-index: 10;\n  }\n\n  .toolbar {\n      min-height:5vh;\n      max-height:5vh;\n  }\n\n  .sidenav {\n      height:95vh;\n  }\n\n  app-spotify-player {\n    width:98%;\n    position:absolute;\n    bottom:0;\n    height:15vh;\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        My dashboard                                Todo List                List        Add                              GitHub                My projects        Add an element                              RSS                My projects        Add an element                              GMail                Click here to login        Home                              Spotify                Click here to login        Home                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGmailModule\n\nGmailModule\n\nAppModule -->\n\nGmailModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSpotifyModule\n\nSpotifyModule\n\nAppModule -->\n\nSpotifyModule->AppModule\n\n\n\n\n\nTodoListModule\n\nTodoListModule\n\nAppModule -->\n\nTodoListModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GithubComponent\n                        \n                        \n                            HomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GmailModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SpotifyModule\n                        \n                        \n                            TodoListModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatToolbarModule, MatToolbar } from '@angular/material/toolbar';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GithubComponent } from './pages/github/github.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { SpotifyModule } from './Spotify/spotify.module';\nimport { TodoListModule } from './TodoList/todo-list.module';\nimport { SharedModule } from './shared/shared.module';\nimport { GmailModule } from './gmail/gmail.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    GithubComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatTableModule,\n    MatSelectModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    SpotifyModule,\n    TodoListModule,\n    SharedModule,\n    GmailModule\n\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: HomePageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailContainerComponent.html":{"url":"components/EmailContainerComponent.html","title":"component - EmailContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gmail/components/email-container/email-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.ShadowDom\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-container\n            \n\n            \n                styleUrls\n                ./email-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                htmlContent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/components/email-container/email-container.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/gmail/components/email-container/email-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/components/email-container/email-container.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-email-container',\n  templateUrl: './email-container.component.html',\n  styleUrls: ['./email-container.component.css'],\n  encapsulation: ViewEncapsulation.ShadowDom // Used to contain the styles inside the component\n})\nexport class EmailContainerComponent implements OnInit {\n\n  @Input() htmlContent: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./email-container.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GetEmailResolver.html":{"url":"guards/GetEmailResolver.html","title":"guard - GetEmailResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GetEmailResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/gmail/resolvers/email-data.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(gmailService: GmailService, httpService: HttpService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/resolvers/email-data.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gmailService\n                                                  \n                                                        \n                                                                        GmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/resolvers/email-data.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { HttpService } from 'src/app/services/http.service';\nimport { GmailCustomEmail } from '../interfaces/gmail-custom-email.interface';\nimport { GmailEmail } from '../interfaces/gmail-email.interface';\nimport { GmailService } from '../services/gmail.service';\n\n@Injectable()\nexport class GetEmailResolver implements Resolve {\n  constructor(private gmailService: GmailService, private httpService: HttpService, private route: ActivatedRoute) {}\n\n  resolve(route: ActivatedRouteSnapshot) : Observable {\n    const emailId = route.paramMap.get('emailid');\n\n    return new Observable((observer) => {\n\n      if(this.gmailService.containsEmailWithId(emailId)) {\n        observer.next(this.gmailService.getCachedEmail(emailId));\n        observer.complete();\n\n      }\n\n      this.httpService.getIndividualEmailInfo(emailId).subscribe((emailInfo: GmailEmail) => {\n        const filteredEmail = this.gmailService.filterEmailInfo(emailInfo);\n\n        observer.next(filteredEmail);\n        observer.complete();\n\n      });\n\n      if(this.gmailService.containsEmailWithId(emailId)) {\n        return this.gmailService.getCachedEmail(emailId);\n      }\n\n      this.httpService.getIndividualEmailInfo(emailId).subscribe((emailInfo: GmailEmail) => {\n        const filteredEmail = this.gmailService.filterEmailInfo(emailInfo);\n        console.log(filteredEmail);\n        return {emailContent: filteredEmail};\n\n      });\n\n\n    })\n\n\n\n\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubComponent.html":{"url":"components/GithubComponent.html","title":"component - GithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/github/github.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github\n            \n\n            \n                styleUrls\n                ./github.component.css\n            \n\n\n\n            \n                templateUrl\n                ./github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/github/github.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/github/github.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.css']\n})\nexport class GithubComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        github works!\n\n    \n\n    \n                \n                    ./github.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'github works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GmailComponent.html":{"url":"components/GmailComponent.html","title":"component - GmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gmail/gmail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gmail\n            \n\n            \n                styleUrls\n                ./gmail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gmail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gmailService: GmailService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/gmail.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gmailService\n                                                  \n                                                        \n                                                                        GmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/gmail.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { HttpService } from '../services/http.service';\nimport { GmailService } from './services/gmail.service';\n\n@Component({\n  selector: 'app-gmail',\n  templateUrl: './gmail.component.html',\n  styleUrls: ['./gmail.component.css']\n})\nexport class GmailComponent implements OnInit {\n\n  constructor(private gmailService: GmailService, private titleService: Title) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('gmailToken')) {\n      this.gmailService.fetchEmailList();\n      this.titleService.setTitle('Email list');\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./gmail.component.css\n                \n                #container {\n  max-height:90vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GmailCustomEmail.html":{"url":"classes/GmailCustomEmail.html","title":"class - GmailCustomEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GmailCustomEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gmail/interfaces/gmail-custom-email.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                htmlContent\n                            \n                            \n                                id\n                            \n                            \n                                internalDate\n                            \n                            \n                                isRead\n                            \n                            \n                                snippet\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            from\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snippet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-custom-email.interface.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GmailCustomEmail {\n  id: string;\n  snippet: string;\n  isRead: boolean;\n  from: string;\n  internalDate: number;\n  subject: string;\n  htmlContent: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GmailEmail.html":{"url":"classes/GmailEmail.html","title":"class - GmailEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GmailEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gmail/interfaces/gmail-email.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                internalDate\n                            \n                            \n                                labelIds\n                            \n                            \n                                payload\n                            \n                            \n                                snippet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-email.interface.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-email.interface.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-email.interface.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-email.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snippet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/interfaces/gmail-email.interface.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GmailEmail {\n  id: string;\n  internalDate: number;\n  labelIds: Array;\n  payload: {\n    headers: [\n      {\n        name:string,\n        value: string\n      }\n    ],\n    body: {\n      size: number,\n      data: string\n    },\n    parts: [\n      {\n        mimeType: string,\n        body: {\n          data: string\n        }\n      }\n    ]\n  };\n  snippet: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GmailEmailListComponent.html":{"url":"components/GmailEmailListComponent.html","title":"component - GmailEmailListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GmailEmailListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-list\n            \n\n            \n                styleUrls\n                ./gmail-email-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gmail-email-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currPageIndex\n                            \n                            \n                                    Private\n                                currPageSize\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                emailList\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadNewList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gmailService: GmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gmailService\n                                                  \n                                                        \n                                                                        GmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadNewList\n                        \n                        \n                    \n                \n            \n            \n                \nloadNewList(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currPageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currPageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['from', 'snippet']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emailList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { GmailCustomEmail } from '../../interfaces/gmail-custom-email.interface';\nimport { GmailEmail } from '../../interfaces/gmail-email.interface';\nimport { GmailService } from '../../services/gmail.service';\n\n@Component({\n  selector: 'app-email-list',\n  templateUrl: './gmail-email-list.component.html',\n  styleUrls: ['./gmail-email-list.component.css'],\n  animations: [\n    trigger('emailElem', [\n      transition('void => *', [\n        style({\n          transform: 'translateY(50px)',\n          opacity: '0'\n        }),\n        animate(250, style({\n          transform: 'translateY(0)',\n          opacity: '1'\n        }))\n      ])\n    ])\n  ]\n})\nexport class GmailEmailListComponent implements OnInit {\n\n  public emailList: Array = [];\n  public displayedColumns: Array = ['from', 'snippet'];\n\n  private currPageSize = 50;\n  private currPageIndex = 1;\n\n  isLoading = false;\n\n  constructor(private gmailService: GmailService) { }\n\n  ngOnInit(): void {\n\n    this.isLoading = true;\n    this.gmailService.onNewEmailListPosted.subscribe((newEmailList: Array) => {\n      this.isLoading = false;\n      this.emailList = newEmailList;\n    })\n  }\n\n  ngOnDestroy() {\n    this.emailList = [];\n  }\n\n  loadNewList(event: any) {\n    this.emailList = [];\n    this.isLoading = true;\n    this.gmailService.fetchEmailList(event.pageSize, this.gmailService.pageToken);\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n       Sender \n      {{ email.from | slice:0:20 }}\n    \n    \n       Content \n       {{ email.snippet }}\n    \n\n\n    \n    \n\n  \n\n\n\n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./gmail-email-list.component.css\n                \n                :host {\n  max-height:90vh;\n  display:block;\n}\n\ntable {\n  height:70vh;\n  display:block;\n  overflow-y:scroll;\n}\n\n\n.mat-header-row {\n  position: sticky;\n  top: 0;\n}\n\n.unread {\n  font-weight:bolder;\n}\n\ntr:hover {\n  cursor:pointer;\n}\n\n#spinner-container {\n  display:flex;\n  width:100%;\n  height: 90vh;\n  justify-content: space-around;\n  align-items:center;\n}\n\n.hidden {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Sender       {{ email.from | slice:0:20 }}               Content        {{ email.snippet }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GmailEmailListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GmailModule.html":{"url":"modules/GmailModule.html","title":"module - GmailModule","body":"\n                   \n\n\n\n\n    Modules\n    GmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GmailModule\n\n\n\ncluster_GmailModule_declarations\n\n\n\ncluster_GmailModule_imports\n\n\n\n\nEmailContainerComponent\n\nEmailContainerComponent\n\n\n\nGmailModule\n\nGmailModule\n\nGmailModule -->\n\nEmailContainerComponent->GmailModule\n\n\n\n\n\nGmailComponent\n\nGmailComponent\n\nGmailModule -->\n\nGmailComponent->GmailModule\n\n\n\n\n\nGmailEmailListComponent\n\nGmailEmailListComponent\n\nGmailModule -->\n\nGmailEmailListComponent->GmailModule\n\n\n\n\n\nGmailStoreTokenComponent\n\nGmailStoreTokenComponent\n\nGmailModule -->\n\nGmailStoreTokenComponent->GmailModule\n\n\n\n\n\nReadEmailComponent\n\nReadEmailComponent\n\nGmailModule -->\n\nReadEmailComponent->GmailModule\n\n\n\n\n\nGmailRoutingModule\n\nGmailRoutingModule\n\nGmailModule -->\n\nGmailRoutingModule->GmailModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGmailModule -->\n\nSharedModule->GmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/gmail/gmail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EmailContainerComponent\n                        \n                        \n                            GmailComponent\n                        \n                        \n                            GmailEmailListComponent\n                        \n                        \n                            GmailStoreTokenComponent\n                        \n                        \n                            ReadEmailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GmailRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GmailComponent } from './gmail.component';\nimport { GmailRoutingModule } from './gmail.routing';\nimport { GmailStoreTokenComponent } from './components/gmailstoretoken/gmailstoretoken.component';\nimport { GmailEmailListComponent } from './components/gmail-email-list/gmail-email-list.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReadEmailComponent } from './pages/read-email/read-email.component';\nimport { EmailContainerComponent } from './components/email-container/email-container.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n@NgModule({\n  declarations: [\n    GmailComponent,\n    GmailStoreTokenComponent,\n    GmailEmailListComponent,\n    ReadEmailComponent,\n    EmailContainerComponent,\n  ],\n  imports: [\n    GmailRoutingModule,\n    SharedModule,\n    MatPaginatorModule\n  ],\n  exports: [\n\n  ],\n  providers: [],\n})\nexport class GmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GmailRoutingModule.html":{"url":"modules/GmailRoutingModule.html","title":"module - GmailRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GmailRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/gmail/gmail.routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { GmailComponent } from './gmail.component';\nimport { GmailStoreTokenComponent } from './components/gmailstoretoken/gmailstoretoken.component';\nimport { ReadEmailComponent } from './pages/read-email/read-email.component';\nimport { GetEmailResolver } from './resolvers/email-data.resolver';\n\n\nconst routes: Routes = [\n  {\n    path: 'gmail', component: GmailComponent\n  },\n  {\n    path: 'gmail/logged', component: GmailComponent\n  },\n  {\n    path: 'gmail/read-email/:emailid', component: ReadEmailComponent,\n    resolve: {\n      emailContent: GetEmailResolver\n    }\n  },\n  {\n    path: 'gmail/store-token/:token/:expires', component: GmailStoreTokenComponent\n  }\n]\n\n@NgModule({\n\n  imports: [\n\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    GetEmailResolver\n  ]\n\n})\n\nexport class GmailRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailService.html":{"url":"injectables/GmailService.html","title":"injectable - GmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gmail/services/gmail.service.ts\n        \n\n            \n                Description\n            \n            \n                The service that handles all playback actions with Spotify\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cachedMessages\n                            \n                            \n                                    Private\n                                messageBox\n                            \n                            \n                                    Private\n                                newEmailListPosted\n                            \n                            \n                                    Private\n                                nextPageToken\n                            \n                            \n                                    Public\n                                onNewEmailListPosted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkGmailStatus\n                            \n                            \n                                containsEmailWithId\n                            \n                            \n                                fetchEmailList\n                            \n                            \n                                filterEmailInfo\n                            \n                            \n                                getCachedEmail\n                            \n                            \n                                    Private\n                                makeGetCallOnEmail\n                            \n                            \n                                markEmailAsRead\n                            \n                            \n                                markEmailAsUnread\n                            \n                            \n                                    Private\n                                parseEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pageToken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/services/gmail.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkGmailStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckGmailStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsEmailWithId\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsEmailWithId(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchEmailList\n                        \n                        \n                    \n                \n            \n            \n                \nfetchEmailList(limit: number, token: null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:42\n                \n            \n\n\n            \n                \n                    Retrieves the email id list, then makes another call per email to get content\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        50\n                                    \n\n                                \n                                \n                                    token\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterEmailInfo\n                        \n                        \n                    \n                \n            \n            \n                \nfilterEmailInfo(emailInfo: GmailEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailInfo\n                                    \n                                                GmailEmail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GmailCustomEmail\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCachedEmail\n                        \n                        \n                    \n                \n            \n            \n                \ngetCachedEmail(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            makeGetCallOnEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeGetCallOnEmail(message: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:66\n                \n            \n\n\n            \n                \n                    Makes the call to get the email with id message.id, returns observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message object, containing the ID of the email we want to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markEmailAsRead\n                        \n                        \n                    \n                \n            \n            \n                \nmarkEmailAsRead(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markEmailAsUnread\n                        \n                        \n                    \n                \n            \n            \n                \nmarkEmailAsUnread(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseEmail(emailInfo: GmailEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/services/gmail.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailInfo\n                                    \n                                                GmailEmail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cachedMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/services/gmail.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messageBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/services/gmail.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newEmailListPosted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/services/gmail.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nextPageToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/services/gmail.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onNewEmailListPosted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.newEmailListPosted.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/services/gmail.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pageToken\n                    \n                \n\n                \n                    \n                        getpageToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/gmail/services/gmail.service.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { emit } from 'process';\nimport { forkJoin, Observable, Subject } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\nimport { GmailCustomEmail } from '../interfaces/gmail-custom-email.interface';\nimport { GmailEmail } from '../interfaces/gmail-email.interface';\nimport * as quotedPrintable from 'quoted-printable';\nimport { map } from 'rxjs/operators';\n\n/**\n * The service that handles all playback actions with Spotify\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GmailService {\n\n  private newEmailListPosted: Subject = new Subject();\n  public onNewEmailListPosted = this.newEmailListPosted.asObservable();\n\n  // TODO: merge these 2 properties\n  private cachedMessages: Object = {};\n  private messageBox = [];\n\n  private nextPageToken = '';\n\n  constructor(private http: HttpService) {\n\n  }\n\n  get pageToken()  {\n    return this.nextPageToken;\n  }\n\n  checkGmailStatus() {\n    return localStorage.getItem('gmailToken') != null && parseInt(localStorage.getItem('gmailExp')) > (new Date().getTime());\n  }\n\n  /**\n   * Retrieves the email id list, then makes another call per email to get content\n   */\n  fetchEmailList(limit = 50, token = null) {\n\n    // First call to get the email list\n    this.http.getEmailList(limit, token).subscribe((response: {messages: Array, nextPageToken: string}) => {\n\n      this.nextPageToken = response.nextPageToken;\n\n      // Then we make a call for each\n      const messagesToFetch = response.messages.map(this.makeGetCallOnEmail.bind(this));\n\n      // When all calls are finished, we post the email list\n      forkJoin(messagesToFetch).subscribe({\n        complete: () => {\n          this.newEmailListPosted.next(this.messageBox);\n          this.messageBox = [];\n        }\n      });\n    });\n  }\n\n  /**\n   * Makes the call to get the email with id message.id, returns observable\n   * @param message The message object, containing the ID of the email we want to get\n   */\n  private makeGetCallOnEmail(message: {id: string, threadId: string}) {\n    return this.http.getIndividualEmailInfo(message.id).pipe(map(this.parseEmail.bind(this)));\n  }\n\n  private parseEmail(emailInfo: GmailEmail) {\n\n      const filteredEmail = this.filterEmailInfo(emailInfo);\n      this.cachedMessages[emailInfo.id] = filteredEmail;\n\n      // We push the message in messages to use it in GmailEmailComponent\n      this.messageBox.push(filteredEmail);\n  }\n\n  getCachedEmail(emailId: string) {\n    return this.cachedMessages[emailId];\n  }\n\n  filterEmailInfo(emailInfo: GmailEmail) : GmailCustomEmail {\n\n    const id = emailInfo.id;\n    const internalDate = emailInfo.internalDate;\n    const isRead = !emailInfo.labelIds.includes('UNREAD');\n\n    const snippet = quotedPrintable.decode(emailInfo.snippet);\n\n    const sender = emailInfo.payload.headers.filter((currHeader: {name: string, value: string}) => {\n      return currHeader.name === 'From';\n    })[0].value;\n\n    const subject = emailInfo.payload.headers.filter((currHeader: {name: string, value: string}) => {\n      return currHeader.name === 'Subject';\n    })[0].value;\n\n    let htmlContentAsBase64;\n\n    if(emailInfo.payload.body.size !== 0) {\n      htmlContentAsBase64 = emailInfo.payload.body.data;\n    } else { // Otherwise we check in parts\n\n      // TODO: Add recursion on part search\n      let filteredParts = emailInfo.payload.parts.filter((currPart: { mimeType: string, body: {data: string}}) => {\n        return currPart.mimeType === 'text/html';\n      });\n\n      if(filteredParts.length === 0) {\n        htmlContentAsBase64 = '';\n      } else {\n        htmlContentAsBase64 = filteredParts[0].body.data;\n      }\n    }\n\n\n    // https://stackoverflow.com/questions/24745006/gmail-api-parse-message-content-base64-decoding-with-javascript\n    const htmlContent = atob( htmlContentAsBase64.replace(/-/g, '+').replace(/_/g, '/') );\n\n    return {\n      id: id,\n      internalDate: internalDate,\n      isRead: isRead,\n      snippet: snippet,\n      from: sender,\n      subject: subject,\n      htmlContent: htmlContent\n    };\n  }\n\n  containsEmailWithId(emailId: string) : boolean {\n    return this.cachedMessages[emailId] != null;\n  }\n\n  markEmailAsRead(id: string) {\n    return this.http.modifyEmail(id, {\n      \"removeLabelIds\": [\n        'UNREAD'\n      ]\n    });\n  }\n\n  markEmailAsUnread(id: string) {\n    // this.http.modifyEmail({\n    //   \"addLabelIds\": [\n    //     'UNREAD'\n    //   ]\n    // });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GmailStoreTokenComponent.html":{"url":"components/GmailStoreTokenComponent.html","title":"component - GmailStoreTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GmailStoreTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gmailstoretoken\n            \n\n            \n                styleUrls\n                ./gmailstoretoken.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gmailstoretoken.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-gmailstoretoken',\n  templateUrl: './gmailstoretoken.component.html',\n  styleUrls: ['./gmailstoretoken.component.css']\n})\nexport class GmailStoreTokenComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.route.params.subscribe((params: any) => {\n      localStorage.setItem('gmailToken', params.token);\n      localStorage.setItem('gmailExp', params.expires);\n      this.router.navigate(['gmail/logged']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./gmailstoretoken.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GmailStoreTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleSvc: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home-page/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home-page/home-page.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor(private titleSvc: Title) {\n    this.titleSvc.setTitle('Dashboard - Home Page')\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Welcome to my dashboard !\nThis dashboard contains : \n\n\n  A todo-list linked to a Mongo DB\n  Support for Spotify's API\n\n\nWith the todo list, you can : \n\n  Create a todo\n  Edit a todo\n  Delete a todo\n  Save the todo list\n\n\nWith Spotify, you can perform some actions when logging in, like :\n\n  Search an artist, an album or a track\n  Play any of these three (try it out !)\n  Volume & Play / pause controls\n  And many more features to come...\n\n\n    \n\n    \n                \n                    ./home-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome to my dashboard !This dashboard contains :   A todo-list linked to a Mongo DB  Support for Spotify\\'s APIWith the todo list, you can :   Create a todo  Edit a todo  Delete a todo  Save the todo listWith Spotify, you can perform some actions when logging in, like :  Search an artist, an album or a track  Play any of these three (try it out !)  Volume & Play / pause controls  And many more features to come...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTodo\n                            \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                deleteTodoElement\n                            \n                            \n                                editTodo\n                            \n                            \n                                getEmailList\n                            \n                            \n                                getGmailAuthUrl\n                            \n                            \n                                getIndividualEmailInfo\n                            \n                            \n                                getSpotifyAuthUrl\n                            \n                            \n                                getTodoList\n                            \n                            \n                                modifyEmail\n                            \n                            \n                                refreshSpotifyToken\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:94\n                \n            \n\n\n            \n                \n                    Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\nIf not, return error\nIf token missing, returns the Spotify login url\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodoElement\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodoElement(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:69\n                \n            \n\n\n            \n                \n                    Calls the server which will delete the todo with the id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the todo to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(idTodo: string, todoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:53\n                \n            \n\n\n            \n                \n                    Calls the server which will search idTodo and replace its content by todoData\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the todo to edit\n\n                                    \n                                \n                                \n                                    todoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The content of the todo to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailList\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailList(limit: number, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGmailAuthUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetGmailAuthUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndividualEmailInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndividualEmailInfo(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpotifyAuthUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpotifyAuthUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:108\n                \n            \n\n\n            \n                \n                    Calls the server to retrieve Spotify's auth url\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoList\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:18\n                \n            \n\n\n            \n                \n                    Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyEmail(id: string, form: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSpotifyToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSpotifyToken(refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:102\n                \n            \n\n\n            \n                \n                    Calls the server, which will call Spotify's API to regenerate a token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The refresh token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList(todoList: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http.service.ts:35\n                \n            \n\n\n            \n                \n                    Saves the current todo-list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    todoList\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo-list which will be save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Todo } from '../TodoList/models/todo';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  /**\n   * Calls SERVER_ROOT/todos, fetches the whole todo-list from Mongo\n   */\n  getTodoList() {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.get>(environment.serverRoot + '/todos', reqOpts);\n\n  }\n\n  /**\n   * Saves the current todo-list\n   * @param todoList The todo-list which will be save\n   */\n  saveTodoList(todoList: Array) {\n\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST'\n      })\n    };\n\n\n    return this.http.post(environment.serverRoot + '/todos', {todos: todoList}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will search idTodo and replace its content by todoData\n   * @param idTodo The ID of the todo to edit\n   * @param todoData The content of the todo to edit\n   */\n  editTodo(idTodo: string, todoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE'\n      })\n    };\n\n\n    return this.http.put(environment.serverRoot + '/todos/' + idTodo, {todo: todoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server which will delete the todo with the id idTodo\n   * @param idTodo The id of the todo to delete\n   */\n  deleteTodoElement(idTodo: string) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT,DELETE'\n      })\n    };\n    return this.http.delete(environment.serverRoot + '/todos/' + idTodo, reqOpts);\n  }\n\n  addNewTodo(newTodoData: Todo) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, DELETE'\n      })\n    };\n    return this.http.post(environment.serverRoot + '/todos/', {todo: newTodoData}, reqOpts);\n  }\n\n  /**\n   * Calls the server to perform a precheck of Spotify (if the clientID and clientSecret are present)\n   * If not, return error\n   * If token missing, returns the Spotify login url\n   */\n  checkSpotifyStatus() {\n    return this.http.get(environment.serverRoot + '/spotify/precheck');\n  }\n\n  /**\n   * Calls the server, which will call Spotify's API to regenerate a token\n   * @param refreshToken The refresh token\n   */\n  refreshSpotifyToken(refreshToken: string) {\n    return this.http.get(environment.serverRoot + '/spotify/refresh-token/' + refreshToken);\n  }\n  /**\n   * Calls the server to retrieve Spotify's auth url\n   */\n  getSpotifyAuthUrl() {\n    return this.http.get(environment.serverRoot + '/spotify/get-url');\n  }\n\n  getGmailAuthUrl() {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT,DELETE'\n      })\n    };\n\n    return this.http.get(environment.serverRoot + '/gmail/get-url', reqOpts);\n  }\n\n  getEmailList(limit: number, token: string) {\n\n    const params = new URLSearchParams();\n\n    params.append('max_results', limit.toString());\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + localStorage.getItem('gmailToken')\n      })\n    };\n\n    if(token) {\n      params.append('pageToken', token);\n    }\n\n    return this.http.get(`https://gmail.googleapis.com/gmail/v1/users/me/messages?` + params.toString(), reqOpts);\n  }\n\n  getIndividualEmailInfo(emailId: string) {\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + localStorage.getItem('gmailToken')\n      })\n    };\n\n\n    return this.http.get(\"https://gmail.googleapis.com/gmail/v1/users/me/messages/\" + emailId, reqOpts);\n\n  }\n\n\n  modifyEmail(id: string, form: object) {\n\n    const reqOpts = {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + localStorage.getItem('gmailToken')\n      })\n    };\n\n    return this.http.post('https://gmail.googleapis.com/gmail/v1/users/me/messages/' + id + '/modify', form, reqOpts);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadEmailComponent.html":{"url":"components/ReadEmailComponent.html","title":"component - ReadEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gmail/pages/read-email/read-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-read-email\n            \n\n            \n                styleUrls\n                ./read-email.component.css\n            \n\n\n\n            \n                templateUrl\n                ./read-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailContent\n                            \n                            \n                                timeoutMarkEmailAsReadId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gmailService: GmailService, route: ActivatedRoute, sanitizer: DomSanitizer, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/gmail/pages/read-email/read-email.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gmailService\n                                                  \n                                                        \n                                                                        GmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/pages/read-email/read-email.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/gmail/pages/read-email/read-email.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/pages/read-email/read-email.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutMarkEmailAsReadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gmail/pages/read-email/read-email.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { GmailCustomEmail } from '../../interfaces/gmail-custom-email.interface';\nimport { GmailService } from '../../services/gmail.service';\n\n@Component({\n  selector: 'app-read-email',\n  templateUrl: './read-email.component.html',\n  styleUrls: ['./read-email.component.css']\n})\nexport class ReadEmailComponent implements OnInit, OnDestroy {\n\n  emailContent: any;\n\n  timeoutMarkEmailAsReadId: any;\n  constructor(private gmailService: GmailService, private route: ActivatedRoute, private sanitizer: DomSanitizer, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe((data: { emailContent: GmailCustomEmail}) => {\n      this.emailContent = data.emailContent;\n\n      // Required to display the inline styles\n      this.emailContent.htmlContent = this.sanitizer.bypassSecurityTrustHtml(this.emailContent.htmlContent);\n\n      this.timeoutMarkEmailAsReadId = setTimeout(() => {\n        this.gmailService.markEmailAsRead(this.emailContent.id).subscribe(() => {\n          this.snackbar.open('Email marked as read', null, {\n            duration: 10000\n          });\n\n        });\n      }, 5000);\n    });\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.timeoutMarkEmailAsReadId);\n  }\n\n}\n\n    \n\n    \n        {{emailContent.subject}}\n\n\n\n  From : {{emailContent.from}}\n  \n\n\n    \n\n    \n                \n                    ./read-email.component.css\n                \n                #email_container {\n  max-height:80vh;\n  overflow-y:scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{emailContent.subject}}  From : {{emailContent.from}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReadEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { RouterModule } from '@angular/router';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Song.html":{"url":"interfaces/Song.html","title":"interface - Song","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Spotify/services/song.ts\n        \n\n            \n                Description\n            \n            \n                Represents a song (used in the player)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        album\n                                \n                                \n                                        artist\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the album\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe name of the artist\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the album's image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the song\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Song {\n  /**\n   * The title of the song\n   */\n  title: string;\n  /**\n   * THe name of the artist\n   */\n  artist: string;\n  /**\n   * The name of the album\n   */\n  album: string;\n  /**\n   * The URL of the album's image\n   */\n  imageUrl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyHomeComponent.html":{"url":"components/SpotifyHomeComponent.html","title":"component - SpotifyHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Spotify/pages/spotify-home/spotify-home.component.ts\n\n\n    \n        Description\n    \n    \n        The homepage of Spotify\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-home\n            \n\n            \n                styleUrls\n                ./spotify-home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                needsLogin\n                            \n                            \n                                spotifyAuthUrl\n                            \n                            \n                                spotifyOK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSpotifyStatus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleSvc: Title, http: HttpService, spotifyService: SpotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifyService\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \nhandleSpotifyStatus(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:32\n                \n            \n\n\n            \n                \n                    On init, check Spotify's statud\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needsLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyAuthUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyOK\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/pages/spotify-home/spotify-home.component.ts:24\n                            \n                        \n\n                \n                    \n                        Boolean indicating if we can make some requests\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/services/http.service';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Title } from '@angular/platform-browser';\n\n\n/**\n * The homepage of Spotify\n */\n@Component({\n  selector: 'app-spotify-home',\n  templateUrl: './spotify-home.component.html',\n  styleUrls: ['./spotify-home.component.css']\n})\nexport class SpotifyHomeComponent implements OnInit {\n  needsLogin = false;\n\n\n\n  spotifyAuthUrl = '';\n  /**\n   * Boolean indicating if we can make some requests\n   */\n  spotifyOK = false;\n  constructor(private titleSvc: Title, private http: HttpService, private spotifyService: SpotifyService) {\n    this.titleSvc.setTitle('Spotify - Home')\n  }\n\n  /**\n   * On init, check Spotify's statud\n   */\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('spotifyToken')) {\n\n        this.http.checkSpotifyStatus().subscribe(this.handleSpotifyStatus.bind(this));\n    } else {\n      this.spotifyOK = true;\n    }\n\n\n\n  }\n\n  handleSpotifyStatus(response: {status: string, url?: string}) {\n    if(response.status === 'OK') {\n      this.spotifyOK = true;\n    } else {\n      this.spotifyOK = false;\n      this.spotifyAuthUrl = response.url;\n    }\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n  You don't seem to be logged. Please click here.\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./spotify-home.component.css\n                \n                .full-width {\n  width:90%;\n}\n\n::ng-deep .mat-option-text {\n  display:flex !important;\n  justify-content: space-between;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  You don\\'t seem to be logged. Please click here.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SpotifyInterceptor.html":{"url":"interceptors/SpotifyInterceptor.html","title":"interceptor - SpotifyInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  SpotifyInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Spotify/interceptors/spotify.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Checks if the token is still valid, if not, will request a refresh token\nTODO : rewrite\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpSvc: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/interceptors/spotify.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpSvc\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/interceptors/spotify.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../../services/http.service';\n\n/**\n * Checks if the token is still valid, if not, will request a refresh token\n * TODO : rewrite\n */\n@Injectable()\nexport class SpotifyInterceptor implements HttpInterceptor {\n\n  constructor(private httpSvc: HttpService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n    if(req.url.includes('spotify') && !req.url.includes('refresh-token')) {\n\n      if(localStorage.getItem('spotifyToken')) {\n\n        // If the token is still valid, we simply push the current token to the headers\n        if(parseInt(localStorage.getItem('spotifyExp')) > new Date().getTime()) {\n          req = req.clone({\n            setHeaders: {\n              'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n            }\n          });\n\n        } else { // Otherwise, we will request a new one\n          return new Observable>((observer) => {\n            this.httpSvc.refreshSpotifyToken(localStorage.getItem('spotifyRefresh')).subscribe((response: any) => {\n\n              // We store the token, the refresh, etc\n              localStorage.setItem('spotifyToken', response.token);\n              localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n\n              // Then we relaunch the request using the new token\n              let request = req.clone({\n                setHeaders: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('spotifyToken')\n                }\n              });\n\n              return next.handle(request);\n            })\n          })\n\n        }\n      }\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpotifyModule.html":{"url":"modules/SpotifyModule.html","title":"module - SpotifyModule","body":"\n                   \n\n\n\n\n    Modules\n    SpotifyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpotifyModule\n\n\n\ncluster_SpotifyModule_declarations\n\n\n\ncluster_SpotifyModule_imports\n\n\n\ncluster_SpotifyModule_exports\n\n\n\ncluster_SpotifyModule_providers\n\n\n\n\nSpotifyHomeComponent\n\nSpotifyHomeComponent\n\n\n\nSpotifyModule\n\nSpotifyModule\n\nSpotifyModule -->\n\nSpotifyHomeComponent->SpotifyModule\n\n\n\n\n\nSpotifyPlayerComponent\n\nSpotifyPlayerComponent\n\nSpotifyModule -->\n\nSpotifyPlayerComponent->SpotifyModule\n\n\n\n\n\nSpotifySearchComponent\n\nSpotifySearchComponent\n\nSpotifyModule -->\n\nSpotifySearchComponent->SpotifyModule\n\n\n\n\n\nSpotifyStoreTokenComponent\n\nSpotifyStoreTokenComponent\n\nSpotifyModule -->\n\nSpotifyStoreTokenComponent->SpotifyModule\n\n\n\n\n\nSpotifyHomeComponent \n\nSpotifyHomeComponent \n\nSpotifyHomeComponent  -->\n\nSpotifyModule->SpotifyHomeComponent \n\n\n\n\n\nSpotifyPlayerComponent \n\nSpotifyPlayerComponent \n\nSpotifyPlayerComponent  -->\n\nSpotifyModule->SpotifyPlayerComponent \n\n\n\n\n\nSpotifySearchComponent \n\nSpotifySearchComponent \n\nSpotifySearchComponent  -->\n\nSpotifyModule->SpotifySearchComponent \n\n\n\n\n\nSpotifyStoreTokenComponent \n\nSpotifyStoreTokenComponent \n\nSpotifyStoreTokenComponent  -->\n\nSpotifyModule->SpotifyStoreTokenComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSpotifyModule -->\n\nSharedModule->SpotifyModule\n\n\n\n\n\nSpotifyRoutingModule\n\nSpotifyRoutingModule\n\nSpotifyModule -->\n\nSpotifyRoutingModule->SpotifyModule\n\n\n\n\n\nSpotifyInterceptor\n\nSpotifyInterceptor\n\nSpotifyModule -->\n\nSpotifyInterceptor->SpotifyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Spotify/spotify.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpotifyHomeComponent\n                        \n                        \n                            SpotifyPlayerComponent\n                        \n                        \n                            SpotifySearchComponent\n                        \n                        \n                            SpotifyStoreTokenComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SpotifyInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SpotifyRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpotifyHomeComponent\n                        \n                        \n                            SpotifyPlayerComponent\n                        \n                        \n                            SpotifySearchComponent\n                        \n                        \n                            SpotifyStoreTokenComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { SpotifyInterceptor } from './interceptors/spotify.interceptor';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\nimport { SpotifyPlayerComponent } from './components/spotify-player/spotify-player.component';\nimport { SpotifySearchComponent } from './components/spotify-search/spotify-search.component';\nimport { SpotifyRoutingModule } from './spotify.routing';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    SpotifyHomeComponent,\n    SpotifySearchComponent,\n    SpotifyStoreTokenComponent,\n    SpotifyPlayerComponent\n  ],\n  imports: [\n    SpotifyRoutingModule,\n    MatSliderModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSelectModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    SharedModule\n  ],\n  exports: [\n    SpotifyHomeComponent,\n    SpotifySearchComponent,\n    SpotifyStoreTokenComponent,\n    SpotifyPlayerComponent\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: SpotifyInterceptor,\n    multi: true\n  }],\n})\nexport class SpotifyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyPlayerComponent.html":{"url":"components/SpotifyPlayerComponent.html","title":"component - SpotifyPlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyPlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Spotify/components/spotify-player/spotify-player.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-player\n            \n\n            \n                styleUrls\n                ./spotify-player.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-player.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currPlayerStatus\n                            \n                            \n                                playbackChanged\n                            \n                            \n                                song\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAvailableDevices\n                            \n                            \n                                getPlaybackInfo\n                            \n                            \n                                goToNextSong\n                            \n                            \n                                goToPreviousSong\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickPlayPause\n                            \n                            \n                                onPreviousOrNextSongTriggered\n                            \n                            \n                                setCurrentSong\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spotifySvc: SpotifyService, spotifyPlayerSvc: SpotifyPlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spotifySvc\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotifyPlayerSvc\n                                                  \n                                                        \n                                                                        SpotifyPlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableDevices\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlaybackInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlaybackInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextSong()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:89\n                \n            \n\n\n            \n                \n                    Calls the endpoint to go to the next song, then gets the info on the current playback after 500ms (bc of asynchronity)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousSong()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:76\n                \n            \n\n\n            \n                \n                    Calls the endpoint to go to the previous song, then gets the info on the current playback after 500ms (bc of asynchronity)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickPlayPause\n                        \n                        \n                    \n                \n            \n            \n                \nonClickPlayPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:57\n                \n            \n\n\n            \n                \n                    Plays / pauses the playback, then reverses the player status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousOrNextSongTriggered\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousOrNextSongTriggered()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:83\n                \n            \n\n\n            \n                \n                    When \"Next song\" or \"Previous song\" is triggered, we fetch the playback's info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentSong\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentSong(song: Song)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:43\n                \n            \n\n\n            \n                \n                    Defines a new song, callback of onPlaybackInfoReceived\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    song\n                                    \n                                                Song\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The song which will be displayed in the player\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVolume\n                        \n                        \n                    \n                \n            \n            \n                \nsetVolume()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currPlayerStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playbackChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            song\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Song\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: 'My song',\n    artist: 'My artist',\n    album: 'My album',\n    imageUrl: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-player/spotify-player.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SpotifyPlayerService } from '../../services/spotify-player.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Song } from 'src/app/Spotify/services/song';\n\n@Component({\n  selector: 'app-spotify-player',\n  templateUrl: './spotify-player.component.html',\n  styleUrls: ['./spotify-player.component.css']\n})\nexport class SpotifyPlayerComponent implements OnInit {\n\n  song: Song = {\n    title: 'My song',\n    artist: 'My artist',\n    album: 'My album',\n    imageUrl: ''\n  };\n\n  playbackChanged : Subscription;\n  volume: number = 20;\n\n  currPlayerStatus = true;\n  constructor(private spotifySvc: SpotifyService, private spotifyPlayerSvc: SpotifyPlayerService) { }\n\n  ngOnInit(): void {\n    this.spotifyPlayerSvc.getInfoOnPlayback().subscribe(this.setCurrentSong.bind(this));\n\n    this.playbackChanged = this.spotifySvc.onPlaybackChanged.subscribe(this.getPlaybackInfo.bind(this));\n\n\n    // TODO: Find another way to handle that\n    setInterval(() => {\n      this.getPlaybackInfo();\n    }, 30000);\n  }\n\n  /**\n   * Defines a new song, callback of onPlaybackInfoReceived\n   * @param song The song which will be displayed in the player\n   */\n  setCurrentSong(song: Song) {\n    this.song = song;\n  }\n\n  getPlaybackInfo() {\n    setTimeout(() => {\n\n      this.spotifyPlayerSvc.getInfoOnPlayback().subscribe(this.setCurrentSong.bind(this));\n    }, 500);\n  }\n\n  /**\n   * Plays / pauses the playback, then reverses the player status\n   */\n  onClickPlayPause() {\n\n    let obs : Observable;\n    // If the current status is \"Play\", we'll pause the playback\n    if(this.currPlayerStatus) {\n      obs = this.spotifyPlayerSvc.pauseSong();\n\n    } else {\n      obs = this.spotifyPlayerSvc.playSong();\n    }\n\n    obs.subscribe((response) => {\n      this.currPlayerStatus = !this.currPlayerStatus;\n    })\n  }\n\n  /**\n   * Calls the endpoint to go to the previous song, then gets the info on the current playback after 500ms (bc of asynchronity)\n   */\n  goToPreviousSong() {\n    this.spotifyPlayerSvc.goToPreviousSong().subscribe(this.getPlaybackInfo.bind(this));\n  }\n\n  /**\n   * When \"Next song\" or \"Previous song\" is triggered, we fetch the playback's info\n   */\n  onPreviousOrNextSongTriggered() {\n    this.getPlaybackInfo();\n  }\n  /**\n   * Calls the endpoint to go to the next song, then gets the info on the current playback after 500ms (bc of asynchronity)\n   */\n  goToNextSong() {\n    this.spotifyPlayerSvc.goToNextSong().subscribe(this.getPlaybackInfo.bind(this));\n  }\n\n  getAvailableDevices() {\n    this.spotifyPlayerSvc.getAvailableDevices();\n  }\n\n  setVolume() {\n    this.spotifyPlayerSvc.setVolume(this.volume);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n\n\n\n        \n\n          \n            \n          \n\n          \n            {{song.title}}\n            {{song.artist}}\n            {{song.album}}\n\n          \n\n        \n\n      \n      \n        \n          skip_previous\n        \n        \n          {{currPlayerStatus ? 'pause' : 'play_arrow'}}\n        \n        \n          skip_next\n        \n      \n\n      \n        \n         -->\n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./spotify-player.component.css\n                \n                #spotify_player_content {\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n}\n\n#song_title_container {\n  display:flex;\n  flex-direction: column;\n}\n\n#song_img_container {\n  margin-right:0.5vw;\n}\n\n#song_container {\n  display:flex;\n  flex-direction:row;\n\n}\n\n#controls {\n  display:flex;\n  align-items: center;\n}\n\n#volume_and_change_device {\n  display:flex;\n  flex-direction:column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{song.title}}            {{song.artist}}            {{song.album}}                                                skip_previous                          {{currPlayerStatus ? \\'pause\\' : \\'play_arrow\\'}}                          skip_next                                     -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyPlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyPlayerService.html":{"url":"injectables/SpotifyPlayerService.html","title":"injectable - SpotifyPlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyPlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Spotify/services/spotify-player.service.ts\n        \n\n            \n                Description\n            \n            \n                The service that handles all playback actions with Spotify\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAvailableDevices\n                            \n                            \n                                getInfoOnPlayback\n                            \n                            \n                                goToNextSong\n                            \n                            \n                                goToPreviousSong\n                            \n                            \n                                onInfoOnPlaybackReceived\n                            \n                            \n                                pauseSong\n                            \n                            \n                                playSong\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/services/spotify-player.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableDevices\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfoOnPlayback\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfoOnPlayback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:36\n                \n            \n\n\n            \n                \n                    Goes to the next song\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousSong\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInfoOnPlaybackReceived\n                        \n                        \n                    \n                \n            \n            \n                \nonInfoOnPlaybackReceived(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { title: any; artist: any; album: any; imageUrl: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pauseSong\n                        \n                        \n                    \n                \n            \n            \n                \npauseSong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:20\n                \n            \n\n\n            \n                \n                    Pauses the playback\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playSong\n                        \n                        \n                    \n                \n            \n            \n                \nplaySong(with_device: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:28\n                \n            \n\n\n            \n                \n                    Plays the playback\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    with_device\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        The device ID that we want to perform the request with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVolume\n                        \n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify-player.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n/**\n * The service that handles all playback actions with Spotify\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyPlayerService {\n\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Pauses the playback\n   * @param with_device The device ID that we want to perform the request with\n   */\n  pauseSong(with_device: string = '') {\n    return this.http.put('https://api.spotify.com/v1/me/player/pause', {});\n  }\n\n  /**\n   * Plays the playback\n   * @param with_device The device ID that we want to perform the request with\n   */\n  playSong(with_device: string = '') {\n    return this.http.put('https://api.spotify.com/v1/me/player/play', {});\n  }\n\n  /**\n   * Goes to the next song\n   * @param with_device The device ID that we want to perform the request with\n   */\n  goToNextSong(with_device: string = '') {\n    return this.http.post('https://api.spotify.com/v1/me/player/next', {});\n  }\n\n  goToPreviousSong(with_device: string = '') {\n    return this.http.post('https://api.spotify.com/v1/me/player/previous', {});\n  }\n\n  getInfoOnPlayback() {\n    return this.http.get('https://api.spotify.com/v1/me/player/currently-playing', {observe: 'response'})\n                    .pipe(map(this.onInfoOnPlaybackReceived.bind(this)));\n  }\n\n  onInfoOnPlaybackReceived(response: {status: number, body?: any}) {\n    if(response.status === 200) {\n      const item = response.body.item;\n\n      return {\n        title: item.name,\n        artist: item.artists[0].name,\n        album: item.album.name,\n        imageUrl: item.album.images[item.album.images.length - 1].url\n      };\n\n    }\n  }\n\n  getAvailableDevices() {\n\n  }\n\n  setVolume(value: number) {\n    this.http.put('https://api.spotify.com/v1/me/player/volume?volume_percent=' + value, {}).subscribe(() => {});\n\n  }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpotifyRoutingModule.html":{"url":"modules/SpotifyRoutingModule.html","title":"module - SpotifyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SpotifyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Spotify/spotify.routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { SpotifyTokenGuard } from './guards/spotify-token.guard';\nimport { SpotifyHomeComponent } from './pages/spotify-home/spotify-home.component';\nimport { SpotifyStoreTokenComponent } from './pages/spotify-store-token/spotify-store-token.component';\n\nconst routes: Routes = [\n  {\n    path: 'spotify', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/logged', component: SpotifyHomeComponent, canActivate: [SpotifyTokenGuard]\n  },\n  {\n    path: 'spotify/store-token/:token/:refresh', component: SpotifyStoreTokenComponent\n  }\n]\n\n@NgModule({\n\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n\n})\n\nexport class SpotifyRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifySearchComponent.html":{"url":"components/SpotifySearchComponent.html","title":"component - SpotifySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Spotify/components/spotify-search/spotify-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-search\n            \n\n            \n                styleUrls\n                ./spotify-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currElement\n                            \n                            \n                                formControl\n                            \n                            \n                                formGroupOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayName\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onOptionsChanged\n                            \n                            \n                                onSearchTextChanged\n                            \n                            \n                                playElement\n                            \n                            \n                                populateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(spotifyService: SpotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spotifyService\n                                                  \n                                                        \n                                                                        SpotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayName\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayName(element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOptionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonOptionsChanged(newFormValue: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFormValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSearchTextChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonSearchTextChanged(newValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(selectedOption: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateOptions\n                        \n                        \n                    \n                \n            \n            \n                \npopulateOptions(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {name: \"\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:24\n                            \n                        \n\n                \n                    \n                        The element of the autocomplete input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    albums: new FormControl(false),\n    songs: new FormControl(false),\n    artists: new FormControl(true),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/components/spotify-search/spotify-search.component.ts:29\n                            \n                        \n\n                \n                    \n                        The options for the autocomplete input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-spotify-search',\n  templateUrl: './spotify-search.component.html',\n  styleUrls: ['./spotify-search.component.css']\n})\nexport class SpotifySearchComponent implements OnInit, OnDestroy {\n\n\n  formControl = new FormControl();\n  formGroupOptions = new FormGroup({\n    albums: new FormControl(false),\n    songs: new FormControl(false),\n    artists: new FormControl(true),\n  });\n  constructor(private spotifyService: SpotifyService) { }\n\n  /**\n   * The element of the autocomplete input\n   */\n  currElement = {name: \"\"};\n\n  /**\n   * The options for the autocomplete input\n   */\n  options = [];\n  ngOnInit(): void {\n    // Triggers autocomplete if str.length >= 3\n    this.formControl.valueChanges.subscribe(this.onSearchTextChanged.bind(this));\n    this.formGroupOptions.valueChanges.subscribe(this.onOptionsChanged.bind(this));\n  }\n\n  onSearchTextChanged(newValue : string) {\n    if(newValue.length >= 3) {\n      this.spotifyService.fetchAutocomplete(newValue, this.formGroupOptions.value).subscribe(this.populateOptions.bind(this));\n    } else {\n      this.options = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.currElement = {name: \"\"};\n    this.options = [];\n  }\n\n\n  populateOptions(response: any) {\n\n    this.options = response.data;\n  }\n\n  displayName(element: any) {\n    if(element) {\n\n      return element.name;\n    }\n  }\n\n  playElement(selectedOption: {uri: string, type: string}) {\n    this.spotifyService.playElement(selectedOption.uri, selectedOption.type);\n  }\n\n  onOptionsChanged(newFormValue: {albums: boolean, artists: boolean, songs: boolean}) {\n    if(!newFormValue.albums && !newFormValue.artists && !newFormValue.songs) {\n\n      this.formGroupOptions.setValue({\n        albums: true,\n        songs: true,\n        artists: true\n      })\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Artists\n    Songs\n    Albums\n  \n\n  \n\n    \n    \n      \n        \n        {{option.name}}\n\n        Play\n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./spotify-search.component.css\n                \n                .full-width {\n  width:90%;\n}\n\n::ng-deep .mat-option-text {\n  display:flex !important;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.checkboxes {\n  width: 90%;\n  display:flex;\n  flex-direction:row;\n  justify-content: space-evenly;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Artists    Songs    Albums                                  {{option.name}}        Play            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyService.html":{"url":"injectables/SpotifyService.html","title":"injectable - SpotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Spotify/services/spotify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onPlaybackChanged\n                            \n                            \n                                    Private\n                                playbackChangedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSpotifyStatus\n                            \n                            \n                                fetchAutocomplete\n                            \n                            \n                                playElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/services/spotify.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkSpotifyStatus\n                        \n                        \n                    \n                \n            \n            \n                \ncheckSpotifyStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify.service.ts:23\n                \n            \n\n\n            \n                \n                    Check Spotify's status, returns true if :\n\nthere is a token\nThis token is still valid (expDate > new Date().getTime())\n\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAutocomplete(query: string, filterParams: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playElement\n                        \n                        \n                    \n                \n            \n            \n                \nplayElement(uri: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/services/spotify.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPlaybackChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.playbackChangedSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/services/spotify.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            playbackChangedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Spotify/services/spotify.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, Subscription, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private playbackChangedSource = new Subject();\n\n\n  onPlaybackChanged = this.playbackChangedSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Check Spotify's status, returns true if :\n   * 1. there is a token\n   * 2. This token is still valid (expDate > new Date().getTime())\n   */\n  checkSpotifyStatus() {\n    return localStorage.getItem('spotifyToken') != null && parseInt(localStorage.getItem('spotifyExp')) > (new Date().getTime());\n  }\n\n  fetchAutocomplete(query: string, filterParams: {albums: boolean, songs: boolean, artists: boolean}) {\n    // TODO : rewrite that\n    let params = [];\n    if(filterParams.albums) {\n      params.push('album');\n    }\n\n    if(filterParams.artists) {\n      params.push('artist');\n    }\n\n    if(filterParams.songs) {\n      params.push('track');\n    }\n\n    // TODO: Rewrite that properly\n    return this.http.get(environment.serverRoot + '/spotify/autocomp/' + query + '?type=' + params.join(','));\n  }\n\n  playElement(uri: string, type: string) {\n\n    // Will change depending on if we try to play a track or an album / an artist\n    let form: {uris?: Array, context_uri?: string} = {};\n\n    if(type === 'track') {\n      form.uris = [uri];\n    } else {\n      form.context_uri = uri;\n    }\n\n    this.http.put('https://api.spotify.com/v1/me/player/play', form).subscribe(() => {\n      this.playbackChangedSource.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyStoreTokenComponent.html":{"url":"components/SpotifyStoreTokenComponent.html","title":"component - SpotifyStoreTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyStoreTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Spotify/pages/spotify-store-token/spotify-store-token.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-store-token\n            \n\n            \n                styleUrls\n                ./spotify-store-token.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-store-token.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Spotify/pages/spotify-store-token/spotify-store-token.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/pages/spotify-store-token/spotify-store-token.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-spotify-store-token',\n  templateUrl: './spotify-store-token.component.html',\n  styleUrls: ['./spotify-store-token.component.css']\n})\nexport class SpotifyStoreTokenComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: any) => {\n      if(params.token && params.refresh) {\n        localStorage.setItem('spotifyToken', params.token);\n        localStorage.setItem('spotifyRefresh', params.refresh);\n        localStorage.setItem('spotifyExp', (new Date().getTime() + (3600 * 1000)).toString());\n        // alert('Nav to spotify');\n        this.router.navigate(['spotify/logged']);\n      }\n\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./spotify-store-token.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyStoreTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SpotifyTokenGuard.html":{"url":"guards/SpotifyTokenGuard.html","title":"guard - SpotifyTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SpotifyTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/Spotify/guards/spotify-token.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Spotify/guards/spotify-token.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyTokenGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      const token = localStorage.getItem('spotifyToken');\n      // if(token) {\n\n      //   const tokenDecoded = jwt_decode(token);\n      //   console.log(tokenDecoded);\n\n      // }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/TodoList/models/todo.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a todo element, formatted like in Mongo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __v\n                                \n                                \n                                        _id\n                                \n                                \n                                        content\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version (MongoDB specific parameter)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content of the todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the todo (not handled yet)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  /**\n   * The ID of the todo\n   */\n  _id: string;\n\n  /**\n   * The title of the todo\n   */\n  title: string;\n  /**\n   * The content of the todo\n   */\n  content: string;\n\n  /**\n   * The status of the todo (not handled yet)\n   */\n  status: boolean;\n\n  /**\n   * The version (MongoDB specific parameter)\n   */\n  __v: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TodoDataResolverService.html":{"url":"guards/TodoDataResolverService.html","title":"guard - TodoDataResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TodoDataResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/TodoList/resolvers/todo-data-resolver.service.ts\n            \n\n                \n                Description\n                \n                \n                    Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\nif todolist/add :\n    we create a new empty todo\nif todolist/:id/edit :\n    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/TodoList/resolvers/todo-data-resolver.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The todo service, used to check if there is some todo data in it\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP service, used to get the todo data if it is missing from the service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/resolvers/todo-data-resolver.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Todo } from '../models/todo';\nimport { TodoListService } from '../services/todo-list.service';\nimport { HttpService } from '../../services/http.service';\nimport { map } from 'rxjs/operators';\n/**\n * Resolver for a todo's data, used when entering todolist/:id/edit or todolist/add without context\n * if todolist/add :\n *    we create a new empty todo\n * if todolist/:id/edit :\n *    we check if we have some todo data in the service, if not, we'll call the server which will fetch the list and get what we need\n */\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TodoDataResolverService implements Resolve {\n\n  /**\n   *\n   * @param todoSvc The todo service, used to check if there is some todo data in it\n   * @param http The HTTP service, used to get the todo data if it is missing from the service\n   */\n  constructor(private todoSvc: TodoListService, private http: HttpService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Todo | import(\"rxjs\").Observable | Promise {\n    const todoId = route.paramMap.get('id');\n\n    if(!todoId) {\n      return {_id: null, title: '', content: '', status: false, __v: 0};\n    }\n    if(this.todoSvc.todos.length !== 0) {\n\n      return this.todoSvc.getTodo(todoId);\n    } else {\n      return this.http.getTodoList().pipe(map((data: Array) => {\n        let todo: Todo = data.find((currTodo) => currTodo._id === todoId);\n        return todo;\n      }));\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoEditComponent.html":{"url":"components/TodoEditComponent.html","title":"component - TodoEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/TodoList/components/todo-edit/todo-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-edit\n            \n\n            \n                styleUrls\n                ./todo-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentTitle\n                            \n                            \n                                currId\n                            \n                            \n                                currTodo\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRoute\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitForm\n                            \n                            \n                                onTodoAdded\n                            \n                            \n                                onTodoEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSvc: TodoListService, route: ActivatedRoute, titleSvc: Title, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleSvc\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRoute\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRoute(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmitForm\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTodoAdded\n                        \n                        \n                    \n                \n            \n            \n                \nonTodoAdded(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains OK or KO, depending on server response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTodoEdited\n                        \n                        \n                    \n                \n            \n            \n                \nonTodoEdited(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains OK or KO, depending on server response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Edit an element\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currTodo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Todo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/components/todo-edit/todo-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TodoListService } from '../../services/todo-list.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Todo } from 'src/app/TodoList/models/todo';\n\nimport { Title } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-todo-edit',\n  templateUrl: './todo-edit.component.html',\n  styleUrls: ['./todo-edit.component.css']\n})\nexport class TodoEditComponent implements OnInit {\n  componentTitle: string = \"Edit an element\";\n  currId: string = '';\n  editMode = false;\n  currTodo: Todo;\n\n\n  form = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n    _id: new FormControl(''),\n    status: new FormControl(false),\n    __v: new FormControl('')\n  })\n\n  constructor(private todoSvc: TodoListService, private route: ActivatedRoute, private titleSvc: Title, private router: Router) {\n    this.titleSvc.setTitle('Todo List - Edit a todo');\n   }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(this.handleRoute.bind(this));\n\n  }\n\n  handleRoute(data: {todo: Todo }) {\n\n      if(data.todo._id != null) {\n        this.editMode = true;\n      }\n\n\n      this.currId = data.todo._id;\n      this.currTodo = data.todo;\n      this.form.setValue(this.currTodo);\n  }\n\n  onSubmitForm() {\n    if(this.editMode) {\n      this.todoSvc.editTodo(this.form.value).subscribe(this.onTodoEdited.bind(this));\n\n    } else {\n      this.todoSvc.addTodo(this.form.value).subscribe(this.onTodoAdded.bind(this));\n    }\n\n  }\n  /**\n   *\n   * @param response Contains OK or KO, depending on server response\n   */\n  onTodoEdited(response: {status: string}) {\n    if(response.status === 'OK') {\n      this.todoSvc.displaySnackbar('Todo succesfully edited.');\n\n      this.router.navigate(['/todolist']);\n    }\n  }\n\n  /**\n   *\n   * @param response Contains OK or KO, depending on server response\n   */\n  onTodoAdded(response: {status: string}) {\n    if (response.status === 'OK') {\n      this.todoSvc.displaySnackbar('Todo succesfully added.');\n\n      this.router.navigate(['/todolist']);\n    }\n  }\n\n}\n\n    \n\n    \n        {{componentTitle}}\n\n\n\n  \n  \n      Title\n      \n    \n  \n\n  \n\n    \n      Content\n      \n    \n\n  \n\n  Confirm\n\n\n\n    \n\n    \n                \n                    ./todo-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{componentTitle}}          Title                        Content              Confirm'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/TodoList/pages/todo-list/todo-list.component.ts\n\n\n    \n        Description\n    \n    \n        The page containing the todo-list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-list\n            \n\n            \n                styleUrls\n                ./todo-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                requestMade\n                            \n                            \n                                themes\n                            \n                            \n                                todoListChanged$\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTodo\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTodoListSaved\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleService: Title, todoSvc: TodoListService, _snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The title service, used to define the title\n\n                                                        \n                                                \n                                                \n                                                        todoSvc\n                                                  \n                                                        \n                                                                        TodoListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TodoService, used to perform operations\n\n                                                        \n                                                \n                                                \n                                                        _snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:103\n                \n            \n\n\n            \n                \n                    Deletes a todo with id idTodo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The todo's id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:76\n                \n            \n\n\n            \n                \n                    On destroy, cleanup function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:57\n                \n            \n\n\n            \n                \n                    On init, sets the title and fetches the todos\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTodoListSaved\n                        \n                        \n                    \n                \n            \n            \n                \nonTodoListSaved(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:84\n                \n            \n\n\n            \n                \n                    Saves the todo-list, if OK, displays a snackbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['theme', 'title', 'content', 'status', 'controls']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:41\n                            \n                        \n\n                \n                    \n                        Used by ng-material, defines the columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestMade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:36\n                            \n                        \n\n                \n                    \n                        The current themes (not used yet)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription linked to todoSvc.todoListChanged, passes the new todo list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/pages/todo-list/todo-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        The current todo-list\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ɵConsole } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\nimport { TodoListService } from '../../services/todo-list.service';\nimport { Todo } from '../../models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n/**\n * The page containing the todo-list\n */\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit, OnDestroy {\n\n\n  /**\n   * Subscription linked to todoSvc.todoListChanged, passes the new todo list\n   */\n  todoListChanged$: Subscription;\n\n  requestMade = false;\n\n  /**\n   * The current todo-list\n   */\n  todos: Array = [];\n\n  /**\n   * The current themes (not used yet)\n   */\n  themes: Array = [];\n\n  /**\n   * Used by ng-material, defines the columns which are displayed in the table\n   */\n  displayedColumns = ['theme', 'title', 'content', 'status', 'controls'];\n\n\n  /**\n   *\n   * @param titleService The title service, used to define the title\n   * @param todoSvc The TodoService, used to perform operations\n   * @param _snackbar The snackbar\n   */\n  constructor(private titleService: Title,\n              private todoSvc: TodoListService,\n              private _snackbar: MatSnackBar) { }\n\n  /**\n   * On init, sets the title and fetches the todos\n   */\n  ngOnInit(): void {\n\n    this.titleService.setTitle('TodoList - List');\n\n    // TODO : à enlever\n    this.todoSvc.fetchTodosAndThemes();\n\n    // TODO: Handle error\n    this.todoListChanged$ = this.todoSvc.todoListChanged.subscribe((newTodoList: Array) => {\n\n      this.requestMade = true;\n      this.todos = newTodoList;\n\n    })\n  }\n\n  /**\n   * On destroy, cleanup function\n   */\n  ngOnDestroy() {\n    this.todoListChanged$.unsubscribe();\n    this.requestMade = false;\n  }\n\n  /**\n   * Saves the todo-list, if OK, displays a snackbar\n   */\n  saveTodoList() {\n\n    this.todoSvc.saveTodoList().subscribe(this.onTodoListSaved.bind(this));\n  }\n\n  onTodoListSaved(response: { status: string}) {\n    if(response.status === 'OK') {\n      this._snackbar.open('Todo List saved succesfully.', '', {\n        duration: 2000\n      });\n    } else {\n\n    }\n  }\n\n  /**\n   * Deletes a todo with id idTodo\n   * @param idTodo The todo's id to delete\n   */\n  deleteTodo(idTodo: string) {\n    this.todoSvc.deleteTodo(idTodo);\n  }\n\n}\n\n    \n\n    \n        Todo List\nAdd a todo\nSave todos\n\n\n  \n    \n      \n        Theme\n      \n      \n        {{todo.theme}}\n\n      \n    \n    \n      Title\n      {{todo.title}}\n    \n    \n      Content\n      {{todo.content}}\n    \n    \n      Status\n      \n        \n      \n    \n    \n      Controls\n      \n        EDIT\n        DELETE\n      \n    \n\n\n    \n    \n  \n\n\n\n\n\n  No todos found. Please click \"Add a todo\" to add one.\n\n\n\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./todo-list.component.css\n                \n                .col-theme {\n  width:15%;\n}\n\n.col-content {\n  width: 50%;\n}\n\n.col-status {\n  width: 10%;\n}\n\n.col-title {\n  width: 15%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Todo ListAdd a todoSave todos                    Theme                    {{todo.theme}}                    Title      {{todo.title}}              Content      {{todo.content}}              Status                                  Controls              EDIT        DELETE                      No todos found. Please click \"Add a todo\" to add one.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailContainerComponent', 'selector': 'app-email-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GmailComponent', 'selector': 'app-gmail'},{'name': 'GmailEmailListComponent', 'selector': 'app-email-list'},{'name': 'GmailStoreTokenComponent', 'selector': 'app-gmailstoretoken'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'ReadEmailComponent', 'selector': 'app-read-email'},{'name': 'SpotifyHomeComponent', 'selector': 'app-spotify-home'},{'name': 'SpotifyPlayerComponent', 'selector': 'app-spotify-player'},{'name': 'SpotifySearchComponent', 'selector': 'app-spotify-search'},{'name': 'SpotifyStoreTokenComponent', 'selector': 'app-spotify-store-token'},{'name': 'TodoEditComponent', 'selector': 'app-todo-edit'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoListModule.html":{"url":"modules/TodoListModule.html","title":"module - TodoListModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TodoListModule\n\n\n\ncluster_TodoListModule_declarations\n\n\n\ncluster_TodoListModule_imports\n\n\n\ncluster_TodoListModule_providers\n\n\n\n\nTodoEditComponent\n\nTodoEditComponent\n\n\n\nTodoListModule\n\nTodoListModule\n\nTodoListModule -->\n\nTodoEditComponent->TodoListModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nTodoListModule -->\n\nTodoListComponent->TodoListModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTodoListModule -->\n\nSharedModule->TodoListModule\n\n\n\n\n\nTodoListRoutingModule\n\nTodoListRoutingModule\n\nTodoListModule -->\n\nTodoListRoutingModule->TodoListModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nTodoListModule -->\n\nTodoListService->TodoListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/TodoList/todo-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TodoEditComponent\n                        \n                        \n                            TodoListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TodoListService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TodoListRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { SharedModule } from '../shared/shared.module';\nimport { TodoEditComponent } from './components/todo-edit/todo-edit.component';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { TodoListService } from './services/todo-list.service';\nimport { TodoListRoutingModule } from './todo-list.routing';\n\n@NgModule({\n  declarations: [\n    TodoListComponent,\n    TodoEditComponent,\n  ],\n  imports: [\n    MatCheckboxModule,\n    MatTableModule,\n    MatFormFieldModule,\n    SharedModule,\n    MatInputModule,\n    MatButtonModule,\n    TodoListRoutingModule\n  ],\n  providers: [\n    TodoListService\n  ]\n\n})\nexport class TodoListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoListRoutingModule.html":{"url":"modules/TodoListRoutingModule.html","title":"module - TodoListRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoListRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/TodoList/todo-list.routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { TodoEditComponent } from './components/todo-edit/todo-edit.component';\nimport { TodoListComponent } from './pages/todo-list/todo-list.component';\nimport { TodoDataResolverService } from './resolvers/todo-data-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: 'todolist', component: TodoListComponent\n  },\n  {\n    path: 'todolist/:id/edit', component: TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n  {\n    path: 'todolist/add', component: TodoEditComponent, resolve: {\n      todo: TodoDataResolverService\n    }\n  },\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(routes)\n    ],\n    exports: [\n      RouterModule\n    ]\n})\nexport class TodoListRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/TodoList/services/todo-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themes\n                            \n                            \n                                todoListChanged\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                displaySnackbar\n                            \n                            \n                                editTodo\n                            \n                            \n                                fetchTodoList\n                            \n                            \n                                fetchTodosAndThemes\n                            \n                            \n                                getTodo\n                            \n                            \n                                onTodoElementDeleted\n                            \n                            \n                                onTodoListFetched\n                            \n                            \n                                saveTodoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/TodoList/services/todo-list.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTodo\n                        \n                        \n                    \n                \n            \n            \n                \naddTodo(newTodoData: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodoData\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodo(idTodo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTodo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displaySnackbar\n                        \n                        \n                    \n                \n            \n            \n                \ndisplaySnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:67\n                \n            \n\n\n            \n                \n                    Displays a snackbar when requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \neditTodo(newTodo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTodosAndThemes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTodosAndThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodo\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTodoElementDeleted\n                        \n                        \n                    \n                \n            \n            \n                \nonTodoElementDeleted(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTodoListFetched\n                        \n                        \n                    \n                \n            \n            \n                \nonTodoListFetched(response: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTodoList\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTodoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/TodoList/services/todo-list.service.ts:58\n                \n            \n\n\n            \n                \n                    Saves the current todo list\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Dummy 1', 'Dummy 2']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/services/todo-list.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoListChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/services/todo-list.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/TodoList/services/todo-list.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport {  Subject } from 'rxjs';\nimport { Todo } from '../models/todo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService {\n  todos: Array = [];\n  themes: Array = ['Dummy 1', 'Dummy 2'];\n\n  todoListChanged = new Subject>();\n  constructor(private http: HttpService, private snackbar: MatSnackBar) { }\n\n  fetchTodosAndThemes() {\n\n    this.http.getTodoList().subscribe((response: any) => {\n      this.todos = response;\n      this.themes = [];\n\n      this.todoListChanged.next([...this.todos]);\n\n    })\n  }\n\n  getTodo(id: string) {\n\n    return this.todos.find((elem) => {\n      return elem._id === id;\n\n    });\n\n\n  }\n\n  fetchTodoList() {\n    return this.http.getTodoList().subscribe(this.onTodoListFetched.bind(this));\n  }\n\n  onTodoListFetched(response: {status: string, todos?: Array}) {\n    if (response.status === 'OK') {\n\n      this.todoListChanged.next(response.todos);\n    }\n  }\n\n  editTodo(newTodo: Todo) {\n    const _id = newTodo._id;\n    return this.http.editTodo(_id, newTodo);\n\n  }\n\n  /**\n   * Saves the current todo list\n   */\n  saveTodoList() {\n    return this.http.saveTodoList(this.todos);\n\n  }\n\n  /**\n   * Displays a snackbar when requested\n   * @param message The message to be displayed\n   */\n  displaySnackbar(message: string) {\n    this.snackbar.open(message, null, {\n      duration: 2000\n    });\n  }\n\n  deleteTodo(idTodo: string) {\n    this.http.deleteTodoElement(idTodo).subscribe(this.onTodoElementDeleted.bind(this));\n  }\n\n  onTodoElementDeleted(response:  {status: string, newList?: Array}) {\n    if(response.status === 'OK') {\n      this.todos = response.newList;\n      this.todoListChanged.next([...this.todos]);\n      this.displaySnackbar('Todo succesfully deleted');\n    } else { // TODO : handle use cases\n      this.displaySnackbar('Todo not found');\n    }\n  }\n\n  addTodo(newTodoData: Todo) {\n    return this.http.addNewTodo(newTodoData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Spotify/components/spotify-player/spotify-player.component.ts\n            \n            component\n            SpotifyPlayerComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/Spotify/components/spotify-search/spotify-search.component.ts\n            \n            component\n            SpotifySearchComponent\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/Spotify/guards/spotify-token.guard.ts\n            \n            guard\n            SpotifyTokenGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/Spotify/interceptors/spotify.interceptor.ts\n            \n            interceptor\n            SpotifyInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/Spotify/pages/spotify-home/spotify-home.component.ts\n            \n            component\n            SpotifyHomeComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/Spotify/pages/spotify-store-token/spotify-store-token.component.ts\n            \n            component\n            SpotifyStoreTokenComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Spotify/services/song.ts\n            \n            interface\n            Song\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/Spotify/services/spotify-player.service.ts\n            \n            injectable\n            SpotifyPlayerService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/Spotify/services/spotify.service.ts\n            \n            injectable\n            SpotifyService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/TodoList/components/todo-edit/todo-edit.component.ts\n            \n            component\n            TodoEditComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/TodoList/models/todo.ts\n            \n            interface\n            Todo\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/TodoList/pages/todo-list/todo-list.component.ts\n            \n            component\n            TodoListComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/TodoList/resolvers/todo-data-resolver.service.ts\n            \n            guard\n            TodoDataResolverService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/TodoList/services/todo-list.service.ts\n            \n            injectable\n            TodoListService\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/gmail/components/email-container/email-container.component.ts\n            \n            component\n            EmailContainerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/gmail/components/gmail-email-list/gmail-email-list.component.ts\n            \n            component\n            GmailEmailListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/gmail/components/gmailstoretoken/gmailstoretoken.component.ts\n            \n            component\n            GmailStoreTokenComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/gmail/gmail.component.ts\n            \n            component\n            GmailComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/gmail/interfaces/gmail-custom-email.interface.ts\n            \n            class\n            GmailCustomEmail\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/gmail/interfaces/gmail-email.interface.ts\n            \n            class\n            GmailEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/gmail/pages/read-email/read-email.component.ts\n            \n            component\n            ReadEmailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/gmail/resolvers/email-data.resolver.ts\n            \n            guard\n            GetEmailResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/gmail/services/gmail.service.ts\n            \n            injectable\n            GmailService\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/app/pages/github/github.component.ts\n            \n            component\n            GithubComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                50 %\n                (7/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.1\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ~10.1.1\n        \n            @angular/compiler : ~10.1.1\n        \n            @angular/core : ~10.1.1\n        \n            @angular/forms : ~10.1.1\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ~10.1.1\n        \n            @angular/platform-browser-dynamic : ~10.1.1\n        \n            @angular/router : ~10.1.1\n        \n            base64-js : ^1.5.1\n        \n            quoted-printable : ^1.0.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GmailRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpotifyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpotifyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoListRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
